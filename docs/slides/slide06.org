#+TITLE: 主成分分析
#+SUBTITLE: 基本的な考え方
#+AUTHOR: 村田 昇
#+EMAIL: noboru.murata@gmail.com
#+DATE: 
#+STARTUP: hidestars content indent
# Time-stamp: <2023-11-18 13:18:14 mura>
:REVEAL:
#+SETUPFILE: "./reveal.js/org/mycourse.org"
# C-c C-x C-v でinlineを切り替え
# <m C-i でlatex block (math env用)
# C-c '
:END:

* COMMENT メモ
- 第3講以降は同じファイルを使うように整理する
- 同じタイトルの項目にはメモを入れる
- 演習の内容が異なるので演習は2つ作る形で対応
- 東大は2次元，3次元の実験をするので，4次元などを考えてもらえばよい

* COMMENT 講義の内容
:PROPERTIES:
:ID:       C3082D24-D65A-44C7-9BA4-41B059058A2E
:END:
# 早稲田大学
- *第1日 : 主成分分析の考え方*
- 第2日 : 分析の評価と視覚化

#+begin_src R :exports none :tangle no
  setwd("~/Desktop/lectures/mva/course")
#+end_src
#+begin_src R :exports none
  ### 第6講 資料
  library(tidyverse)
  library(ggfortify)
  #' 日本語表示・色の設定 (ggplot)
  theme_set(theme_gray(base_size = 16))
  if(Sys.info()[["sysname"]] == "Darwin") { # MacOSか確認
    if(length(grep("BIZUDPGothic", systemfonts::system_fonts()[["name"]]))>0) 
      theme_update(text = element_text(family = "BIZUDGothic-Regular"))
    else
      theme_update(text = element_text(family = "HiraMaruProN-W4"))}
  library(see)
  options(ggplot2.discrete.colour = function() scale_colour_material(),
          ggplot2.discrete.fill = function() scale_fill_material())
#+end_src

* 講義概要
:PROPERTIES:
:ID:       6A88B213-CE1B-4A41-B601-5E0DAD4A37FB
:END:
# 東京大学
- *第1日 : 主成分分析の考え方*
- 第2日 : 分析の評価と視覚化

#+begin_src R :exports none :tangle no
  setwd("~/Desktop/lectures/u-tokyo/autumn/course")
#+end_src
#+begin_src R :exports none
  ### 第6講 サンプルコード
  library(conflicted) # 名前の衝突に対応するパッケージ
  library(tidyverse)
  conflicts_prefer( # 衝突する可能性のあるものは tidyverse の関数を優先
    dplyr::filter(),
    dplyr::select(),
    dplyr::lag(),
  )
#+end_src


* 主成分分析の考え方
** 主成分分析
- 多数の変量のもつ情報の分析・視覚化
  - 変量を効率的に縮約して少数の特徴量を構成する
  - 特徴量に関与する変量間の関係を明らかにする
- *PCA* (Principal Component Analysis)
  - 構成する特徴量 : *主成分* (princial component)

** 分析の枠組み
- \(x_{1},\dotsc,x_{p}\) : *変数* 
- \(z_{1},\dotsc,z_{d}\) : *特徴量* ( \(d\leq p\) )
- 変数と特徴量の関係 (線形結合)
  #+begin_quote
  \begin{equation}
    z_k=a_{1k}x_{1}+\cdots+a_{pk}x_{p}\quad(k=1,\dotsc,d)
  \end{equation}
  #+end_quote
  - 特徴量は定数倍の任意性があるので以下を仮定
    #+begin_quote
    \begin{equation}
      \|\boldsymbol{a}_k\|^2=\sum_{j=1}^pa_{jk}^2=1
    \end{equation}
    #+end_quote

** 主成分分析の用語
- 特徴量 \(z_k\)
  - 第 \(k\) *主成分得点* (principal component score) 
  - 第 \(k\) *主成分*
- 係数ベクトル \(\boldsymbol{a}_k\)
  - 第 \(k\) *主成分負荷量* (principal component loading)
  - 第 \(k\) *主成分方向* (principal component direction)

** 分析の目的
- 目的
  #+begin_quote
  主成分得点
  \(z_{1},\dots,z_{d}\)
  が変数
  \(x_{1},\dotsc,x_{p}\)
  の情報を効率よく反映するように主成分負荷量
  \(\boldsymbol{a}_{1},\dotsc,\boldsymbol{a}_{d}\)
  を観測データから決定する
  #+end_quote
- 分析の方針 (以下は同値)
  - データの情報を最も保持する変量の *線形結合を構成*
  - データの情報を最も反映する *座標軸を探索*
- *教師なし学習* の代表的手法の1つ
  - 特徴抽出 : 情報処理に重要な特性を変数に凝集
  - 次元縮約 : 入力をできるだけ少ない変数で表現


* 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** R : 主成分分析を実行する関数
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- Rの標準的な関数
  - ~stats::prcomp()~
  - ~stats::princomp()~
- 計算法に若干の違いがある
  - 数値計算の観点からみると ~prcomp()~ が優位
  - ~princomp()~ はS言語(商用)との互換性を重視した実装
- 本講義では ~prcomp()~ を利用

** R : 関数 ~prcomp()~ の使い方
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- データフレームの全ての列を用いる場合
  #+begin_src R :eval no :tangle no
    prcomp(x, retx = TRUE, center = TRUE, scale. = FALSE,
           tol = NULL, rank. = NULL, ...)
    #' x: 必要な変数のみからなるデータフレーム
    #' center: 中心化(平均0)を行って処理するか否か
    #' scale.: 規格化(分散1)を行って処理するか否か
  #+end_src
- 列名を指定する(formulaを用いる)場合
  #+begin_src R :eval no :tangle no
    prcomp(formula, data = NULL, subset, na.action, ...)
    #' formula: ~ 変数名 (解析の対象を + で並べる) 左辺はないので注意
    #' data: 必要な変数を含むデータフレーム
    #' 詳細は '?stats::prcomp' を参照
  #+end_src
** R : 関数 ~predict()~ の使い方
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 主成分得点を計算する関数
  #+begin_src R :eval no :tangle no
    predict(object, newdata, ...)
    #' object: prcomp が出力したオブジェクト
    #' newdata: 主成分得点を計算するデータフレーム
    #' 詳細は '?stats::prcomp' または '?stats::predict.prcomp' を参照
  #+end_src
  - 'newdata' を省略すると分析に用いたデータフレームの得点が計算される

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:ID:       D80E9915-8D2C-4F69-993D-0FE2CCEF78F9
:END:
- 数値実験により主成分分析の考え方を確認しなさい
  - 以下のモデルに従う人工データを生成する
    #+begin_src R :eval no :tangle no
      #' 観測データ (2次元) の作成 (aのスカラー倍に正規乱数を重畳)
      a <- c(1, 2)/sqrt(5) # 主成分負荷量 (単位ベクトル)
      n <- 100 # データ数
      toy_data <- tibble(runif(n, -1, 1) %o% a + rnorm(2*n, sd = 0.3))
    #+end_src
  - 観測データの散布図を作成
  - 観測データから第1主成分負荷量を推定
    #+begin_src R :eval no :tangle no
      prcomp(toy_data) # 全ての主成分を計算する
      a_hat <- prcomp(toy_data)$rotation[,1] # 負荷量(rotation)の1列目が第1主成分
    #+end_src
  - 散布図上に主成分負荷量を描画
    #+begin_src R :eval no :tangle no
      geom_abline(slope = 傾き, intercept = 切片) # 指定の直線を追加できる
    #+end_src

#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
  #' @practice 主成分分析の考え方
#+end_src
#+begin_src R :eval no :exports none
  #' 人工データ(2次元)による例
  set.seed(123123)
  n <- 100 # データ数
  a <- c(1, 2)/sqrt(5) # 主成分負荷量(単位ベクトル)の設定 (適宜変更せよ)
  toy_data <- # aのスカラー倍に正規乱数を重畳(行列として作成)
    runif(n,-1,1) %o% a + rnorm(2*n, sd=0.3) 
  colnames(toy_data) <- paste0("x", 1:2) # 行列に列名(x1,x2)を付与
  toy_data <- as_tibble(toy_data) 
  p <-
    toy_data |>
    ggplot(aes(x = x1, y = x2)) +
    geom_point(colour = "blue", shape = 4) +
    geom_abline(slope = a[2]/a[1], # 真の傾き=真の負荷量のy成分/x成分
                intercept = 0, colour = "red") +  # 主成分負荷量の図示
    xlim(c(-2,2)) + ylim(c(-2,2)) # xy軸を揃えて直交関係を見易くする
    ## coord_fixed() # 縦横比を1としてもよいが，領域はデータに依存する
  #' a方向に本質的な情報が集約されていることがわかる
  print(p)
  #' 主成分負荷量の推定
  toy_pca <- prcomp(toy_data)
  a_hat <- toy_pca$rotation[,1]
  #' 第１主成分負荷量がaに非常に近い (乱数によっては符号が反対になることもある)
  p +
    geom_abline(slope = a_hat[2]/a_hat[1], intercept = 0,
                colour = "orange", linetype = "dashed")
  #' 主成分得点の計算
  pc1 <- predict(toy_pca)[,1] # 第１主成分得点の取得
  toy_pc1 <- pc1 %o% a_hat
  colnames(toy_pc1) <- paste0("x", 1:2)
  toy_pc1 <- as_tibble(toy_pc1)
  p +
    geom_point(data = toy_pc1, # 第1主成分を元の散布図上で図示
               aes(x = x1, y = x2),
               colour = "purple", shape = 18)
#+end_src
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
#+end_src
  
  # #+begin_quote
  # 主成分負荷量 (単位ベクトル):
  #   \begin{equation}
  #     \boldsymbol{a}=(1/\sqrt{5},2/\sqrt{5})
  #   \end{equation}
  # 観測データ (2次元):
  #   \begin{equation}
  #     \boldsymbol{x}= s\times\boldsymbol{a} + \epsilon,
  #     \quad
  #     s\sim\mathcal{U}(-1,1),\;
  #     \epsilon\sim\mathcal{N}(0,0.2^{2})
  #   \end{equation}
  # #+end_quote

** COMMENT 演習: 2次元人工データの主成分分析
:PROPERTIES:
:reveal_background: #EEEEFF
:end:
- [[./code/07-toy.r][07-toy.r]] の前半を確認してみよう


* 第1主成分の計算
** 記号の準備
- 変数 : \(x_{1},\dotsc,x_{p}\) (\(p\)次元)
- 観測データ : \(n\) 個の \((x_{1},\dotsc,x_{p})\) の組
  #+begin_quote
  \begin{equation}
    \{(x_{i1},\dots,x_{ip})\}_{i=1}^n
  \end{equation}
  #+end_quote
- ベクトル表現
  - \(\boldsymbol{x}_{i}=(x_{i1},\dots,x_{ip})^{\mathsf{T}}\) :
    \(i\) 番目の観測データ (\(p\) 次元空間内の1点)
  - \(\boldsymbol{a}=(a_{1},\dots,a_{p})^{\mathsf{T}}\) : 
    長さ1の \(p\) 次元ベクトル

** 係数ベクトルによる射影
- データ \(\boldsymbol{x}_{i}\) の \(\boldsymbol{a}\) 方向成分の長さ
  #+begin_quote
  \begin{equation}
    \boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i}
    \quad\text{(スカラー)}
  \end{equation}
  #+end_quote
- 方向ベクトル \(\boldsymbol{a}\)
  をもつ直線上への点 \(\boldsymbol{x}_{i}\)
  の直交射影
  #+begin_quote
  \begin{equation}
    (\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i})\,\boldsymbol{a}
    \quad\text{(スカラー \(\times\) ベクトル)}
  \end{equation}
  #+end_quote

** 幾何学的描像
#+CAPTION: 観測データの直交射影 (\(p=2,n=2\) の場合)
#+NAME:   fig:pca
#+ATTR_HTML: :width 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:./figs/pca-figure.png]]
   
** ベクトル \(\boldsymbol{a}\) の選択の指針
- 射影による特徴量の構成
  #+begin_quote
  ベクトル \(\boldsymbol{a}\) を *うまく* 選んで
  観測データ \(\boldsymbol{x}_{1},\cdots,\boldsymbol{x}_{n}\)
  の情報を最も保持する1変量データ \(z_{1},\cdots,z_{n}\)を構成
  \begin{equation}
    z_{1}=\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{1},
    z_{2}=\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_2,
    \dotsc,
    z_{n}=\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_n
  \end{equation}
  #+end_quote
- 特徴量のばらつきの最大化
  #+begin_quote
  観測データの *ばらつき*
  を最も反映するベクトル \(\boldsymbol{a}\) を選択
  \begin{equation}
    \arg\max_{\boldsymbol{a}}
    \sum_{i=1}^n(\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i}
    -\boldsymbol{a}^{\mathsf{T}}\bar{\boldsymbol{x}})^2,
    \quad
    \bar{\boldsymbol{x}}
    =
    \frac{1}{n}\sum_{i=1}^n\boldsymbol{x}_{i},
  \end{equation}
  #+end_quote

** ベクトル \(\boldsymbol{a}\) の最適化
- 最適化問題
  #+begin_quote
  制約条件 \(\|\boldsymbol{a}\|=1\) の下で
  以下の関数を最大化せよ
  \begin{equation}
    f(\boldsymbol{a})
    =
    \sum_{i=1}^n(\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i}
    -\boldsymbol{a}^{\mathsf{T}}\bar{\boldsymbol{x}})^2
  \end{equation}
  #+end_quote
- この最大化問題は必ず解をもつ
  - \(f(\boldsymbol{a})\) は連続関数
  - 集合 \(\{\boldsymbol{a}\in\mathbb{R}^p:\|\boldsymbol{a}\|=1\}\) はコンパクト(有界閉集合)

    
* COMMENT 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下の問に答えなさい
  - 評価関数 \(f(\boldsymbol{a})\)
    を以下の中心化したデータ行列で表しなさい
    #+begin_quote
    \begin{equation}
      X
      =
      \begin{pmatrix}
        \boldsymbol{x}_{1}^{\mathsf{T}}-\bar{\boldsymbol{x}}^{\mathsf{T}} \\
        \vdots \\
        \boldsymbol{x}_{n}^{\mathsf{T}}-\bar{\boldsymbol{x}}^{\mathsf{T}}
      \end{pmatrix}
      =
      \begin{pmatrix}
        x_{11}-\bar{x}_{1} & \cdots & x_{1p}-\bar{x}_{p}\\
        \vdots & & \vdots \\
        x_{n1}-\bar{x}_{1} & \cdots & x_{np}-\bar{x}_{p}
      \end{pmatrix}
    \end{equation}
    #+end_quote
  - 上の結果を用いて次の最適化問題の解の条件を求めなさい
    #+begin_quote
    \begin{equation}
      \text{maximize}\quad
      f(\boldsymbol{a})
      \quad\text{s.t.}\quad
      \boldsymbol{a}^{\mathsf{T}}\boldsymbol{a}=1
    \end{equation}
    #+end_quote

** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
  - 定義どおりに計算する
    #+begin_quote
    \begin{align}
      f(\boldsymbol{a})
      &=
        \sum_{i=1}^n(\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i}
        -\boldsymbol{a}^{\mathsf{T}}\bar{\boldsymbol{x}})^2\\
      &=
        \sum_{i=1}^n
        (\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i}
        -\boldsymbol{a}^{\mathsf{T}}\bar{\boldsymbol{x}})
        (\boldsymbol{x}_{i}^{\mathsf{T}}\boldsymbol{a}
        -\bar{\boldsymbol{x}}\boldsymbol{a}^{\mathsf{T}})\\
      &=
        \boldsymbol{a}^{\mathsf{T}}X^{\mathsf{T}}X\boldsymbol{a}
    \end{align}
    #+end_quote
    - 回帰分析の Gram 行列を参照

#+reveal: split
- 制約付き最適化なので未定係数法を用いればよい
  #+begin_quote
  \begin{equation}
    L(\boldsymbol{a},\lambda)
    =f(\boldsymbol{a})+\lambda(1-\boldsymbol{a}^{\mathsf{T}}\boldsymbol{a})
  \end{equation}
  の鞍点
  \begin{equation}
    \frac{\partial}{\partial\boldsymbol{a}}L(\boldsymbol{a},\lambda)
    =0
  \end{equation}
  を求めればよいので
  \begin{align}
    2X^{\mathsf{T}}X\boldsymbol{a}-2\lambda\boldsymbol{a}
    &=0\\
    X^{\mathsf{T}}X\boldsymbol{a}
    &=\lambda\boldsymbol{a}
      \quad\text{(固有値問題)}
  \end{align}
  #+end_quote


* 第1主成分の解
** 行列による表現
# 東京大学
- 中心化したデータ行列
  #+begin_quote
  \begin{equation}
    X
    =
    \begin{pmatrix}
      \boldsymbol{x}_{1}^{\mathsf{T}}-\bar{\boldsymbol{x}}^{\mathsf{T}} \\
      \vdots \\
      \boldsymbol{x}_{n}^{\mathsf{T}}-\bar{\boldsymbol{x}}^{\mathsf{T}}
    \end{pmatrix}
    =
    \begin{pmatrix}
      x_{11}-\bar{x}_{1} & \cdots & x_{1p}-\bar{x}_{p}\\
      \vdots & & \vdots \\
      x_{n1}-\bar{x}_{1} & \cdots & x_{np}-\bar{x}_{p}
    \end{pmatrix}
  \end{equation}
  #+end_quote
  # - 回帰分析のデザイン行列を参照
- 評価関数 \(f(\boldsymbol{a})\) は行列 \(X^{\mathsf{T}}X\) 
  の二次形式
  #+begin_quote
  \begin{equation}
    f(\boldsymbol{a})
    =
    \boldsymbol{a}^{\mathsf{T}}X^{\mathsf{T}}X\boldsymbol{a}
  \end{equation}
  #+end_quote
  # - 回帰分析の Gram 行列を参照

** COMMENT ベクトル \(\boldsymbol{a}\) の解
# 早稲田大学
- 最適化問題
  #+begin_quote
  \begin{equation}
    \text{maximize}\quad
    f(\boldsymbol{a})
    =
    \boldsymbol{a}^{\mathsf{T}}X^{\mathsf{T}}X\boldsymbol{a}
    \quad\text{s.t.}\quad
    \boldsymbol{a}^{\mathsf{T}}\boldsymbol{a}=1
  \end{equation}
  #+end_quote
- 固有値問題
  #+begin_quote
  \(f(\boldsymbol{a})\) の極大値を与える \(\boldsymbol{a}\) は
  \(X^{\mathsf{T}}X\) の固有ベクトルとなる
  \begin{equation}
    X^{\mathsf{T}}X\boldsymbol{a}
    =
    \lambda\boldsymbol{a}
  \end{equation}
  #+end_quote

** ベクトル \(\boldsymbol{a}\) の解
# 東京大学
- 最適化問題
  #+begin_quote
  \begin{equation}
    \text{maximize}\quad
    f(\boldsymbol{a})
    =
    \boldsymbol{a}^{\mathsf{T}}X^{\mathsf{T}}X\boldsymbol{a}
    \quad\text{s.t.}\quad
    \boldsymbol{a}^{\mathsf{T}}\boldsymbol{a}=1
  \end{equation}
  #+end_quote

#+reveal: split
- 制約付き最適化なので未定係数法を用いればよい
  #+begin_quote
  \begin{equation}
    L(\boldsymbol{a},\lambda)
    =f(\boldsymbol{a})+\lambda(1-\boldsymbol{a}^{\mathsf{T}}\boldsymbol{a})
  \end{equation}
  の鞍点
  \begin{equation}
    \frac{\partial}{\partial\boldsymbol{a}}L(\boldsymbol{a},\lambda)
    =0
  \end{equation}
  を求めればよいので
  \begin{align}
    2X^{\mathsf{T}}X\boldsymbol{a}-2\lambda\boldsymbol{a}
    &=0\\
    X^{\mathsf{T}}X\boldsymbol{a}
    &=\lambda\boldsymbol{a}
      \quad\text{(固有値問題)}
  \end{align}
  #+end_quote

#+reveal: split
- 解の条件
  #+begin_quote
  \(f(\boldsymbol{a})\) の極大値を与える \(\boldsymbol{a}\) は
  \(X^{\mathsf{T}}X\) の固有ベクトルとなる
  \begin{equation}
    X^{\mathsf{T}}X\boldsymbol{a}
    =
    \lambda\boldsymbol{a}
  \end{equation}
  #+end_quote

** 第1主成分
- 固有ベクトル\(\boldsymbol{a}\)に対する\(f(\boldsymbol{a})\)
  は行列 \(X^{\mathsf{T}}X\) の固有値
  #+begin_quote
  \begin{equation}
    f(\boldsymbol{a})
    =\boldsymbol{a}^{\mathsf{T}}X^{\mathsf{T}}X\boldsymbol{a}
    =\boldsymbol{a}^{\mathsf{T}}\lambda\boldsymbol{a}
    =\lambda
  \end{equation}
  #+end_quote
- 求める \(\boldsymbol{a}\)
  は行列 \(X^{\mathsf{T}}X\) の最大固有ベクトル (長さ1)
- *第1主成分負荷量* : 最大(第一)固有ベクトル \(\boldsymbol{a}\)
- *第1主成分得点*
  #+begin_quote
  \begin{equation}
    z_{i1}
    =a_{1}x_{i1}+\cdots+a_{p}x_{ip}
    =\boldsymbol{a}^{\mathsf{T}}\boldsymbol{x}_{i},
    \quad(i=1,\dots,n)
  \end{equation}
  #+end_quote


* 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:ID:       4B9B1B57-7C07-4292-B8AE-ECC44BF4FACD
:END:
- 第1主成分とGram行列の固有ベクトルの関係を調べなさい
  - 人工データを生成する
  - 主成分分析を実行する
  - Gram 行列を計算し固有値・固有ベクトルを求める
    #+begin_src R :eval no
      #' 中心化を行う
      X <- scale(toy_data, scale = FALSE)
      #' 詳細は '?base::scale' を参照
      #' Gram 行列を計算する
      G <- crossprod(X)
      #' 固有値・固有ベクトルを求める
      eigen(G) # 返り値 'values, vectors' を確認
      #' 詳細は '?base::eigen' を参照
    #+end_src

#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
  #' @practice 第1主成分の求め方
#+end_src
#+begin_src R :eval no :exports none
  #' 人工データ(3次元)による例
  set.seed(242424)
  n <- 50 # データ数
  d <- 3
  a <- rnorm(d)
  (a <- a/sqrt(sum(a^2))) # 主成分負荷量(単位ベクトル)を生成
  toy_data <- runif(n, -1, 1) %o% a + rnorm(d*n, sd = 0.1)
  colnames(toy_data) <- paste0("x", 1:d) # 行列に列名(x1,...,xd)を付与
  toy_data <- as_tibble(toy_data)
  GGally::ggpairs(toy_data) # 散布図行列
  toy_pca <- prcomp(toy_data)
  pc1 <- predict(toy_pca)[,1] # 推定された第一主成分負荷量を取得
  #' 以下の図は3次元のときのみ実行可能
  s3d <- scatterplot3d::scatterplot3d(toy_data, type="h", asp=1,
                                      highlight.3d=TRUE)
  s3d$points3d(pc1 %o% a, col="blue")

  #' 主成分負荷量の推定を固有値分解と比較
  toy_eigen <- eigen(crossprod(scale(toy_data,scale=FALSE))) # 固有値分解
  toy_pca$rotation # 主成分負荷量
  toy_eigen$vectors  # 固有ベクトル (符号を除いて主成分負荷量と一致)
  toy_pca$sdev               # 主成分の標準偏差
  sqrt(toy_eigen$values/(n-1)) # 固有値と主成分の標準偏差の関係
#+end_src
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
#+end_src
  
** COMMENT 演習: 第1主成分の計算
:PROPERTIES:
:reveal_background: #EEEEFF
:end:
- [[./code/07-eigen.r][07-eigen.r]] を確認してみよう


* Gram 行列の性質
** Gram 行列の固有値
- \(X^{\mathsf{T}}X\) は非負定値対称行列
- \(X^{\mathsf{T}}X\) の固有値は0以上の実数
  - 固有値を重複を許して降順に並べる
    #+begin_quote
    \begin{equation}
      \lambda_{1}\geq\dotsb\geq\lambda_{p}\quad(\geq0)
    \end{equation}
    #+end_quote
  - 固有値 \(\lambda_{k}\) に対する固有ベクトルを \(\boldsymbol{a}_{k}\)(長さ1)とする
    #+begin_quote
    \begin{equation}
      \|\boldsymbol{a}_{k}\|=1,
      \quad (k=1,\dotsc,p)
    \end{equation}
    #+end_quote

** Gram 行列のスペクトル分解
- \(\boldsymbol{a}_{1},\dotsc,\boldsymbol{a}_{p}\) は *互いに直交* するようとることができる
  #+begin_quote
  \begin{equation}
    j\neq k
    \quad\Rightarrow\quad
    \boldsymbol{a}_{j}^{\mathsf{T}}\boldsymbol{a}_k=0
  \end{equation}
  #+end_quote
- 行列 \(X^{\mathsf{T}}X\) (非負定値対称行列) のスペクトル分解
  #+begin_quote
  \begin{align}
    X^{\mathsf{T}}X
    &=\lambda_{1}\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}+
      \lambda_{2}\boldsymbol{a}_{2}\boldsymbol{a}_{2}^{\mathsf{T}}+
      \dotsb+\lambda_{p}\boldsymbol{a}_{p}\boldsymbol{a}_{p}^{\mathsf{T}}\\
    &=\sum_{k=1}^{p}\lambda_{k}\boldsymbol{a}_{k}\boldsymbol{a}_{k}^{\mathsf{T}}
  \end{align}
  #+end_quote
  - 固有値と固有ベクトルによる行列の表現


* COMMENT 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下の問に答えなさい
  - Gram 行列のスペクトル分解において
    \(\lambda_{j}\) と \(\boldsymbol{a}_{j}\)
    が固有値・固有ベクトルとなることを確かめなさい
    #+begin_quote
    \begin{equation}
      X^{\mathsf{T}}X
      =\sum_{k=1}^{p}\lambda_{k}\boldsymbol{a}_{k}\boldsymbol{a}_{k}^{\mathsf{T}}
    \end{equation}
    #+end_quote
  - 以下の行列を用いて Gram 行列のスペクトル分解を書き直しなさい
    #+begin_quote
    \begin{equation}
      A
      =
      \begin{pmatrix}
        \boldsymbol{a}_{1}^{\mathsf{T}}\\
        \vdots \\
        \boldsymbol{a}_{p}^{\mathsf{T}}
      \end{pmatrix},
      \quad
      \Lambda
      =
      \begin{pmatrix}
        \lambda_{1} & 0 & \dotsm & 0\\
        0 & \lambda_{2} & \dotsm & 0\\
        0 & 0 & \ddots & 0\\
        0 & 0 & \dotsm & \lambda_{p}\\
      \end{pmatrix}
    \end{equation}
    #+end_quote

** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 固有ベクトルの直交性に注意する
  #+begin_quote
  \begin{align}
    X^{\mathsf{T}}X\boldsymbol{a}_{j}
    &=\sum_{k=1}^{p}\lambda_{k}\boldsymbol{a}_{k}\boldsymbol{a}_{k}^{\mathsf{T}}\boldsymbol{a}_{j}
    &&\text{(直交性)}\\
    &=\lambda_{j}\boldsymbol{a}_{j}\boldsymbol{a}_{j}^{\mathsf{T}}\boldsymbol{a}_{j}
    &&\text{(単位ベクトル)}\\
    &=\lambda_{j}\boldsymbol{a}_{j}
  \end{align}
  #+end_quote

#+reveal: split
- 転置に注意して計算する
  #+begin_quote
  \begin{equation}
    X^{\mathsf{T}}X
    =
    A^{\mathsf{T}}\Lambda A
  \end{equation}
  #+end_quote


* 第2主成分以降の計算
** 第2主成分の考え方
- 第1主成分
  - 主成分負荷量 : ベクトル \(\boldsymbol{a}_{1}\)
  - 主成分得点 : \(\boldsymbol{a}_{1}^{\mathsf{T}}\boldsymbol{x}_{i}\) (\(i=1,\dotsc,n\))
- 第1主成分負荷量に関してデータが有する情報
  #+begin_quote
  \begin{equation}
    (\boldsymbol{a}_{1}^{\mathsf{T}}\boldsymbol{x}_{i})\,\boldsymbol{a}_{1}
    \quad(i=1,\dotsc,n)
  \end{equation}
  #+end_quote
- 第1主成分を取り除いた観測データ (分析対象)
  #+begin_quote
  \begin{equation}
    \tilde{\boldsymbol{x}}_{i}
    =
    \boldsymbol{x}_{i}
    -(\boldsymbol{a}_{1}^{\mathsf{T}}\boldsymbol{x}_{i})\,\boldsymbol{a}_{1}
    \quad(i=1,\dotsc,n)
  \end{equation}
  #+end_quote

** 第2主成分の最適化
- 最適化問題
  #+begin_quote
  制約条件 \(\|\boldsymbol{a}\|=1\) の下で
  以下の関数を最大化せよ
  \begin{equation}
    \tilde{f}(\boldsymbol{a})
    =
    \sum_{i=1}^n(\boldsymbol{a}^{\mathsf{T}}\tilde{\boldsymbol{x}}_{i}
    -\boldsymbol{a}^{\mathsf{T}}\bar{\tilde{\boldsymbol{x}}})^2
    \quad\text{ただし}\quad
    \bar{\tilde{\boldsymbol{x}}}
    =
    \frac{1}{n}\sum_{i=1}^n\tilde{\boldsymbol{x}}_{i}
  \end{equation}
  #+end_quote


* COMMENT 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下の問に答えなさい
  - 以下の中心化したデータ行列を
    \(X\) と \(\boldsymbol{a}_{1}\)
    で表しなさい
    #+begin_quote
    \begin{equation}
      \tilde{X}
      =
      \begin{pmatrix}
        \tilde{\boldsymbol{x}}_{1}^{\mathsf{T}}-\bar{\tilde{\boldsymbol{x}}}^{\mathsf{T}} \\
        \vdots \\
        \tilde{\boldsymbol{x}}_{n}^{\mathsf{T}}-\bar{\tilde{\boldsymbol{x}}}^{\mathsf{T}}
      \end{pmatrix}
    \end{equation}
    #+end_quote
  - 上の結果を用いて
    次の最適化問題の解を求めなさい
    #+begin_quote
    \begin{equation}
      \text{maximize}\quad
      \tilde{f}(\boldsymbol{a})
      \quad\text{s.t.}\quad
      \boldsymbol{a}^{\mathsf{T}}\boldsymbol{a}=1
    \end{equation}
    #+end_quote
    
** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 定義どおりに計算する
  #+begin_quote
  \begin{equation}
    \tilde{X}
    =
    \begin{pmatrix}
      \tilde{\boldsymbol{x}}_{1}^{\mathsf{T}}-\bar{\tilde{\boldsymbol{x}}}^{\mathsf{T}} \\
      \vdots \\
      \tilde{\boldsymbol{x}}_{n}^{\mathsf{T}}-\bar{\tilde{\boldsymbol{x}}}^{\mathsf{T}}
    \end{pmatrix}
    =
    X-X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
  \end{equation}
  #+end_quote

#+reveal: split
- Gram 行列 \(\tilde{X}^{\mathsf{T}}\tilde{X}\) を計算する
  #+begin_quote
  \begin{align}
    \tilde{X}^{\mathsf{T}}\tilde{X}
    &=
      (X-X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}})^{\mathsf{T}}
      (X-X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}})\\
    &=
      X^{\mathsf{T}}X
      -X^{\mathsf{T}}X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
      -\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}X^{\mathsf{T}}X
      +\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}X^{\mathsf{T}}X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}\\
    &=
      X^{\mathsf{T}}X-\lambda_{1}\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}\\
    &=
      \sum_{k=2}^{p}\lambda_{k}\boldsymbol{a}_{k}\boldsymbol{a}_{k}^{\mathsf{T}}
  \end{align}
  元の Gram 行列 \(X^{\mathsf{T}}X\)
  の固有ベクトル \(\boldsymbol{a}_{1}\)
  の固有値が0となっていると考えることができる
  #+end_quote


* 第2主成分以降の解
** 行列による表現
# 東京大学
- 中心化したデータ行列
  #+begin_quote
  \begin{equation}
    \tilde{X}
    =
    \begin{pmatrix}
      \tilde{\boldsymbol{x}}_{1}^{\mathsf{T}}-\bar{\tilde{\boldsymbol{x}}}^{\mathsf{T}} \\
      \vdots \\
      \tilde{\boldsymbol{x}}_{n}^{\mathsf{T}}-\bar{\tilde{\boldsymbol{x}}}^{\mathsf{T}}
    \end{pmatrix}
    =
    X-X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
  \end{equation}
  #+end_quote

#+reveal: split
- Gram 行列
  #+begin_quote
  \begin{align}
    \tilde{X}^{\mathsf{T}}\tilde{X}
    &=
      (X-X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}})^{\mathsf{T}}
      (X-X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}})\\
    &=
      X^{\mathsf{T}}X
      - X^{\mathsf{T}}X\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
      - \boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}X^{\mathsf{T}}X
      + \boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}X^{\mathsf{T}}X
      \boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}\\
    &=
      X^{\mathsf{T}}X
      - \lambda_{1}\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
      - \lambda_{1}\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
      + \lambda_{1}\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}
      \boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}\\
    &=
      X^{\mathsf{T}}X
      - \lambda_{1}\boldsymbol{a}_{1}\boldsymbol{a}_{1}^{\mathsf{T}}\\
    &=
      \sum_{k=2}^{p}\lambda_{k}\boldsymbol{a}_{k}\boldsymbol{a}_{k}^{\mathsf{T}}
  \end{align}
  #+end_quote

** 第2主成分
- Gram 行列 \(\tilde{X}^{\mathsf{T}}\tilde{X}\)
  の固有ベクトル \(\boldsymbol{a}_{1}\) の固有値は 0
  #+begin_quote
  \begin{equation}
    \tilde{X}^{\mathsf{T}}\tilde{X}\boldsymbol{a}_{1}
    = 0
  \end{equation}
  #+end_quote
- Gram 行列 \(\tilde{X}^{\mathsf{T}}\tilde{X}\)
  の最大固有値は
  \(\lambda_2\)
- 解は第2固有値 \(\lambda_2\) に対応する固有ベクトル \(\boldsymbol{a}_2\)
-----
- 以下同様に
  第 \(k\) 主成分負荷量は 
  \(X^{\mathsf{T}}X\) の第 \(k\) 固有値 \(\lambda_k\)
  に対応する固有ベクトル \(\boldsymbol{a}_k\)


* 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** データセットの準備
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 主成分分析では以下のデータセットを使用する
  - ~japan_social.csv~ (配付)
    #+begin_quote
    総務省統計局より取得した都道府県別の社会生活統計指標の一部
    - Pref : 都道府県名
    - Forest : 森林面積割合 (%) 2014年
    - Agri : 就業者１人当たり農業産出額(販売農家）(万円) 2014年
    - Ratio : 全国総人口に占める人口割合 (%) 2015年
    - Land : 土地生産性（耕地面積１ヘクタール当たり）(万円) 2014年
    - Goods : 商業年間商品販売額［卸売業＋小売業］（事業所当たり）(百万円) 2013年
    - Area : 地方区分
    #+end_quote
    - 参考 : [[https://www.e-stat.go.jp/SG1/estat/List.do?bid=000001083999&cycode=0]]

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:ID:       DD70B52B-E947-4135-A2D3-80C103FB662F
:END:
- 前掲のデータを用いて主成分分析を行いなさい
  - 都道府県名を行名としてデータを読み込む
    #+begin_src R :eval no :tangle no
      js_data <- read_csv("data/japan_social.csv")
    #+end_src
  - データの散布図行列を描く
  - 各データの箱ひげ図を描き，変数の大きさを確認する
  - 主成分負荷量を計算する
    #+begin_src R :eval no :tangle no
      js_pca <- prcomp(js_data[-c(1,7)], scale. = TRUE)
      #' '-c(1,7)' は都道府県名・地方区分を除く．関数 select() を利用することもできる
      #' 'scale.=TRUE' とすると変数を正規化してから解析する
    #+end_src
    
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
  #' @practice 主成分分析
#+end_src
#+begin_src R :eval no :exports none
  #' 都道府県別の社会生活統計指標の主成分分析

  #' データの読み込み
  js_data <- read_csv("data/japan_social.csv") |>
    mutate(Area = as_factor(Area)) # 地方区分を因子化
  #' データの視覚化
  js_data |> # 散布図．いくつかの変数は相関強いことがわかる
    select(!c(Pref,Area)) |>  # 都道府県名・地方区分は削除
    GGally::ggpairs() 
  js_data |> # 箱ひげ図．変数のばらつきに大きな違いがある
    pivot_longer(!c(Pref,Area)) |> # 都道府県名・地方区分以外をまとめる
    ggplot(aes(x = name, y = value)) + # 既定値の name と value を利用
    geom_boxplot(aes(fill = name), show.legend = FALSE) # 変数ごとに色を変える
  (js_pca <- js_data |>
     select(where(is.double)) |> # 実数値の列(都道府県名・地方区分)を抽出
     prcomp(scale. = TRUE)) # 変数のばらつきを規格化
  #' 主成分方向から読み取れること:
  #' 第1: 人の多さに関する成分(正の向きほど人が多い)
  #' 第2: 農業生産力に関する成分(正の向きほど高い)
  #' 第1，第2主成分得点による地図の作成
  as_tibble(predict(js_pca)) |> # 主成分得点
    mutate(Pref = js_data[["Pref"]], # 都道府県名
           Area = js_data[["Area"]]) |> # 因子化した地方区分
    ggplot(aes(x = PC1, y = PC2)) + 
    geom_point(aes(colour = Area), shape = 19, size = 2) + # 地方区分ごとに色を変える
    geom_text(aes(label = Pref), colour = "darkgray", 
              hjust = 0, nudge_x = 0.1, check_overlap = TRUE)
  #' 寄与率の表示．次週詳しく説明する
  summary(js_pca) 

  #' @notes
  #' 関数ggfortify::autoplot()の利用．次週詳しく説明する
  autoplot(js_pca) + 
    geom_text(label = js_data[["Pref"]], # 都道府県名を追加 
              hjust = 0, nudge_x = 0.01) # 横にずらして表示
  autoplot(js_pca, data = js_data, colour = "Area") + # 地方区分ごとに点の色を変える
    geom_text(label = js_data[["Pref"]], 
              hjust = 0, nudge_x = 0.01,
              check_overlap = TRUE) # 重なっているラベルを消す

  #' 2変数での解析例 (AgriとLandを取り上げる，その他の組み合わせでも試みよ)
  #' 多変数での視覚化は次週詳しく説明する
  js_pca2 <- js_data |>
    select(c(Agri,Land)) |>
    prcomp(scale. = TRUE)
  a_hat <- js_pca2$rotation[,1] # 主成分負荷量のベクトルを取得
  js_pc1 <- predict(js_pca2)[,1] %o% a_hat # 第1主成分を行列・ベクトルで計算
  colnames(js_pc1) <- paste0("x", 1:2) # 列名の付与
  js_pc1 <- as_tibble(js_pc1) # データフレーム化
  js_data |> # 数値列のみ中心化・規格化する
    mutate(across(where(is.double), \(x)c(scale(x)))) |>
    ggplot(aes(x = Agri, y = Land)) +
    geom_point(colour = "blue", shape = 4) +
    geom_abline(slope = a_hat[2]/a_hat[1], # 主成分負荷量(方向)の図示
                intercept = 0, colour = "orange") +  
    geom_point(data = js_pc1, # 第1主成分を元の散布図上で図示
               aes(x = x1, y = x2),
               colour = "purple", shape = 18) +
    coord_fixed() # 縦横比を1に指定
#+end_src
#+begin_src R :exports none
  #' @notes
  #' データフレームの特定の列のみ変換を行うには関数 dplyr::across() を利用する
  #' 関数を組み合わせることで様々な条件が表現できる．
  #' 具体的な例は '?dplyr::across' や '?tidyselect::where' を参照
  #' 関数 base::scale() は行列を返すため，そのまま用いると列名が変更される
  #' 上記の例ではベクトルを作成する関数 base::c() と 無名関数を用いてこれを解消している
  #' 無名関数の代わりにラムダ式 '~c(scale(.))' などを用いることもできる
  #' ---------------------------------------------------------------------------
#+end_src

** COMMENT 講義資料: 実データによる主成分分析
:PROPERTIES:
:reveal_background: #EEEEFF
:end:
- [[./code/07-pca.r][07-pca.r]] を確認してみよう
** COMMENT 講義資料
:PROPERTIES:
:reveal_background: #EEEEFF
:end:
- 以下のデータを用いて主成分分析を行ってみよう
  - datasets::USArrests
  - MASS::Cars93
  - MASS::UScereal


* COMMENT 解析の事例
# 早稲田大学
** データセットについて
- 総務省統計局より取得した都道府県別の社会生活統計指標(自然環境・経済基盤)の一部
  - 総務省 [[https://www.e-stat.go.jp/SG1/estat/List.do?bid=000001083999&cycode=0]]
  - データ https://noboru-murata.github.io/multivariate-analysis/data/japan_social.csv
    #+begin_quote
    - Pref : 都道府県名
    - Forest : 森林面積割合 (%) 2014年
    - Agri : 就業者１人当たり農業産出額(販売農家）(万円) 2014年
    - Ratio : 全国総人口に占める人口割合 (%) 2015年
    - Land : 土地生産性（耕地面積１ヘクタール当たり）(万円) 2014年
    - Goods : 商業年間商品販売額［卸売業＋小売業］（事業所当たり）(百万円) 2013年
    - Area : 地方区分
    #+end_quote

** 社会生活統計指標の分析
:PROPERTIES:
:ID:       D680F3ED-E66C-496B-A436-4C5F5DAF0B6B
:END:
- データ(の一部)の内容
  #+begin_src R :exports none
    #' データの読み込み
    js_data <- read_csv("data/japan_social.csv")
  #+end_src
  #+html: <font size=5>
  #+begin_src R :exports results :results output html :tangle no
    #' データの表示(reveal用)
    js_data |> slice(1:15) |>
      stargazer::stargazer(summary = FALSE,
                           rownames = FALSE,
                           title = "社会生活統計指標",
                           type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' データの表示(latex用)
    js_data |>
      stargazer::stargazer(summary = FALSE,
                           rownames = FALSE,
                           title = "社会生活統計指標",
                           font.size = "small", type = "latex")
  #+end_src
  
#+reveal: split
- データの散布図
  #+begin_src R :file figs/06_pairs.png :exports results :results graphics
    #' データの視覚化
    js_data |> # 散布図．いくつかの変数は相関強いことがわかる
      select(where(is.double)) |>  # 都道府県名・地方区分は削除
      GGally::ggpairs() 
  #+end_src

#+caption: 散布図
#+name: fig:06_pairs
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/06_pairs.png]]

#+reveal: split
- データの箱ひげ図
  #+begin_src R :file figs/06_boxplot.png :exports results :results graphics
    js_data |> # 箱ひげ図．変数のばらつきに大きな違いがある
      pivot_longer(!c(Pref,Area)) |> # 都道府県名・地方区分以外をまとめる
      ggplot(aes(x = name, y = value)) + # 既定値の name と value を利用
      geom_boxplot(aes(fill = name), show.legend = FALSE) # 変数ごとに色を変える
  #+end_src

#+caption: 箱ひげ図
#+name: fig:06_boxplot
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/06_boxplot.png]]

#+reveal: split
- 正規化したデータ(の一部)
  #+begin_src R :exports none
    #' データの正規化
    js_data_std <- js_data |>
      mutate(across(where(is.double), \(x)signif(c(scale(x)), digits = 3)))
  #+end_src
  #+html: <font size=5>
  #+begin_src R :exports results :results output html :tangle no
    #' データの表示(reveal用)
    js_data_std |> slice(1:15) |>
      stargazer::stargazer(summary = FALSE,
                           rownames = FALSE,
                           title = "社会生活統計指標",
                           type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' データの表示(latex用)
    js_data_std |>
      stargazer::stargazer(summary = FALSE,
                           rownames = FALSE,
                           title = "社会生活統計指標",
                           font.size = "small", type = "latex")
  #+end_src

#+reveal: split
- 正規化したデータの箱ひげ図
  #+begin_src R :file figs/06_normalized_boxplot.png :exports results :results graphics
    js_data |> # 箱ひげ図．変数のばらつきをそろえる
      mutate(across(where(is.double), \(x)c(scale(x)))) |>
      pivot_longer(where(is.double)) |> # 都道府県名・地方区分以外をまとめる
      ggplot(aes(x = name, y = value)) + # 既定値の name と value を利用
      geom_boxplot(aes(fill = name), show.legend = FALSE) # 変数ごとに色を変える
  #+end_src

#+caption: 箱ひげ図 (データを正規化)
#+name: fig:06_normalized_boxplot
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/06_normalized_boxplot.png]]

#+reveal: split
- 主成分負荷量を計算 (正規化後)
  #+begin_src R :exports none
    js_pca <- js_data |>
         select(where(is.double)) |> # 都道府県名・地方区分を除いて主成分分析を実行
         prcomp(scale. = TRUE) # 変数のばらつきを規格化
  #+end_src
  #+html: <font size=6>
  #+begin_src R :exports results :results output html :tangle no
    #' データの表示(reveal用)
    js_pca[["rotation"]] |>
      stargazer::stargazer(summary = FALSE,
                           type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' データの表示(latex用)
    js_pca[["rotation"]] |>
      stargazer::stargazer(summary = FALSE,
                           font.size = "small", type = "latex")
  #+end_src
- 主成分方向から読み取れること
  - 第1 : 人の多さに関する成分(正の向きほど人が多い)
  - 第2 : 農業生産力に関する成分(正の向きほど高い)

#+reveal: split
- 主成分得点の表示
  #+begin_src R :file figs/06_pcaplot.png :exports results :results graphics
    as_tibble(predict(js_pca)) |> # 主成分得点のデータフレーム
      mutate(Pref = js_data[["Pref"]], # 都道府県名
             Area = as_factor(js_data[["Area"]])) |> # 因子化した地方区分
      ggplot(aes(x = PC1, y = PC2)) +
      geom_point(aes(colour = Area), shape = 19, size = 2) +
      ggrepel::geom_text_repel(aes(label = Pref),
                               colour = "darkgray",
                               max.overlaps = 20) +
      theme(legend.position = c(.9,.8))
  #+end_src

#+caption: 主成分得点による散布図
#+name: fig:06_pcaplot
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/06_pcaplot.png]]


* 次回の予定
- 第1日 : 主成分分析の考え方
- *第2日 : 分析の評価と視覚化*


* Footnotes
* COMMENT ローカル変数
# Local Variables:
# org-latex-listings: minted
# End:
     
