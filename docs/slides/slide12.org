#+TITLE: 時系列解析
#+SUBTITLE: 基本的なモデル
#+AUTHOR: 村田 昇
#+EMAIL: noboru.murata@eb.waseda.ac.jp
#+DATE: 2020.12.18
:reveal:
#+INCLUDE: "./reveal.js/org/mycourse.org"
#+STARTUP: hidestars content
# C-c C-x C-v でinlineを切り替え
# <m C-i でlatex block (math env用)
# C-c '
:end:

* 講義の予定
  #+begin_src R :eval no :exports none :tangle yes
    ### 第12回 練習問題解答例
  #+end_src
  #+begin_src R :exports none
    setwd("~/Desktop/lectures/u-tokyo/autumn/slide")
  #+end_src
  - *第1日: 時系列のモデル*
  - 第2日: モデルの推定と予測
* COMMENT 今週の内容
  #+begin_src R :eval no :exports none :tangle yes
    ### 第12回 資料
  #+end_src
  #+begin_src R :exports none
    setwd("~/Desktop/lectures/mva/slide")
  #+end_src
  - *第1日: 時系列のモデル*
  - 第2日: モデルの推定と予測
    

* COMMENT レポートの講評
** 基本事項
   - 目的が明確に書かれている
   - データが目的にもとづいて集められている
   - 集められたデータにもとづいて仮説を設定している
   - 複数の数値にもとづいて分析の評価を行なっている
   - 合理的な考察を行っている
   - 課題を整理して議論している
     
** 加点事項
   - 参考資料(データも含む)を適切に記述している
   - 変数を合理的に取捨選択している
   - 外れ値の評価を合理的に行っている
   - 説明変数の多重共線性に注意している
   - 説明変数の変換・交互作用を合理的に議論している
   - (データに応じていろいろ)
     
** 注意すべき事柄
   - 線形重回帰モデルの難しさ
     - 係数は説明変数が1変化したときの影響
     - 説明変数の合成変数と目的変数の比例関係
     - 標準化する場合は説明変数の分布を考慮
   - 変数の選択
     - t統計量はあくまでそのモデルでの変数の役割の評価
     - モデルが変わると有意になることもありうる
   - 検定統計量とp-値の解釈
     - 帰無仮説が正しいときに意味を持つ
     - p-値は信頼度とは異なる
     - 帰無仮説が棄却されたとき，統計量の値に意味を求めてはいけない
   

* 時系列解析の概要
** 時系列解析とは
   - 時系列データ
     - 時間軸に沿って観測されたデータ
     - 観測の順序に意味がある
     - 異なる時点間での観測データの従属関係が重要
     - 独立性にもとづく解析は行えない \\
       (そのままでは大数の法則や中心極限定理は使えない)
   - 時系列解析の目的
     - 時系列データの特徴を効果的に記述すること
     - 時系列モデルの推定と評価

** 時系列データ
   - 統計学・確率論における表現: *確率過程*
     #+begin_quote
     時間を添え字として持つ確率変数列
     #+begin_src latex
       \begin{equation}
	 X_{t},\;t=1,2,\dotsc,T
	 \quad(\text{あるいは}\;t=0,1,\dotsc,T)
       \end{equation}
     #+end_src
     #+end_quote
   - 時系列解析で利用される代表的な確率過程
     - ホワイトノイズ
     - ランダムウォーク
     - 自己回帰モデル (ARモデル)
     - 移動平均モデル (MAモデル)
     - 自己回帰移動平均モデル (ARMAモデル)

** COMMENT R: 時系列データの扱い
   - 時系列のためのクラス: ~ts~, ~zoo~ クラスなど
     - ベクトル(1次元)データだが，時間に関する情報が付加される
     - ベクトルからの変換:  関数 ~ts()~ , ~zoo()~ など
   - 関数 ~plot()~ などの挙動はベクトルと異なる
     - プロットが既定値で折れ線
     - x軸に時間の情報が表示
     - 通常は時間情報を利用して適切に処理してくれる


* 基本的なモデル
** ホワイトノイズ
   - 定義
     #+begin_quote
     平均\(0\)，分散\(\sigma^2\)
     である確率変数の
     確率分布\(P\)からの
     独立かつ同分布な確率変数列
     #+begin_src latex
       \begin{equation}
	 X_{t}
	 =
	 \epsilon_{t},
	 \quad
	 \epsilon_{t}
	 \overset{i.i.d.}{\sim} P
       \end{equation}
     #+end_src
     #+end_quote
     # 平均 $0$ ，分散 $\sigma^2$ で互いに無相関な確率変数列
   - 記号 $\mathrm{WN}(0,\sigma^2)$ で表記することが多い
     #+begin_quote
     #+begin_src latex
       \begin{equation}
	 X_{t}
	 \sim
	 \mathrm{WN}(0,\sigma^2)
       \end{equation}
     #+end_src
     #+end_quote
   - 独立であるため系列としての予測は不可能

** トレンドのあるホワイトノイズ
   - 定義
     #+begin_quote
     $\mu,\alpha$ を定数として
     #+begin_src latex
       \begin{equation}
         X_{t}=\mu+\alpha t+\epsilon_{t},
         \quad
         \epsilon_{t}
         \sim
         \mathrm{WN}(0,\sigma^2)
       \end{equation}
     #+end_src
     で定義される確率過程
     #+end_quote
     # で与えられる確率過程 $X_{t},\;t=1,\dotsc,T$
   - *トレンド* \(\mu+\alpha t\) はより一般化されることもある
     - \(t\) の1次式 (上記の基本的な場合)
     - 高次の多項式
     - 非線形関数(指数関数, 三角関数など)
   - *平均* が時間とともに変動する時系列モデルの1つ

** ランダムウォーク
   - 定義
     #+begin_quote
     $X_0$ を定数もしくは確率変数として
     #+begin_src latex
       \begin{equation}
	 X_{t}=X_{t-1}+\epsilon_{t},
	 \quad
	 \epsilon_{t}
	 \sim
	 \mathrm{WN}(0,\sigma^2)
       \end{equation}
     #+end_src
     で帰納的に定義される確率過程
     #+end_quote
   - *分散* が時間とともに増加する時系列モデルの1つ
   - 最も単純な *記憶* のあるモデル


* COMMENT 人工データによる例
  - 同じモデルに従うパス(系列)を複数観測してみる

    #+reveal: split
    #+header: :width 720 :height 720 :res 100
    #+begin_src R :file figs/12_wn.png :exports results :results graphics :tangle yes
      ### ホワイトノイズの生成
      require(RColorBrewer)
      k <- 4 # 系列の数
      myCol <- brewer.pal(k,"Dark2")

      n <- 200 # 時系列の長さ

      ## 正規分布を利用
      set.seed(123)
      plot(x=ts(1:n),
	   ylim=c(-3,3), ylab="value",
	   main=expression(X[t] == epsilon[t]),
	   type="n")
      for(i in 1:k) {
	x <- rnorm(n)
	## x <- ts(rt(n, df=4)) # 自由度4のt分布の場合
	lines(x, col=myCol[i])
      }
    #+end_src
    #+CAPTION: ホワイトノイズ
    #+NAME: fig:12_wn
    #+ATTR_HTML: height 100%
    #+ATTR_LATEX: :width 0.6\linewidth
    [[file:figs/12_wn.png]]

    #+reveal: split
    #+header: :width 720 :height 720 :res 100
    #+begin_src R :file figs/12_trwn.png :exports results :results graphics :tangle yes
      ### トレンドのあるホワイトノイズ
      set.seed(123)
      plot(x=ts(1:n),
	   ylim=c(-3,10), ylab="value",
	   main=expression(X[t] == -1 + 0.05 * t + epsilon[t]),
	   type="n")
      for(i in 1:k) {
	x <- rnorm(n) -1 + 0.05*(1:n)
	lines(x, col=myCol[i])
      }
    #+end_src
    #+CAPTION: トレンドのあるホワイトノイズ
    #+NAME: fig:12_trwn
    #+ATTR_HTML: height 100%
    #+ATTR_LATEX: :width 0.6\linewidth
    [[file:figs/12_trwn.png]]
   
    #+reveal: split
    #+header: :width 720 :height 720 :res 100
    #+begin_src R :file figs/12_rw.png :exports results :results graphics :tangle yes
      ### ランダムウォーク
      set.seed(123)
      plot(x=ts(1:n),
	   ylim=c(-15,15), ylab="value",
	   main=expression(X[t] == X[t-1] + epsilon[t]),
	   type="n")
      for(i in 1:k) {
	x <- cumsum(rnorm(n))
	lines(x, col=myCol[i])
      }
    #+end_src
    #+CAPTION: ランダムウォーク
    #+NAME: fig:12_rw
    #+ATTR_HTML: height 100%
    #+ATTR_LATEX: :width 0.6\linewidth
    [[file:figs/12_rw.png]]
    
   
* COMMENT 演習
** 問題
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 以下の問に答えなさい．
     - トレンドのあるホワイトノイズ\(X_{t}\)の
       - 平均 \(\mathbb{E}[X_{t}]\)
       - 分散 \(\mathrm{Var}(X_{t})\)
       を求めなさい
     - ランダムウォークの平均と分散を求めなさい

** 解答例
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 定義に従い計算する
     #+begin_quote
     #+begin_src latex
       \begin{align}
         \mathbb{E}[X_{t}]
         &=
           \mathbb{E}[\mu+\alpha t+\epsilon_{t}]\\
         &=
           \mathbb{E}[\mu]+\mathbb{E}[\alpha t]+\mathbb{E}[\epsilon_{t}]\\
         &=
           \mu+\alpha t\\
         \mathrm{Var}(X_{t})
         &=
           \mathrm{Var}(\mu+\alpha t+\epsilon_{t})\\
         &=
           \mathrm{Var}(\mu)+\mathrm{Var}(\alpha t)
           +\mathrm{Var}(\epsilon_{t})\\
         &=
           \sigma^{2}
       \end{align}
     #+end_src
     #+end_quote
   #+reveal: split
   - 定義に従い帰納的に計算する
     #+begin_quote
     #+begin_src latex
       \begin{align}
         \mathbb{E}[X_{t}]
         &=
           \mathbb{E}[X_{t-1}+\epsilon_{t}]\\
         &=
           \mathbb{E}[X_{t-1}]+\mathbb{E}[\epsilon_{t}]\\
         &=
           \mathbb{E}[X_{1}]\\
         \mathrm{Var}(X_{t})
         &=
           \mathrm{Var}(X_{t-1}+\epsilon_{t})\\
         &=
           \mathrm{Var}(X_{t-1})+\mathrm{Var}(\epsilon_{t})\\
         &=
           \mathrm{Var}(X_{1})+(t-1)\cdot\sigma^{2}
       \end{align}
     #+end_src
     #+end_quote


* 実習
** R: 時系列データの扱い
   - 時系列のためのクラス: ~ts~ クラス
     - ベクトル(1次元)データだが，時間に関する情報が付加される
     - ベクトルからの変換:  関数 ~ts()~ 
     - 多次元時系列も扱うことは可能
   - 関数 ~plot()~ などの挙動はベクトルと異なる
     - プロットが既定値で折れ線
     - x軸に時間の情報が表示
     - 通常は時間情報を利用して適切に処理してくれる
   - より複雑な時系列を記述するためには ~zoo~ や ~xts~ などのパッケージがある

** R: 関数 ~ts()~
   - 時系列クラス ~ts~ を作成する関数
     #+begin_src R :eval no
       ts(data = NA, start = 1, end = numeric(), frequency = 1)
       ## data: ベクトル，または行列(データフレーム)
       ## start: 開始時刻
       ## end: 終了時刻
       ## frequency: 単位時間あたりの観測回数
       ts(data = x) # t=1,2,... を添字とする時系列
       ts(data = x, start = c(2020,1), frequency =12) # 2020年1月からの月ごと
       ts(data = x, start = c(2020,3), frequency =4) # 四半期ごと
     #+end_src
     - その他の詳細は ~?ts~ 

** R: 関数 ~plot()~
   - 時系列クラスの描画
     #+begin_src R :eval no :tangle yes
       ## 基本的なplotの使い方
       x <- rnorm(240) # 正規分布のホワイトノイズ
       plot(ts(x, start=c(2000,1), frequency=12)) # 2000年からの毎月のデータを想定
       ## 複数の系列を表示する場合
       y <- rt(240,df=4) # t-分布のホワイトノイズ
       z <- ts(data.frame(x,y),
	       start=c(2000,1), frequency=12) 
       plot(z, col="red") # 指定しなければ個別にグラフを描画
       plot(z, plot.type="single", col=c("red","blue"))
     #+end_src
     - その他の詳細は ~?plot.ts~ 
     - 表示の方法が異なる関数 ~ts.plot()~ もあるので調べてみよう

** COMMENT 演習: ホワイトノイズを作ってみる
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/13-wn.r][13-wn.r]] を確認してみよう
   - ホワイトノイズの典型的な例
     - 平均 $0$ で分散有限の同一の分布に従う独立な確率変数列
     - Rでのシミュレーション:
       - 正規分布 ~rnorm()~ 
       - t分布 ~rt()~
       - その他適当な乱数生成器
** COMMENT 演習: トレンドのあるホワイトノイズを作ってみる
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/13-trend.r][13-trend.r]] を確認してみよう
** COMMENT 演習: ランダムウォークを作ってみる
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/13-rw.r][13-rw.r]] を確認してみよう

** 練習問題
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 指定された確率過程を生成し，図示を行いなさい
     - 平均0，分散4の正規分布に従うホワイトノイズ
     - 上記のホワイトノイズに
       初期値-1で単位時刻あたり1/20で増加するトレンドを持つ確率過程
     - 上記のホワイトノイズから生成されるランダムウォーク
     #+begin_src R :eval no :exports none :tangle yes
       ### 練習1
       ### 基本的な時系列モデル

       Tmax <- 200 # 時系列の長さ t=1,..,Tmax
       K <- 5 # 生成する時系列の数

       ## 系列を異なる色で表示するための準備
       ## 右下ペインの package タブから RColorBrewer をインストール
       ## install.packages("RColorBrewer") 
       myCol <- brewer.pal(K,"Dark2") # 暗めの色合いのパレットを利用
       ## 色合いの例は関数 display.brewer.all()
       ## myCol <- rainbow(K) # いわゆるレインボーカラーを使う場合
       ## 黄色などが見えにくい場合もあるので，スライドなどに使う場合は注意が必要

       ## set.seed(123) # 必要なら乱数のシードを指定する
       ## ホワイトノイズの生成と図示
       x <- ts(rnorm(Tmax, sd=2)) # 分散4=標準偏差2
       plot(x)
       ## x <- ts(rt(n, df=4)) # 正規分布ではなく，例えば自由度4のt分布の場合

       ## 複数の系列を表示
       plot(x=ts(1:Tmax),
            ylim=c(-5,5), ylab="value", # yの範囲は適宜調整すること
            main=expression(X[t] == epsilon[t]), # 数式で表示
            type="n") # 枠だけ作図
       for(i in 1:K) {
           x <- ts(rnorm(Tmax, sd=2))
           lines(x, col=myCol[i])
       }

       ## データフレーム化して表示する場合
       z <- ts(replicate(K, # K回以下の関数を実行する
                         rnorm(Tmax, sd=2)))
       ## 個別に作図
       plot(x=z, # 既定値は plot.type="multiple"
            ylab="value", col="blue",
            main=expression(X[t] == epsilon[t]))

       ## まとめて一枚
       plot(x=z, plot.type="single",
            ylab="value", col=myCol,
            main=expression(X[t] == epsilon[t]))

       ### トレンドのあるホワイトノイズ
       x <- ts(rnorm(Tmax, sd=2) -1 + 0.05*(1:Tmax))
       plot(x)

       ## 複数の系列を表示
       z <- ts(replicate(K,
                         rnorm(Tmax, sd=2) -1 + 0.05*(1:Tmax)))
       plot(x=z, plot.type="single",
            ylab="value", col=myCol,
            main=expression(X[t] == -1 + 0.05 * t + epsilon[t]))

       ### ランダムウォーク
       ## 定義に則ってrecursiveに計算する
       x <- ts(rnorm(Tmax, sd=2)) # はじめは epslion が入っている
       for(t in 2:Tmax) {
           x[t] <- x[t-1] + x[t] # 順に足し合わせていく
       }
       plot(x)

       ## 同じ演算をする関数が用意されている
       x <- ts(cumsum(rnorm(Tmax, sd=2))) # 逐次的に加算を行う関数
       plot(x)
       ## 書き方はいろいろあるので考えてみて下さい

       ## 複数の系列を表示
       z <- ts(replicate(K,
                         cumsum(rnorm(Tmax, sd=2))))
       plot(x=z, plot.type="single",
            ylab="value", col=myCol,
            main=expression(X[t] == X[t-1] + epsilon[t]))
     #+end_src
     

* より一般的なモデル
** 自己回帰過程
   - 定義 (次数\(p\); AR(p), auto regressive の略)
     #+begin_quote
     \(a_1,\dotsc,a_p\)を定数とし，
     \(X_1,\dotsc,X_p\)が初期値として与えられたとき，
     #+begin_src latex
       \begin{equation}
	 X_{t}=a_1X_{t-1}+\cdots+a_pX_{t-p}+\epsilon_{t},
	 \quad
	 \epsilon_{t}
	 \sim
	 \mathrm{WN}(0,\sigma^2)
       \end{equation}
     #+end_src
     で帰納的に定義される確率過程
     #+end_quote
     - ランダムウォークの一般化
       - $p=1, a_1=1$ かつ $\epsilon_{t}$ が独立同分布ならランダムウォーク
     - *忘却* しながら記憶するモデル ($|a_i|<1$ などの条件が必要)

** 移動平均過程
   - 定義 (次数\(q\); MA(q), moving average の略)
     #+begin_quote
     \(b_1,\dotsc,b_q\)を定数とし，
     \(X_1,\dotsc,X_q\)が初期値として与えられたとき
     #+begin_src latex
       \begin{equation}
	 X_{t}
	 =
	 b_1\epsilon_{t-1}+\cdots+b_q\epsilon_{t-q}+\epsilon_{t},
	 \quad
	 \epsilon_{t}
	 \sim
	 \mathrm{WN}(0,\sigma^2)
       \end{equation}
     #+end_src
     で定義される確率過程
     #+end_quote
     - 記憶のあるホワイトノイズ (構成する部品を記憶)

** 自己回帰移動平均過程
   - 定義 (次数\((p,q)\); ARMA(\(p,q\)))
     #+begin_quote
     $a_1,\dotsc,a_p,b_1,\dotsc,b_q$ を定数とし，
     $X_1,\dotsc,X_{\max\{p,q\}}$ が初期値として与えられたとき
     #+begin_src latex
       \begin{align}
	 X_{t}
	 &=
	   a_1X_{t-1}+\cdots+a_pX_{t-p}\\
	 &\quad+
	   b_1\epsilon_{t-1}+\cdots+b_q\epsilon_{t-q}
	   +\epsilon_{t},\\
	 &\quad
	   \epsilon_{t}
	   \sim
	   \mathrm{WN}(0,\sigma^2)
       \end{align}
     #+end_src
     で帰納的に定まる確率過程
     #+end_quote
     - AR($p$)モデルはARMA($p,0$)，MA($q$)モデルはARMA($0,q$)
     - 単純な形ながら異なる時点間の従属構造を柔軟に記述
     - 基本的な時系列モデルとして広く利用されている


* COMMENT 人工データによる例
   - 同じモデルに従うパス(系列)を複数観測してみる

     #+reveal: split
     #+header: :width 720 :height 720 :res 100
     #+begin_src R :file figs/12_ar.png :exports results :results graphics :tangle yes
       ### AR(2)モデルのシミュレーション
       set.seed(123)
       a <- c(0.669, 0.263) # ARの係数
       plot(x=ts(1:n),
	    ylim=c(-5,5), ylab="value",
	    main="AR(2)",
	    type="n")
       for(i in 1:k) {
	 epsilon <- rnorm(n)
	 x0 <- epsilon[1:2]
	 x <- ts(double(n))
	 x[1:2] <- x0
	 for(j in 3:n) x[j] <- a%*%x[j-1:2] + epsilon[j]
	 lines(x, col=myCol[i])
       }
     #+end_src
     #+CAPTION: AR過程
     #+NAME: fig:12_ar
     #+ATTR_HTML: height 100%
     #+ATTR_LATEX: :width 0.6\linewidth
     [[file:figs/12_ar.png]]

     #+reveal: split
     #+header: :width 720 :height 720 :res 100
     #+begin_src R :file figs/12_ma.png :exports results :results graphics :tangle yes
       ### MA(2)モデルのシミュレーション
       set.seed(123)
       b <- c(0.438, 0.078) # MAの係数
       plot(x=ts(1:n),
	    ylim=c(-5,5), ylab="value",
	    main="MA(2)",
	    type="n")
       for(i in 1:k) {
	 epsilon <- rnorm(n)
	 x0 <- epsilon[1:2]   # 初期値は(epsilon1, epsilon2)
	 x <- ts(double(n))
	 x[1:2] <- x0
	 for(j in 3:n) x[j] <- b %*% epsilon[j-1:2] + epsilon[j]
	 lines(x, col=myCol[i])
       }
     #+end_src
     #+CAPTION: MA過程
     #+NAME: fig:12_ma
     #+ATTR_HTML: height 100%
     #+ATTR_LATEX: :width 0.6\linewidth
     [[file:figs/12_ma.png]]

     #+reveal: split
     #+header: :width 720 :height 720 :res 100
     #+begin_src R :file figs/12_arma.png :exports results :results graphics :tangle yes
       ### ARMA(2,1)モデルのシミュレーション
       set.seed(123)
       a <- c(0.8, -0.64) # ARの係数
       b <- -0.5          # MAの係数
       plot(x=ts(1:n),
	    ylim=c(-5,5), ylab="value",
	    main="ARMA(2,1)",
	    type="n")
       for(i in 1:k) {
	 epsilon <- rnorm(n)
	 x0 <- rnorm(2)     # 初期値
	 x <- ts(double(n))
	 x[1:2] <- x0
	 for(j in 3:n) x[j] <- a%*%x[j-1:2] + b*epsilon[j-1] + epsilon[j]
	 lines(x, col=myCol[i])
       }
     #+end_src
     #+CAPTION: ARMA過程
     #+NAME: fig:12_arma
     #+ATTR_HTML: height 100%
     #+ATTR_LATEX: :width 0.6\linewidth
     [[file:figs/12_arma.png]]




* COMMENT 演習
** 問題
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 以下の問に答えなさい．
     - AR(1)の平均と分散を求めなさい
     - MA(1)の平均と分散を求めなさい
       
** 解答例
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 定義に従い帰納的に計算する
     #+begin_quote
     #+begin_src latex
       \begin{align}
         \mathbb{E}[X_{t}]
         &=
           \mathbb{E}[a_{1}X_{t-1}+\epsilon_{t}]\\
         &=
           a_{1}\mathbb{E}[X_{t-1}]+\mathbb{E}[\epsilon_{t}]\\
         &=
           a_{1}^{t-1}\mathbb{E}[X_{1}]\\
         \mathrm{Var}(X_{t})
         &=
           \mathrm{Var}(a_{1}X_{t-1}+\epsilon_{t})\\
         &=
           a_{1}^{2}\mathrm{Var}(X_{t-1})+\mathrm{Var}(\epsilon_{t})\\
         &=
           a_{1}^{2(t-1)}\mathrm{Var}(X_{1})
           +\frac{1-a_{1}^{2(t-1)}}{1-a_{1}^{2}}\cdot\sigma^{2}
       \end{align}
     #+end_src
     #+end_quote
   #+reveal: split
   - 定義に従い帰納的に計算する
     #+begin_quote
     #+begin_src latex
       \begin{align}
         \mathbb{E}[X_{t}]
         &=
           \mathbb{E}[b_{1}\epsilon_{t-1}+\epsilon_{t}]\\
         &=
           b_{1}\mathbb{E}[\epsilon_{t-1}]+\mathbb{E}[\epsilon_{t}]\\
         &=
           0\\
         \mathrm{Var}(X_{t})
         &=
           \mathrm{Var}(b_{1}\epsilon_{t-1}+\epsilon_{t})\\
         &=
           b_{1}^{2}\mathrm{Var}(\epsilon_{t-1})+\mathrm{Var}(\epsilon_{t})\\
         &=
           (b_{1}^{2}+1)\cdot\sigma^{2}
       \end{align}
     #+end_src
     #+end_quote


* 実習
** COMMENT 演習: AR過程を作ってみる
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/13-ar.r][13-ar.r]] を確認してみよう
** COMMENT 演習: MA過程を作ってみる
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/13-ma.r][13-ma.r]] を確認してみよう

** COMMENT 演習: ARMA過程を作ってみる
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/13-arma.r][13-arma.r]] を確認してみよう

** 練習問題
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 平均0，分散1のホワイトノイズを用いて，
     以下の指定された確率過程を生成し，図示を行いなさい
     - 係数\(a_{1}=0.67,a_{2}=0.26\)を持つAR(2)過程
     - 係数\(b_{1}=0.44,b_{2}=0.08\)を持つMA(2)過程
     - 係数\(a_{1}=0.8,a_{2}=-0.64,b_{1}=-0.5\)を持つARMA(2,1)過程
     #+begin_src R :eval no :exports none :tangle yes
       ### 練習2
       ### より一般の時系列モデル

       ## 設定は前の練習問題と同じ
       Tmax <- 200 # 時系列の長さ t=1,..,Tmax
       K <- 5 # 生成する時系列の数
       myCol <- brewer.pal(K,"Dark2") 
       ## 書き方は以下に示したもの以外にもいろいろあるので考えてみて下さい

       ### AR(2)モデルのシミュレーション
       a <- c(0.67, 0.26) # ARの係数
       epsilon <- rnorm(Tmax) # epsilonを生成
       x <- double(Tmax)      # 変数を用意
       x[1:2] <- epsilon[1:2] # 初期値は(epsilon1, epsilon2)
       for(t in 3:Tmax) {
           x[t] <- a %*% x[t-1:2] + epsilon[t] # %*% はベクトルの内積計算
       }
       plot(ts(x)) # 時系列classに変換して表示

       ## 複数の系列を表示
       myAR <- function(a, epsilon){ # 以下に一連の手続きを記述して関数化しておく
           p <- length(a) # 次数pを取得
           Tmax <- length(epsilon) # 時系列の長さを取得
           x <- double(Tmax)      # 変数を用意
           x[1:p] <- epsilon[1:p] # 初期値は(epsilon1,...)
           for(t in (p+1):Tmax) {
               x[t] <- a %*% x[t-1:p] + epsilon[t]
           }
           return(x) # 計算結果のxを返す
       }
       ## 使い方は a と epsilon(ホワイトノイズ)を指定する
       x <- myAR(a=c(0.6, 0.3, 0.1), epsilon=rnorm(100))
       plot(ts(x))
       ## 関数の引数として Tmax を指定する方法もあるが
       ## 様々なホワイトノイズを試したい場合もあるのでそれを指定するように定義しておく

       ## データフレームを作成して表示
       df.ar <- ts(replicate(K, myAR(a=a, epsilon=rnorm(Tmax))))
       plot(x=df.ar, plot.type="single",
            ylab="value", col=myCol,
            main="AR(2)")

       ### MA(2)モデルのシミュレーション
       b <- c(0.44, 0.08) # MAの係数
       epsilon <- rnorm(Tmax)
       x <- ts(double(Tmax))
       x[1:2] <- epsilon[1:2]   
       for(t in 3:Tmax) {
           x[t] <- b %*% epsilon[t-1:2] + epsilon[t]
       }
       plot(ts(x))

       ## 複数の系列を表示
       myMA <- function(b, epsilon){
           q <- length(b) # 次数qを取得
           Tmax <- length(epsilon) # 時系列の長さを取得
           x <- double(Tmax)
           x[1:q] <- epsilon[1:q]   
           for(t in (q+1):Tmax) {
               x[t] <- b %*% epsilon[t-1:q] + epsilon[t]
           }
           return(x)
       }
       df.ma <- ts(replicate(K, myMA(b=b, epsilon=rnorm(Tmax))))
       plot(x=df.ma, plot.type="single",
            ylab="value", col=myCol,
            main="MA(2)")

       ### ARMA(2,1)モデルのシミュレーション
       a <- c(0.8, -0.64) # ARの係数
       b <- -0.5          # MAの係数
       epsilon <- rnorm(Tmax)
       x <- double(Tmax)
       x[1:2] <- epsilon[1:2]
       for(t in 3:Tmax) {
           x[t] <- a %*% x[t-1:2] + b %*% epsilon[t-1] + epsilon[t]
           ## bは1次元なのでこの問題では b*epsilon でも可
       }
       plot(ts(x))

       ## 複数の系列を表示
       myARMA <- function(a, b, epsilon){
           p <- length(a)
           q <- length(b)
           r <- max(p,q)
           Tmax <- length(epsilon) # 時系列の長さを取得
           x <- double(Tmax)
           x[1:r] <- epsilon[1:r]
           for(t in (r+1):Tmax) {
               x[t] <- a %*% x[t-1:p] + b %*% epsilon[t-1:q] + epsilon[t]
           }
           return(x)
       }
       df.arma <- ts(replicate(K, myARMA(a=a, b=b, epsilon=rnorm(Tmax))))
       plot(x=df.arma, plot.type="single",
            ylab="value", col=myCol,
            main="ARMA(2,1)")
       ## 関数 filter や arima.sim などを利用することもできる
     #+end_src
     

* 定常過程と非定常過程
** 弱定常性
   - 確率過程\(X_{t},\;t=1,\dotsc,T\)が次の性質をもつ:
     - \(X_{t}\)の平均は時点\(t\)によらない
       #+begin_quote
       #+begin_src latex
         \begin{equation}
           \mathbb{E}[X_{t}]=\mu
           \quad
           \text{(時間の添字を持たない)}
         \end{equation}
       #+end_src
       #+end_quote
     - \(X_{t}\)と\(X_{t+h}\)の共分散は時点\(t\)によらず時差\(h\)のみで定まる
       #+begin_quote
       #+begin_src latex
         \begin{equation}
           \mathrm{Cov}(X_{t},X_{t+h})
           =\gamma(h)
           \quad
           \text{(時間の添字を持たない)}
         \end{equation}
       #+end_src
       #+end_quote
     - 特に\(X_{t}\)の分散は時点\(t\)によらない (\(h=0\)の場合)
       #+begin_quote
       #+begin_src latex
         \begin{equation}
           \mathrm{Var}(X_{t})
           =\gamma(0)
         \end{equation}
       #+end_src
       #+end_quote

** 定常性と非定常性
   - 定常でない確率過程は *非定常* であるという
   - いろいろな確率過程の定常性
     - 定常: ホワイトノイズ, MA
     - 非定常: トレンドのあるホワイトノイズ, ランダムウォーク
     - 定常にも非定常にもなりうる: AR, ARMA

** 非定常過程の難しさ
   - 性質を特徴付ける統計量が一般に観測値から得られない
     - 平均や分散などの基本的な統計量が時間によって変動する
     - 1つの時系列から記述統計量の推測はできない
   - 擬似相関の問題
     - 独立な時系列にも関わらず見掛けの相関が現れることがある
     - 2つの独立なランダムウォークは高い確率で"相関"を持つ
     - https://tylervigen.com/spurious-correlations

** 非定常過程の取り扱い
   - 定常過程とみなせるように変換したあと分析を実行
     - 階差をとる変換
       #+begin_quote
       ランダムウォークは階差をとればホワイトノイズ(定常過程)となる
       #+begin_src latex
	 \begin{equation}
	   X_{t}=X_{t-1}+\epsilon_{t}
	   \quad\Rightarrow\quad
	   Y_{t}=X_{t}-X_{t-1}=\epsilon_{t}
	 \end{equation}
       #+end_src
       #+end_quote
     - 対数変換
       #+begin_quote
       対数変換と階差で微小な比率の変動を取り出すことができる
       #+begin_src latex
	 \begin{equation}
	   X_{t}=(1+\epsilon_{t})X_{t-1}
	   \quad\Rightarrow\quad
	   Y_{t}=\log(X_{t})-\log(X_{t-1})
	   =\log(1+\epsilon_{t})
	   \simeq\epsilon_{t}
	 \end{equation}
       #+end_src
       #+end_quote
     - トレンド成分+季節成分+変動成分への分解
       #+begin_quote
       適当な仮説のもとに取り扱いやすい成分の和に分解する
       #+end_quote


* 自己共分散・自己相関
** 自己共分散・自己相関
   - 確率過程\(X_{t}\)が *定常過程* の場合
     - $X_{t}$ と $X_{t+h}$ の共分散は時点\(t\)によらずラグ\(h\)のみで定まる
       #+begin_quote
       *自己共分散* (定常過程の性質よりラグは\(h\ge0\)を考えればよい)
       #+begin_src latex
	 \begin{equation}
	   \mathrm{Cov}(X_{t},X_{t+h})
	   =\gamma(h)
	 \end{equation}
       #+end_src
       #+end_quote
     - $X_{t}$ と $X_{t+h}$ の相関も\(t\)によらずラグ\(h\)のみで定まる
       #+begin_quote
       *自己相関*
       #+begin_src latex
	 \begin{equation}
	   \mathrm{Cov}(X_{t},X_{t+h})/\mathrm{Var}(X_{t})
	   =\gamma(h)/\gamma(0)
	 \end{equation}
       #+end_src
       #+end_quote
   - 異なる時点間での観測データの従属関係を要約するための最も基本的な統計量
     
** 標本自己共分散・標本自己相関
   - 観測データ $X_1,\dotsc,X_{t}$ からの推定
     - ラグ\(h\)の自己共分散の推定: 標本自己共分散
       #+begin_quote
       #+begin_src latex
         \begin{equation}
           \hat\gamma(h)
           =
           \frac{1}{T}\sum_{t=1}^{T-h}(X_{t}-\bar{X})(X_{t+h}-\bar{X})
         \end{equation}
       #+end_src
       #+end_quote
       $\bar{X}=\frac{1}{T}\sum_{t=1}^TX_{t}$ は標本平均
     - ラグ\(h\)での自己相関の推定: 標本自己相関
       #+begin_quote
       #+begin_src latex
         \begin{equation}
           \hat\gamma(h)/\hat\gamma(0)
           =
           \frac{\sum_{t=1}^{T-h}(X_{t}-\bar{X})(X_{t+h}-\bar{X})}{\sum_{t=1}^T(X_{t}-\bar{X})^2}
         \end{equation}
       #+end_src
       #+end_quote


* COMMENT 人工データによる例
   - 同じモデルに従うパス(系列)の自己相関を比較してみる

     #+reveal: split
     #+header: :width 720 :height 720 :res 100
     #+begin_src R :file figs/12_aracf.png :exports results :results graphics :tangle yes
       ### AR(2)モデルの自己相関
       set.seed(123)
       a <- c(0.669, 0.263) # ARの係数
       par(mfrow=c(2,2))
       for(i in 1:k) {
	 epsilon <- rnorm(n)
	 x0 <- epsilon[1:2]
	 x <- ts(double(n))
	 x[1:2] <- x0
	 for(j in 3:n) x[j] <- a%*%x[j-1:2] + epsilon[j]
	 acf(x, col=myCol[i])
       }
     #+end_src
     #+CAPTION: AR過程の自己相関
     #+NAME: fig:12_aracf
     #+ATTR_HTML: height 100%
     #+ATTR_LATEX: :width 0.6\linewidth
     [[file:figs/12_aracf.png]]

     #+reveal: split
     #+header: :width 720 :height 720 :res 100
     #+begin_src R :file figs/12_maacf.png :exports results :results graphics :tangle yes
       ### MA(2)モデルの自己相関
       set.seed(123)
       b <- c(0.438, 0.078) # MAの係数
       par(mfrow=c(2,2))
       for(i in 1:k) {
	 epsilon <- rnorm(n)
	 x0 <- epsilon[1:2]   # 初期値は(epsilon1, epsilon2)
	 x <- ts(double(n))
	 x[1:2] <- x0
	 for(j in 3:n) x[j] <- b %*% epsilon[j-1:2] + epsilon[j]
	 acf(x, col=myCol[i])
       }
     #+end_src
     #+CAPTION: MA過程の自己相関
     #+NAME: fig:12_maacf
     #+ATTR_HTML: height 100%
     #+ATTR_LATEX: :width 0.6\linewidth
     [[file:figs/12_maacf.png]]

     #+reveal: split
     #+header: :width 720 :height 720 :res 100
     #+begin_src R :file figs/12_armaacf.png :exports results :results graphics :tangle yes
       ### ARMA(2,1)モデルの自己相関
       set.seed(123)
       a <- c(0.8, -0.64) # ARの係数
       b <- -0.5          # MAの係数
       par(mfrow=c(2,2))
       for(i in 1:k) {
	 epsilon <- rnorm(n)
	 x0 <- rnorm(2)     # 初期値
	 x <- ts(double(n))
	 x[1:2] <- x0
	 for(j in 3:n) x[j] <- a%*%x[j-1:2] + b*epsilon[j-1] + epsilon[j]
	 acf(x, col=myCol[i])
       }
     #+end_src
     #+CAPTION: ARMA過程の自己相関
     #+NAME: fig:12_armaacf
     #+ATTR_HTML: height 100%
     #+ATTR_LATEX: :width 0.6\linewidth
     [[file:figs/12_armaacf.png]]


* COMMENT 演習
** 問題
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 以下の問に答えなさい．
     - 定常なAR(\(p\))過程を考える．
       \(\mathbb{E}[X_{t}]=0\) であるとき，
       AR過程の係数と自己共分散の間に成り立つ関係を考えなさい．
       
** 解答例
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - ラグ\(h>0\)の自己共分散を考える
     #+begin_quote
     #+begin_src latex
       \begin{align}
         \gamma(h)
         &=
           \mathbb{E}[X_{t}X_{t+h}]\\
         &=
           \mathbb{E}[X_{t}(a_{1}X_{t+h-1}+\dotsb+a_{p}X_{t+h-p}+\epsilon_{t+h})]\\
         &=
           a_{1}\mathbb{E}[X_{t}X_{t+h-1}]
           +\dotsb
           +a_{p}\mathbb{E}[X_{t}X_{t+h-p}]
           +\mathbb{E}[X_{t}\epsilon_{t+h}]\\
         &=
           a_{1}\gamma(h-1)
           +\dotsb+
           a_{p}\gamma(h-p)
       \end{align}
     #+end_src
     #+end_quote
   #+reveal: split
   - \(1\le h\le p\) を考えると以下の関係が成り立つ
     #+begin_quote
     #+begin_src latex
       \begin{equation}
         \begin{pmatrix}
           \gamma(1)\\
           \gamma(2)\\
           \vdots\\
           \gamma(p)
         \end{pmatrix}
         =
         \begin{pmatrix}
           \gamma(0)&\gamma(-1)&\dots&\gamma(-p+1)\\
           \gamma(1)&\gamma(0)&\dots&\gamma(-p+2)\\
           \vdots&\vdots&\ddots&\vdots\\
           \gamma(p-1)&\gamma(p-2)&\dots&\gamma(0)
         \end{pmatrix}
         \begin{pmatrix}
           a_{1}\\
           a_{2}\\
           \vdots\\
           a_{p}
         \end{pmatrix}
       \end{equation}
     #+end_src
     Yule-Walker方程式という
     #+end_quote
   #+reveal: split
   - Yule-Walker方程式の性質
     - 行列は Toeplitz 行列と呼ばれる
     - \(\gamma(h)=\gamma(-h)\)より行列は対称行列
     - 共分散の性質から行列が正定値(非負定値)
     - 行列が正則ならばARの係数は一意に決まる
     - 特殊な形を利用した高速な解法としては
       Levinson–Durbin アルゴリズムが知られている


   
* 実習
** R: 関数 ~acf()~
   - 自己相関・自己共分散の計算
     #+begin_src R :eval no
       acf(x, lag.max = NULL,
           type = c("correlation", "covariance", "partial"),
           plot = TRUE, na.action = na.fail, demean = TRUE, ...)
       ## x: 時系列データ
       ## lag.max: 計算するラグの最大値
       ## type: 標準は相関, 共分散と偏相関を選ぶこともできる
       ## plot: 描画するか否か
       ## na.action: 欠損値の処理，標準は欠損を含むと計算しない
       ## demean: 共分散の計算において平均を引くか否か
     #+end_src
     - 詳細は ~?acf~
** 練習問題
   :PROPERTIES:
   :reveal_background: #fef4f4
   :END:
   - 以下の問に答えなさい
     - 同じAR過程のモデルから生成した時系列の自己相関を比較しなさい\\
       (前の練習問題を利用すればよい)
     - MA過程についても同様な比較を行いなさい
     - ARMA過程についても同様な比較を行いなさい
     #+begin_src R :eval no :exports none :tangle yes
       ### 練習3
       ### 自己相関

       K <- 4 # 表示する時系列の数 (4つを並べて比較する)
       ## myCol K=5 で作ったものをそのまま利用，別途作成してもよい

       ### AR(2)モデルの自己相関
       orgpar <- par(mfrow=c(2,2)) # グラフを2x2(行方向の順)に並べる
       for(i in 1:K) {
	 acf(df.ar[,i], col=myCol[i], main=paste("AR series",i))
       }
       par(orgpar) # もとのparの内容に戻す

       ### MA(2)モデルの自己相関
       orgpar <- par(mfrow=c(2,2))
       for(i in 1:K) {
	 acf(df.ma[,i], col=myCol[i], main=paste("MA series",i))
       }
       par(orgpar) # もとのparの内容に戻す

       ### ARMA(2,1)モデルの自己相関
       orgpar <- par(mfrow=c(2,2))
       for(i in 1:K) {
	 acf(df.arma[,i], col=myCol[i], main=paste("ARMA series",i))
       }
       par(orgpar) # もとのparの内容に戻す
     #+end_src

   
** COMMENT 演習: 自己共分散・自己相関
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   以下のcodeを確認してみよう
   - [[./code/13-acf.r][13-acf.r]]
   - [[./code/13-eustock.r][13-eustock.r]] 


* 次週の内容
  - 第1日: 時系列のモデル
  - *第2日: モデルの推定と予測*


* COMMENT ローカル変数
# Local Variables:
# org-latex-listings: minted
# End:
