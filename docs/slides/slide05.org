#+TITLE: 回帰分析
#+SUBTITLE: 予測と発展的なモデル
#+AUTHOR: 村田 昇
#+EMAIL: noboru.murata@gmail.com
#+DATE: 
#+STARTUP: hidestars content indent
# Time-stamp: <2024-11-04 16:48:53 mura>
:REVEAL:
#+SETUPFILE: "./reveal.js/local/mycourse.org"
# C-c C-x C-v でinlineを切り替え
# <m C-i でlatex block (math env用)
# C-c '
:END:

* COMMENT メモ
- 第3講以降は同じファイルを使うように整理する
- 同じタイトルの項目にはメモを入れる
- 演習の内容が異なるので演習は2つ作る形で対応
- ggplotで全部書き直したいが ggpairs の色が寂しい
- 交互作用の件はもう少し良い例で診断プロットを付けるのが良さそう

* 講義の内容
:PROPERTIES:
:ID:       BEC08A64-5F4E-446A-8599-7069B7C6F2D9
:END:
# 早稲田大学
- 第1回: 回帰モデルの考え方と推定
- 第2回: モデルの評価
- *第3回: モデルによる予測と発展的なモデル*

#+begin_src R :exports none :tangle no
  setwd("~/Desktop/lectures/mva/course")
#+end_src
#+begin_src R :exports none
  ### 第5講 資料
  library(tidyverse)
  library(broom)
  library(gt)
  library(gtsummary)
  theme_gtsummary_compact()
  library(ggfortify)
  #' 日本語表示・色の設定 (ggplot)
  theme_set(theme_gray(base_size = 16))
  if(Sys.info()[["sysname"]] == "Darwin") { # MacOSか確認
    if(length(grep("BIZUDPGothic", systemfonts::system_fonts()[["name"]]))>0) 
      theme_update(text = element_text(family = "BIZUDGothic-Regular"))
    else
      theme_update(text = element_text(family = "HiraMaruProN-W4"))}
  library(see)
  options(ggplot2.discrete.colour = function() scale_colour_material(),
          ggplot2.discrete.fill = function() scale_fill_material())
#+end_src

* COMMENT 講義概要
:PROPERTIES:
:ID:       390CCA0E-6946-41A2-9E43-71FF56247DA8
:END:
# 東京大学
- 第1回: 回帰モデルの考え方と推定
- 第2回: モデルの評価
- *第3回: モデルによる予測と発展的なモデル*

#+begin_src R :exports none :tangle no
  setwd("~/Desktop/lectures/u-tokyo/autumn/course")
#+end_src
#+begin_src R :exports none
  ### 第5講 サンプルコード
  library(tidyverse)
  library(broom)
  library(gt)
  library(gtsummary)
  library(ggfortify) # 診断プロットのため
  if(Sys.info()["sysname"] == "Darwin") { # MacOSか調べて日本語フォントを指定
    theme_update(text = element_text(family = "HiraMaruProN-W4"))}
#+end_src


* 回帰分析の復習
** 線形回帰モデル
- *目的変数* を *説明変数* で説明する関係式を構成
  - 説明変数: \(x_1,\dotsc,x_p\) (p次元)
  - 目的変数: \(y\) (1次元)
- *回帰係数* \(\beta_0,\beta_1,\dotsc,\beta_p\) を用いた一次式
  #+begin_quote
  \begin{equation}
    y=\beta_0+\beta_1x_1+\dotsb+\beta_px_p
  \end{equation}
  #+end_quote
- *誤差項* を含む確率モデルで観測データを表現
  #+begin_quote
  \begin{equation}
    y_i=\beta_0+\beta_1 x_{i1}+\cdots+\beta_px_{ip}+\epsilon_i
    \quad (i=1,\dotsc,n)
  \end{equation}
  #+end_quote

** 問題設定
- 確率モデル
  #+begin_quote
  \begin{equation}
    \boldsymbol{y}
    =X\boldsymbol{\beta}+\boldsymbol{\epsilon},
    \quad\boldsymbol{\epsilon}\sim\text{確率分布}
  \end{equation}
  #+end_quote
- 式の評価 : *残差平方和* の最小化による推定
  #+begin_quote
  \begin{equation}
    S(\boldsymbol{\beta})
    =(\boldsymbol{y}-X\boldsymbol{\beta})^{\mathsf{T}}
    (\boldsymbol{y}-X\boldsymbol{\beta})
  \end{equation}
  #+end_quote

** 解とその一意性
- 解の条件 : *正規方程式*
  #+begin_quote
  \begin{equation}
    X^{\mathsf{T}}X\boldsymbol{\beta}
    =X^{\mathsf{T}}\boldsymbol{y}
  \end{equation}
  #+end_quote
- 解の一意性 : *Gram 行列* \(X^{\mathsf{T}}X\) が正則
  #+begin_quote
  \begin{equation}
    \hat{\boldsymbol{\beta}}
    =
    (X^{\mathsf{T}}X)^{-1}
    X^{\mathsf{T}}\boldsymbol{y}  
  \end{equation}
  #+end_quote


* 解析の事例
** 気温に影響を与える要因の分析
:PROPERTIES:
:ID:       A489FC6E-DE7F-40F3-AF84-149780E42205
:END:
- データの概要
  #+begin_src R :exports none
    #' @exercise 東京の気候データを用いた例

    #' データの読み込み
    tw_data <- read_csv("data/tokyo_weather.csv") |>
      mutate(date = date(paste(year,month,day,sep="-")), .before = 1) |>
      select(-c(year,month,day,day_of_week)) |>
      set_names(c("日付","気温","降雨","日射","降雪","風向","風速","気圧","湿度","雲量"))
    tw_subset <- tw_data |> # 9月のデータの抽出
      filter(month(日付) == 9)
    #' モデル式
    tw_formula1 <- 気温 ~ 気圧
    tw_formula2 <- 気温 ~ 日射
    tw_formula3 <- 気温 ~ 気圧 + 日射
    tw_formula4 <- 気温 ~ 気圧 + 日射 + 湿度
    tw_formula5 <- 気温 ~ 気圧 + 日射 + 雲量

    #' 推定
    tw_lm1 <- lm(tw_formula1, data = tw_subset, y = TRUE)
    tw_lm2 <- lm(tw_formula2, data = tw_subset, y = TRUE)
    tw_lm3 <- lm(tw_formula3, data = tw_subset, y = TRUE)
    tw_lm4 <- lm(tw_formula4, data = tw_subset, y = TRUE)
    tw_lm5 <- lm(tw_formula5, data = tw_subset, y = TRUE)
  #+end_src

  #+begin_src R :exports none :tangle no
    #' データの表示
    #' 記録を残すのであれば以下のようにすればよい
    #' foo <- set_names(names(tw_subset), # 列名に対応する日本語ベクトルを用意
    #'                     c("日付","気温","降雨","日射","降雪","風向","風速","気圧","湿度","雲量"))
    #' (bar <- tw_subset |> rename(all_of(foo)))
  #+end_src
  #+begin_src R :eval no :exports none
    tw_subset |> View() # 左上ペインに表として表示
  #+end_src
  #+begin_src R :exports results :results output html :tangle no
    #' データの表示(reveal用)
    tw_subset |>
      slice(1:15) |> 
      gt() |>
      as_raw_html()
  #+end_src
  #+begin_src R :exports results :results value scalar latex :tangle no
    #' データの表示(latex用)
    tw_subset |>
      mutate(日付 = as.character(日付)) |> # 文字列扱い
      gt() |>
      tab_options(table.font.size = 12) |>
      as_latex() |> as.character()
  #+end_src

  # org に表を処理させる場合は以下のとおり
  # #+html: <font size=6>
  # #+begin_src R :exports results :results output raw :tangle no
  #   #' データの表示(reveal用)
  #   bar |>
  #     head(12) |> # 12日分を表示
  #     ascii::ascii(include.rownames = FALSE) |>
  #     ascii::print(type = "org")
  # #+end_src
  # #+html: </font>

#+reveal: split
- 気温を説明する5種類の線形回帰モデルを検討
  - モデル1 : 気温 = F(気圧)
  - モデル2 : 気温 = F(日射)
  - モデル3 : 気温 = F(気圧, 日射)
  - モデル4 : 気温 = F(気圧, 日射, 湿度)
  - モデル5 : 気温 = F(気圧, 日射, 雲量)

** COMMENT 東京の8月の気候の分析
:PROPERTIES:
:ID:       A489FC6E-DE7F-40F3-AF84-149780E42205
:END:
- データの一部
  #+begin_src R :exports none
    #' @exercise 東京の気候データを用いた例
    
    #' データの読み込み
    tw_subset <- read_csv("data/tokyo_weather.csv") |>
      filter(month == 8) |> # 8月のデータの抽出
      mutate(date = date(paste(year, month, day, sep = "-")), .before = 1) |>
      select(-c(year, month, day, day_of_week))

    #' モデル式
    tw_model1 <- temp ~ press
    tw_model2 <- temp ~ solar
    tw_model3 <- temp ~ press + solar
    tw_model4 <- temp ~ press + solar + humid
    tw_model5 <- temp ~ press + solar + cloud

    #' 推定
    tw_lm1 <- lm(tw_model1, data = tw_subset, y = TRUE)
    tw_lm2 <- lm(tw_model2, data = tw_subset, y = TRUE)
    tw_lm3 <- lm(tw_model3, data = tw_subset, y = TRUE)
    tw_lm4 <- lm(tw_model4, data = tw_subset, y = TRUE)
    tw_lm5 <- lm(tw_model5, data = tw_subset, y = TRUE)
  #+end_src

  #+begin_src R :exports none
    #' データの表示
    #' 列名を日本語にして表示する
    foo <- set_names(names(tw_subset), # 列名に対応する日本語ベクトルを用意
                     c("日付","気温","降雨","日射","降雪","風向","風速","気圧","湿度","雲量"))
    (bar <- tw_subset |> rename(all_of(foo)))
  #+end_src
  #+begin_src R :eval no :exports none
    View(bar) # 左上ペインに表として表示
  #+end_src
  #+html: <font size=5>
  #+begin_src R :exports results :results output html :tangle no
    #' データの表示(reveal用)
    bar |> slice(1:14) |> mutate(日付 = as.character(日付)) |>
      stargazer::stargazer(summary = FALSE,
                           rownames = FALSE,
                           title = "東京の8月の気候",
                           type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' データの表示(latex用)
    bar |> mutate(日付 = as.character(日付)) |>
      stargazer::stargazer(summary = FALSE,
                           rownames = FALSE,
                           title = "東京の8月の気候",
                           font.size = "small", type = "latex")
  #+end_src

#+reveal: split
- 気温を説明する5種類の線形回帰モデルを検討
  - モデル1 : 気温 = F(気圧)
  - モデル2 : 気温 = F(日射)
  - モデル3 : 気温 = F(気圧, 日射)
  - モデル4 : 気温 = F(気圧, 日射, 湿度)
  - モデル5 : 気温 = F(気圧, 日射, 雲量)

** 分析の視覚化
:PROPERTIES:
:END:
- 関連するデータの散布図
  #+begin_src R :file figs/05_pairs.png :exports results :results graphics
    #' 関連データの散布図
    tw_subset |>
      select(気温,気圧,日射,湿度,雲量) |>
      GGally::ggpairs()
  #+end_src

#+caption: 散布図
#+name: fig:05_pairs
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_pairs.png]]

#+reveal: split
- 観測値とあてはめ値の比較
  #+begin_src R :file figs/05_models.png :exports results :results graphics
    #' 観測値とあてはめ値の比較
    tw_subset |>
      mutate(モデル1 = fitted(tw_lm1),    # モデルごとに予測値をデータフレームに追加
             モデル2 = fitted(tw_lm2),
             モデル3 = fitted(tw_lm3),
             モデル4 = fitted(tw_lm4),
             モデル5 = fitted(tw_lm5)) |>
      pivot_longer(starts_with("モデル"), # モデルをラベルとして予測値をまとめる
                   names_to = "モデル", values_to = "あてはめ値") |>
      ggplot(aes(x = 気温, y = あてはめ値)) + # 気温の実測値をx軸，予測値をy軸で表示
      geom_abline(slope = 1, intercept = 0, colour = "red") + # 基準線
      geom_point(aes(colour = モデル, shape = モデル)) + # 予測値をモデル別に表示
      xlim(22,32) + ylim(22,32) +
      theme(legend.position = "inside", legend.position.inside = c(.88,.15))
  #+end_src

#+caption: モデルの比較
#+name: fig:05_models
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_models.png]]

** COMMENT 分析の視覚化
:PROPERTIES:
:ID:       E5C084E0-BB7D-4C8B-B289-C1F617CE2B13
:END:
- 関連するデータの散布図
  #+begin_src R :file figs/05_pairs.png :exports results :results graphics
    #' 関連データの散布図
    tw_subset |>
      select(temp,press,solar,humid,cloud) |>
      GGally::ggpairs(columnLabels=c("気温","気圧","日射","湿度","雲量"))
  #+end_src

#+caption: 散布図
#+name: fig:05_pairs
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_pairs.png]]

#+reveal: split
- 観測値とあてはめ値の比較
  #+begin_src R :file figs/05_models.png :exports results :results graphics
    #' 観測値とあてはめ値の比較
    tw_subset |>
      mutate(モデル1 = fitted(tw_lm1),    # モデルごとに予測値をデータフレームに追加
             モデル2 = fitted(tw_lm2),
             モデル3 = fitted(tw_lm3),
             モデル4 = fitted(tw_lm4),
             モデル5 = fitted(tw_lm5)) |>
      pivot_longer(starts_with("モデル"), # モデルをラベルとして予測値をまとめる
                   names_to = "model", values_to = "fitted") |>
      ggplot(aes(x = temp, y = fitted)) + # 気温の実測値をx軸，予測値をy軸で表示
      geom_abline(slope = 1, intercept = 0, colour = "red") + # 基準線
      geom_point(aes(colour = model, shape = model)) + # 予測値をモデル別に表示
      labs(x = "気温", y = "あてはめ値") +
      xlim(22,32) + ylim(22,32) + theme(legend.position = c(.88,.15))
  #+end_src

#+caption: モデルの比較
#+name: fig:05_models
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_models.png]]
** 寄与率
- *決定係数* (R-squared)
  #+begin_quote
  \begin{equation}
    R^2
    =
    1-\frac{\sum_{i=1}^n\hat{\epsilon}_i^2}{\sum_{i=1}^n(y_i-\bar{y})^2}
  \end{equation}
  #+end_quote
- *自由度調整済み決定係数* (adjusted R-squared)
  #+begin_quote
  \begin{equation}
    \bar{R}^2
    =
    1-\frac{\frac{1}{n{-}p{-}1}\sum_{i=1}^n\hat{\epsilon}_i^2}
    {\frac{1}{n{-}1}\sum_{i=1}^n(y_i-\bar{y})^2}
  \end{equation}
  #+end_quote
  - 不偏分散で補正
** モデルの評価
- 決定係数(\(R^{2}\)・ Adjusted \(R^{2}\))によるモデルの比較

#+begin_src R :exports none
  #' 関数 gtsummary::tbl_regression() を利用して結果をまとめる
  my_gts <- function(x){
    tbl_regression(x) |>
      add_significance_stars(
        hide_se = TRUE,
        pattern = "{estimate}{stars} ({std.error})"
      ) |>
      modify_header(estimate = "**Beta (SE)**") |>
      modify_footnote(estimate = "SE = Standard Error", abbreviation = TRUE) |>
      add_glance_table(include = c(r.squared,
                                   adj.r.squared)) }
  tw_gt <- 
    tbl_merge(
      tbls = list(
        my_gts(tw_lm1),
        my_gts(tw_lm2),
        my_gts(tw_lm3),
        my_gts(tw_lm4),
        my_gts(tw_lm5)),
      tab_spanner = paste0("モデル",1:5)) |>
    modify_table_body( ~ .x |>
                         arrange(factor(variable,
                                        levels = c("気圧",
                                                   "日射",
                                                   "湿度",
                                                   "雲量"))))
#+end_src
#+begin_src R :eval no :exports none
  tw_gt # Viewer ペインに表示
#+end_src
#+begin_src R :exports results :results output html :tangle no
  #' 表示(reveal用)
  tw_gt |> as_gt() |>
    tab_options(table.font.size = 20) |>
    as_raw_html()
  #+end_src
#+begin_src R :exports results :results value scalar latex :tangle no
  #' 表示(latex用)
  tw_gt |> as_gt() |>
    tab_options(table.font.size = 12) |>
    as_latex() |> as.character()
#+end_src

** COMMENT モデルの評価(stargazer)
:PROPERTIES:
:ID:       6463C58D-1F34-41FE-8F44-77CE478493C0
:END:
- 決定係数(\(R^{2}\), Adjusted \(R^{2}\))
  #+html: <font size=4>
  #+begin_src R :exports results :results output html :tangle no
    #' 決定係数のまとめ
    #' reveal用
    #' 関数 stargazer::stargazer() を利用して結果をまとめる
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5,
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         keep.stat = c("rsq","adj.rsq"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         omit.table.layout = "n", # NULL, # "sn"
                         ## report = "vc*st", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "寄与率によるモデルの比較",
                         type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' 決定係数のまとめ
    #' latex用
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5,
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         keep.stat = c("rsq","adj.rsq"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         omit.table.layout = "n", # NULL, # "sn"
                         ## report = "vc*st", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "寄与率によるモデルの比較",
                         font.size = "footnotesize", type = "latex")
  #+end_src
  #+begin_src R :eval no :exports none
    #' 決定係数のまとめ
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5,
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         keep.stat = c("rsq","adj.rsq"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         omit.table.layout = "n", # NULL, # "sn"
                         ## report = "vc*st", # NULL,
                         ## single.row = TRUE, # FALSE,
                         title = "寄与率によるモデルの比較",
                         type = "text")
  #+end_src

  # org に表を処理させる場合は以下のとおり
  # #+begin_src R :exports none
  #   #' 関数 tibble::tribble() を利用して結果をまとめる
  #   #' 行ごとにデータを並べてデータフレームを作ることができる
  #   (baz <- tribble(
  #      ~モデル, ~決定係数, ~自由度調整済み決定係数,
  #      ## 列名は ~ で指定
  #      "気温 = F(気圧)", summary(tw_lm1)$r.squared, summary(tw_lm1)$adj.r.squared,
  #      "気温 = F(日射)", summary(tw_lm2)$r.squared, summary(tw_lm2)$adj.r.squared,
  #      "気温 = F(気圧, 日射)", summary(tw_lm3)$r.squared, summary(tw_lm3)$adj.r.squared,
  #      "気温 = F(気圧, 日射, 湿度)", summary(tw_lm4)$r.squared, summary(tw_lm4)$adj.r.squared,
  #      "気温 = F(気圧, 日射, 雲量)", summary(tw_lm5)$r.squared, summary(tw_lm5)$adj.r.squared,
  #      ))
  # #+end_src
  # #+begin_src R :eval no :exports none
  #   View(baz) # 左上ペインに表として表示
  # #+end_src
  # #+html: <font size=6>
  # #+begin_src R :exports results :results output raw :tangle no
  #   #' 比較結果の表示 (reveal用)
  #   baz |> ascii::ascii(digits=3) |> ascii::print(type = "org")
  # #+end_src
  # #+html: </font>
      
** COMMENT モデルの評価(古い)
- 決定係数
  - モデル1 : 気温 = F(気圧)
    #+begin_src R :exports results :tangle yes
      ## モデル1
      print(
        paste("R2:",
              signif(summary(tw_lm1)$r.squared,digits=3),
              "; adj. R2:",
              signif(summary(tw_lm1)$adj.r.squared,digits=3)
              ))
    #+end_src
  - モデル2 : 気温 = F(日射)
    #+begin_src R :exports results :tangle yes
      ## モデル1
      print(
        paste("R2:",
              signif(summary(tw_lm2)$r.squared,digits=3),
              "; adj. R2:",
              signif(summary(tw_lm2)$adj.r.squared,digits=3)
              ))
    #+end_src
  - モデル3 : 気温 = F(気圧, 日射)
    #+begin_src R :exports results :tangle yes
      ## モデル3
      print(
        paste("R2:",
              signif(summary(tw_lm3)$r.squared,digits=3),
              "; adj. R2:",
              signif(summary(tw_lm3)$adj.r.squared,digits=3)
              ))
    #+end_src
  - モデル4 : 気温 = F(気圧, 日射, 湿度) (3より改善している)
    #+begin_src R :exports results :tangle yes
      ## モデル4
      print(
        paste("R2:",
              signif(summary(tw_lm4)$r.squared,digits=3),
              "; adj. R2:",
              signif(summary(tw_lm4)$adj.r.squared,digits=3)
              ))
    #+end_src
  - モデル5 : 気温 = F(気圧, 日射, 雲量) (3より改善している)
    #+begin_src R :exports results :tangle yes
      ## モデル4
      print(
        paste("R2:",
              signif(summary(tw_lm5)$r.squared,digits=3),
              "; adj. R2:",
              signif(summary(tw_lm5)$adj.r.squared,digits=3)
              ))
    #+end_src

** @@latex:@@\(F\)統計量による検定
- 説明変数のうち1つでも役に立つか否かを検定する
  - 帰無仮説 \(H_{0}\): \(\beta_1=\dotsb=\beta_p=0\)
  - 対立仮説 \(H_{1}\): \(\exists j\;\beta_j\neq0\) (少なくとも1つは役に立つ)
- \(F\)統計量: 決定係数(または残差)を用いて計算
  #+begin_quote
  \begin{equation}
    F
    =\frac{n{-}p{-}1}{p}\frac{R^2}{1-R^2}
  \end{equation}
  #+end_quote
- \(p\)値: 自由度 \(p,n{-}p{-}1\) の \(F\)分布で計算
  #   \begin{equation}
  #     \text{(\(p\)値)}
  #     =
  #     \int_{F}^\infty f(x)dx,
  #   \end{equation}

** モデルの評価
- \(F\)統計量によるモデルの比較
  #+begin_src R :exports none
    #' 関数 gtsummary::tbl_regression() を利用して結果をまとめる
    my_gts <- function(x){
      tbl_regression(x) |>
        add_significance_stars(
          hide_se = TRUE,
          pattern = "{estimate}{stars} ({std.error})"
        ) |>
        modify_header(estimate = "**Beta (SE)**") |>
        modify_footnote(estimate = "SE = Standard Error", abbreviation = TRUE) |>
        add_glance_table(include = c(r.squared,
                                     statistic,
                                     p.value)) }
    tw_gt <- 
      tbl_merge(
        tbls = list(
          my_gts(tw_lm1),
          my_gts(tw_lm2),
          my_gts(tw_lm3),
          my_gts(tw_lm4),
          my_gts(tw_lm5)),
        tab_spanner = paste0("モデル",1:5)) |>
      modify_table_body( ~ .x |>
                           arrange(factor(variable,
                                          levels = c("気圧",
                                                     "日射",
                                                     "湿度",
                                                     "雲量"))))
  #+end_src
  #+begin_src R :eval no :exports none
    tw_gt # Viewer ペインに表示
  #+end_src
  #+begin_src R :exports results :results output html :tangle no
    #' 表示(reveal用)
    tw_gt |> as_gt() |>
      tab_options(table.font.size = 20) |>
      as_raw_html()
  #+end_src
  #+begin_src R :exports results :results value scalar latex :tangle no
    #' 表示(latex用)
    tw_gt |> as_gt() |>
      tab_options(table.font.size = 12) |>
      as_latex() |> as.character()
  #+end_src

** COMMENT モデルの評価(stargazer)
:PROPERTIES:
:ID:       6104947A-BAD8-48A6-848D-9001C82883BF
:END:
- \(F\)統計量
  #+html: <font size=4>
  #+begin_src R :exports results :results output html :tangle no
    #' F統計量のまとめ
    #' reveal用
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5, # 既定値を '#' の後に記している
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         keep.stat = c("rsq","adj.rsq","ser","f"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         ## omit.table.layout = "n", # NULL, # "sn"
                         ## report = "vc*st", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "F統計量によるモデルの比較",
                         type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' F統計量のまとめ
    #' latex用
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5, # 既定値を '#' の後に記している
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         keep.stat = c("rsq","adj.rsq","ser","f"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         ## omit.table.layout = "n", # NULL, # "sn"
                         ## report = "vc*st", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "F統計量によるモデルの比較",
                         font.size = "footnotesize", type = "latex")
  #+end_src
  #+begin_src R :eval no :exports none
    #' F統計量のまとめ
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5, # 既定値を '#' の後に記している
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         keep.stat = c("rsq","adj.rsq","ser","f"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         ## omit.table.layout = "n", # NULL, # "sn"
                         ## report = "vc*st", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "F統計量によるモデルの比較",
                         type = "text")
  #+end_src

** COMMENT モデルの評価(古い)
:PROPERTIES:
:ID:       BBFD2684-8420-445F-9CB9-03E1CF3ACFBD
:END:
- 決定係数と\(F\)統計量
  - モデル1 : 気温 = F(気圧)
    #+begin_src R :exports results :tangle yes
      ## モデル1
      tw_sum <- summary(tw_lm1)
      tw_r2 <- tw_sum$r.squared
      tw_ar2 <- tw_sum$adj.r.squared
      tw_fstat <- tw_sum$fstat
      print(
          paste("R2:",
                signif(tw_r2,digits=3),
                "; adj. R2:",
                signif(tw_ar2,digits=3),
                "; F-stat:",
                signif(tw_fstat[1],digits=3),
                "; p-val:",
                signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
                ))
    #+end_src
  - モデル2 : 気温 = F(日射)
    #+begin_src R :exports results :tangle yes
      ## モデル2
      tw_sum <- summary(tw_lm2)
      tw_r2 <- tw_sum$r.squared
      tw_ar2 <- tw_sum$adj.r.squared
      tw_fstat <- tw_sum$fstat
      print(
          paste("R2:",
                signif(tw_r2,digits=3),
                "; adj. R2:",
                signif(tw_ar2,digits=3),
                "; F-stat:",
                signif(tw_fstat[1],digits=3),
                "; p-val:",
                signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
                ))
    #+end_src
  - モデル3 : 気温 = F(気圧, 日射)
    #+begin_src R :exports results :tangle yes
      ## モデル3
      tw_sum <- summary(tw_lm3)
      tw_r2 <- tw_sum$r.squared
      tw_ar2 <- tw_sum$adj.r.squared
      tw_fstat <- tw_sum$fstat
      print(
          paste("R2:",
                signif(tw_r2,digits=3),
                "; adj. R2:",
                signif(tw_ar2,digits=3),
                "; F-stat:",
                signif(tw_fstat[1],digits=3),
                "; p-val:",
                signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
                ))
    #+end_src
  - モデル4 : 気温 = F(気圧, 日射, 湿度)
    #+begin_src R :exports results :tangle yes
      ## モデル4
      tw_sum <- summary(tw_lm4)
      tw_r2 <- tw_sum$r.squared
      tw_ar2 <- tw_sum$adj.r.squared
      tw_fstat <- tw_sum$fstat
      print(
          paste("R2:",
                signif(tw_r2,digits=3),
                "; adj. R2:",
                signif(tw_ar2,digits=3),
                "; F-stat:",
                signif(tw_fstat[1],digits=3),
                "; p-val:",
                signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
                ))
    #+end_src
  - モデル5 : 気温 = F(気圧, 日射, 雲量)
    #+begin_src R :exports results :tangle yes
      ## モデル5
      tw_sum <- summary(tw_lm5)
      tw_r2 <- tw_sum$r.squared
      tw_ar2 <- tw_sum$adj.r.squared
      tw_fstat <- tw_sum$fstat
      print(
          paste("R2:",
                signif(tw_r2,digits=3),
                "; adj. R2:",
                signif(tw_ar2,digits=3),
                "; F-stat:",
                signif(tw_fstat[1],digits=3),
                "; p-val:",
                signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
                ))
    #+end_src

** @@latex:@@\(t\)統計量による検定
- 回帰係数 \(\beta_j\) が回帰式に寄与するか否かを検定する
  - 帰無仮説 \(H_{0}\): \(\beta_j=0\)
  - 対立仮説 \(H_{1}\): \(\beta_j\neq0\) (\(\beta_j\) は役に立つ)
- \(t\)統計量: 各係数ごと，\(\zeta\) は \((X^{\mathsf{T}} X)^{-1}\) の対角成分
  #+begin_quote
  \begin{equation}
    t=\frac{\hat{\beta}_j}{\hat{\sigma}\zeta_{j}}
  \end{equation}
  #+end_quote
- \(p\)値: 自由度 \(n{-}p{-}1\) の \(t\)分布を用いて計算
  # \begin{equation}
  #   \text{(\(p\)値)}
  #   =
  #   2\int_{|t|}^\infty f(x)dx
  # \end{equation}

** モデルの評価
- \(t\)統計量によるモデルの比較
  #+begin_src R :exports none
    #' 関数 gtsummary::tbl_regression() を利用して結果をまとめる
    my_gts <- function(x){
      tbl_regression(x, intercept = TRUE) |>                   # 標準の表
        modify_column_hide(columns = c(conf.low)) |>           # 信頼区間を非表示
        modify_column_unhide(columns = c(std.error,statistic))} # 標準誤差とt統計量を表示
    tw_gt <- 
      tbl_merge(
        tbls = list(
          my_gts(tw_lm1),
          my_gts(tw_lm2),
          my_gts(tw_lm3),
          my_gts(tw_lm4),
          my_gts(tw_lm5)),
        tab_spanner = paste0("モデル",1:5)) |>
      modify_table_body( ~ .x |>
                           arrange(factor(variable,
                                          levels = c("(Intercept)",
                                                     "気圧",
                                                     "日射",
                                                     "湿度",
                                                     "雲量"))))
  #+end_src
  #+begin_src R :eval no :exports none
    tw_gt # Viewer ペインに表示
  #+end_src
  #+begin_src R :exports results :results output html :tangle no
    #' 表示(reveal用)
    tw_gt |> as_gt() |>
      tab_options(table.font.size = 20) |>
      as_raw_html()
  #+end_src
  #+begin_src R :exports results :results value scalar latex :tangle no
    #' 表示(latex用)
    tbl_merge(
      tbls = list(
        my_gts(tw_lm1),
        my_gts(tw_lm2),
        my_gts(tw_lm3)),
      tab_spanner = paste0("モデル",1:3)) |>
      modify_table_body( ~ .x |>
                           arrange(factor(variable,
                                          levels = c("(Intercept)",
                                                     "気圧",
                                                     "日射",
                                                     "湿度",
                                                     "雲量")))) |>
      as_gt() |>
      tab_options(table.font.size = 10) |> as_latex() |> as.character()
  #+end_src
  #+begin_src R :exports results :results value scalar latex :tangle no
    #' 表示(latex用)
    tbl_merge(
      tbls = list(
        my_gts(tw_lm4),
        my_gts(tw_lm5)),
      tab_spanner = paste0("モデル",4:5)) |>
      modify_table_body( ~ .x |>
                           arrange(factor(variable,
                                          levels = c("(Intercept)",
                                                     "気圧",
                                                     "日射",
                                                     "湿度",
                                                     "雲量")))) |>
      as_gt() |>
      tab_options(table.font.size = 10) |> as_latex() |> as.character()
  #+end_src

** COMMENT モデルの評価(stargazer)
:PROPERTIES:
:ID:       6104947A-BAD8-48A6-848D-9001C82883BF
:END:
- \(t\)統計量
  #+html: <font size=4>
  #+begin_src R :exports results :results output html :tangle no
    #' t統計量のまとめ
    #' reveal用
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5, # 既定値を '#' の後に記している
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         ## keep.stat = c("rsq","adj.rsq"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         omit.table.layout = "sn", # NULL, 
                         report = "vc*stp", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "t統計量によるモデルの比較",
                         type = "html")
  #+end_src
  #+html: </font>
  #+begin_src R :exports results :results output latex :tangle no
    #' t統計量のまとめ
    #' latex用
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5, # 既定値を '#' の後に記している
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         ## keep.stat = c("rsq","adj.rsq"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         omit.table.layout = "sn", # NULL, 
                         report = "vc*stp", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "t統計量によるモデルの比較",
                         font.size = "footnotesize", type = "latex")
  #+end_src
  #+begin_src R :eval no :exports none
    #' t統計量のまとめ
    stargazer::stargazer(tw_lm1, tw_lm2, tw_lm3, tw_lm4, tw_lm5, # 既定値を '#' の後に記している
                         column.labels = c("モデル1","モデル2","モデル3","モデル4","モデル5"), # NULL,
                         covariate.labels = c("気圧","日射","湿度","雲量"), # NULL,
                         dep.var.caption = "目的変数", # NULL,
                         dep.var.labels = "気温", # NULL,
                         ## dep.var.labels.include = TRUE,
                         ## keep.stat = c("rsq","adj.rsq"), # NULL,
                         ## model.names = NULL,
                         model.numbers = FALSE, # NULL,
                         ## object.names = FALSE,
                         omit.table.layout = "sn", # NULL, 
                         report = "vc*stp", # NULL,
                         single.row = TRUE, # FALSE,
                         title = "t統計量によるモデルの比較",
                         type = "text")
  #+end_src

** COMMENT モデルの評価(古い)
:PROPERTIES:
:ID:       EA74088A-AB01-44FF-992D-E50018520337
:END:
- 回帰係数の推定値と\(t\)統計量
  - モデル1 : 気温 = F(気圧)
    #+begin_src R :exports results :tangle yes
      ## モデル1
      signif(summary(tw_lm1)$coef,digits=3)
    #+end_src
    - 気圧単体では回帰係数は有意ではない
  - モデル2 : 気温 = F(日射)
    #+begin_src R :exports results :tangle yes
      ## モデル2
      signif(summary(tw_lm2)$coef,digits=3)
    #+end_src
    - 日射単体の回帰係数は有意となる
  - モデル3 : 気温 = F(気圧, 日射)
    #+begin_src R :exports results :tangle yes
      ## モデル3
      signif(summary(tw_lm3)$coef,digits=3)
    #+end_src
    - 気圧は日射と組み合わせることで有意となる

#+reveal: split     
- 回帰係数の推定値と\(t\)統計量 (つづき)
  - モデル4: 気温 = F(気圧, 日射, 湿度)
    #+begin_src R :exports results :tangle yes
      ## モデル4
      signif(summary(tw_lm4)$coef,digits=3)
    #+end_src
  - モデル5: 気温 = F(気圧, 日射, 雲量) 
    #+begin_src R :exports results :tangle yes
      ## モデル5
      signif(summary(tw_lm5)$coef,digits=3)
    #+end_src
    - このモデルでは雲量は有用でないことが示唆される

** 診断プロットによる評価
:PROPERTIES:
:ID:       F6E66B48-BDBE-46E7-AAED-6BD55B99A7A4
:END:
- モデル2
  #+begin_src R :file figs/05_diag_model2.png :exports results :results graphics
    #' 診断プロット (モデル2)
    autoplot(tw_lm2)
  #+end_src

#+caption: モデル2の診断
#+name: fig:05_diag_model2
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_diag_model2.png]]

#+reveal: split
- モデル3
  #+begin_src R :file figs/05_diag_model3.png :exports results :results graphics
    #' 診断プロット (モデル3)
    autoplot(tw_lm3)
  #+end_src

#+caption: モデル3の診断
#+name: fig:05_diag_model3
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_diag_model3.png]]

#+reveal: split
- モデル4
  #+begin_src R :file figs/05_diag_model4.png :exports results :results graphics
    #' 診断プロット (モデル4)
    autoplot(tw_lm4)
  #+end_src

#+caption: モデル4の診断
#+name: fig:05_diag_model4
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_diag_model4.png]]
  
** COMMENT 講義資料: 回帰分析とその評価
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/06-wine.r][06-wine.r]] を確認してみよう


* 回帰モデルによる予測
** 予測
- 新しいデータ (説明変数) \(\boldsymbol{x}\) に対する *予測値*
  #+begin_quote
  \begin{equation}
    \hat{y}
    =
    (1,\boldsymbol{x}^{\mathsf{T}})\hat{\boldsymbol{\beta}},
    \qquad
    \hat{\boldsymbol{\beta}}
    =
    (X^{\mathsf{T}}X)^{-1}
    X^{\mathsf{T}}\boldsymbol{y}
  \end{equation}
  #+end_quote
- 予測値は元データの目的変数の重み付け線形和
  #+begin_quote
  \begin{equation}
    \hat{y}
    =
    \boldsymbol{w}(\boldsymbol{x})^{\mathsf{T}}\boldsymbol{y},
    \qquad
    \boldsymbol{w}(\boldsymbol{x})^{\mathsf{T}}
    =
    (1,\boldsymbol{x}^{\mathsf{T}})
    (X^{\mathsf{T}}X)^{-1}
    X^{\mathsf{T}}
  \end{equation}
  #+end_quote
  - 重みは元データと新規データの説明変数で決定

** 予測値の性質
- 推定量は以下の性質をもつ多変量正規分布
  #+begin_quote
  \begin{align}
    \mathbb{E}[\hat{\boldsymbol{\beta}}]
    &=\boldsymbol{\beta}\\
    \mathrm{Cov}(\hat{\boldsymbol{\beta}})
    &=\sigma^{2}(X^{\mathsf{T}}X)^{-1}
  \end{align}
  #+end_quote
- この性質を利用して以下の3つの値の違いを評価
  #+begin_quote
  \begin{align}
    \hat{y}&=(1,\boldsymbol{x}^{\mathsf{T}})\hat{\boldsymbol{\beta}}
    &&\text{(回帰式による予測値)}\\
    \tilde{y}&=(1,\boldsymbol{x}^{\mathsf{T}})\boldsymbol{\beta}
    &&\text{(最適な予測値)}\\
    y&=(1,\boldsymbol{x}^{\mathsf{T}})\boldsymbol{\beta}+\epsilon
    &&\text{(観測値)}
  \end{align}
  #+end_quote
  - \(\hat{y}\) と \(y\) は独立な正規分布に従うことに注意


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 誤差が平均0 分散 \(\sigma^{2}\) の正規分布に従うとき，
  以下の問に答えなさい
  - 予測値 \(\hat{y}\) の平均を求めよ
  - 予測値 \(\hat{y}\) の分散を求めよ
** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 定義にもとづいて計算する
  #+begin_quote
  \begin{align}
    \mathbb{E}[\hat{y}]
    &=
      \mathbb{E}[(1,\boldsymbol{x}^{\mathsf{T}})\hat{\boldsymbol{\beta}}]\\
    &=
      (1,\boldsymbol{x}^{\mathsf{T}})\mathbb{E}[\hat{\boldsymbol{\beta}}]\\
    &=
      (1,\boldsymbol{x}^{\mathsf{T}})\boldsymbol{\beta}\\
    &=
      \tilde{y}
  \end{align}
  #+end_quote
  -  真の回帰式による最適な予測値

#+reveal: split
- 定義にもとづいて計算する
  #+begin_quote
  \begin{align}
    \mathrm{Var}(\hat{y})
    &=
      \mathrm{Var}((1,\boldsymbol{x}^{\mathsf{T}})
      (\hat{\boldsymbol{\beta}}-\boldsymbol{\beta}))\\
    &=
      (1,\boldsymbol{x}^{\mathsf{T}})
      \mathrm{Cov}(\hat{\boldsymbol{\beta}}-\boldsymbol{\beta})
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}\\
    &=
      (1,\boldsymbol{x}^{\mathsf{T}})
      \mathrm{Cov}(\hat{\boldsymbol{\beta}})
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}\\
    &=
      (1,\boldsymbol{x}^{\mathsf{T}})
      \sigma^{2}
      (X^{\mathsf{T}}X)^{-1}
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}\\
    &=
      \sigma^{2}
      (1,\boldsymbol{x}^{\mathsf{T}})
      (X^{\mathsf{T}}X)^{-1}
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}
  \end{align}
  #+end_quote


* 信頼区間
** 最適な予測値との差
- 差の分布は以下の平均・分散をもつ正規分布に従う
  #+begin_quote
  \begin{align}
    \mathbb{E}[\tilde{y}-\hat{y}]
    &=(1,\boldsymbol{x}^{\mathsf{T}})\boldsymbol{\beta}
      -(1,\boldsymbol{x}^{\mathsf{T}})\mathbb{E}[\hat{\boldsymbol{\beta}}]
      =0\\
    \mathrm{Var}(\tilde{y}-\hat{y})
    &=\underbrace{\sigma^{2}(1,\boldsymbol{x}^{\mathsf{T}})(X^{\mathsf{T}}X)^{-1}
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}}_{\text{\(\hat{\boldsymbol{\beta}}\)の推定誤差による分散}}
      =\sigma^{2}\gamma_{c}(\boldsymbol{x})^{2}
  \end{align}
  #+end_quote
- 標準化による表現
  #+begin_quote
  \begin{equation}
    \frac{\tilde{y}-\hat{y}}{\sigma\gamma_{c}(\boldsymbol{x})}
    \sim \mathcal{N}(0,1)
  \end{equation}
  #+end_quote

** 信頼区間
- 未知の分散を不偏分散で推定
  #+begin_quote
  \begin{equation}
    Z=
    \frac{\tilde{y}-\hat{y}}{\hat{\sigma}\gamma_{c}(\boldsymbol{x})}
    \sim \mathcal{T}(n{-}p{-}1) 
    \quad (\text{\(t\)分布})
  \end{equation}
  #+end_quote
- 確率 \(\alpha\) の信頼区間
  #+begin_quote
  \begin{equation}
    \mathcal{I}^{c}_{\alpha}
    =
    \left(
      \hat{y}-C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x}),\;
      \hat{y}+C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x})
    \right)
  \end{equation}
  #  ただし \(C_{\alpha}\) は以下を満たす定数
  \begin{equation}
    P(|Z| < {C_{\alpha}} | Z\sim\mathcal{T}(n{-}p{-}1))
    =\alpha
  \end{equation}
  #+end_quote
  - 最適な予測値 \(\tilde{y}\) が入ることが期待される区間
  #   - 確率 \(\alpha\) で最適な予測値 \(\tilde{y}\) が入ることが期待される区間


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下の問に答えなさい
  - 信頼区間について以下の式が成り立つことを示せ
    #+begin_quote
    \begin{equation}
      P(\tilde{y}\in\mathcal{I}^{c}_{\alpha})
      =\alpha
    \end{equation}
    #+end_quote
  - 観測値と予測値の差 \(y-\hat{y}\) の平均と分散を求めよ

** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- \(C_{\alpha}\) の定義にもとづいて計算すればよい
  #+begin_quote
  \begin{align}
    \alpha
    &=
      P(|Z| < {C_{\alpha}})\\
    &=
      P\left(
      \left|\frac{\tilde{y}-\hat{y}}{\hat{\sigma}\gamma_{c}(\boldsymbol{x})}\right|
      < {C_{\alpha}}
      \right)\\
    &=
      P\left(
      |\tilde{y}-\hat{y}|
      < C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x})
      \right)\\
    &=
      P\left(
      -C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x})
      < \tilde{y}-\hat{y}
      < C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x})
      \right)\\
    &=
      P\left(
      \hat{y}-C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x})
      < \tilde{y}
      < \hat{y}+C_{\alpha}\hat{\sigma}\gamma_{c}(\boldsymbol{x})
      \right)
  \end{align}
  #+end_quote

#+reveal: split
- 独立性を利用して計算する
  #+begin_quote
  \begin{align}
    \mathbb{E}[y-\hat{y}]
    &=
      \mathbb{E}[y]
      -\mathbb{E}[\hat{y}]\\
    &=
      \tilde{y}-\tilde{y}\\
    &=
      0\\
    \mathrm{Var}(y-\hat{y})
    &=
      \mathrm{Var}(y)
      +\mathrm{Var}(\hat{y})\\
    &=
      \sigma^{2}
      +
      \sigma^{2}
      (1,\boldsymbol{x}^{\mathsf{T}})
      (X^{\mathsf{T}}X)^{-1}
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}
  \end{align}
  #+end_quote


* 予測区間
** 観測値との差
- 差の分布は以下の平均・分散をもつ正規分布に従う
  #+begin_quote
  \begin{align}
    \mathbb{E}[y-\hat{y}]
    &=(1,\boldsymbol{x}^{\mathsf{T}})\boldsymbol{\beta}
      +\mathbb{E}[\boldsymbol{\epsilon}]
      -(1,\boldsymbol{x}^{\mathsf{T}})
      \mathbb{E}[\hat{\boldsymbol{\beta}}]
      =0\\
    \mathrm{Var}(y-\hat{y})
    &=\underbrace{\sigma^{2}
      (1,\boldsymbol{x}^{\mathsf{T}})(X^{\mathsf{T}}X)^{-1}
      (1,\boldsymbol{x}^{\mathsf{T}})^{\mathsf{T}}
      }_{\text{\(\hat{\boldsymbol{\beta}}\)の推定誤差による分散}}
      +\underbrace{\sigma^{2}}_{\text{誤差の分散}}
      =\sigma^{2}\gamma_{p}(\boldsymbol{x})^{2}
  \end{align}
  #+end_quote
- 標準化による表現
  #+begin_quote
  \begin{equation}
    \frac{y-\hat{y}}{\sigma\gamma_{p}(\boldsymbol{x})}
    \sim \mathcal{N}(0,1)
  \end{equation}
  #+end_quote

** 予測区間
- 未知の分散を不偏分散で推定
  #+begin_quote
  \begin{equation}
    Z=
    \frac{y-\hat{y}}{\hat{\sigma}\gamma_{p}(\boldsymbol{x})}
    \sim \mathcal{T}(n{-}p{-}1) 
    \quad (\text{\(t\)分布})
  \end{equation}
  #+end_quote
- 確率 \(\alpha\) の予測区間 
  #+begin_quote
  \begin{equation}
    \mathcal{I}^{p}_{\alpha}
    =
    \left(
      \hat{y}-C_{\alpha}\hat{\sigma}\gamma_{p}(\boldsymbol{x}),\;
      \hat{y}+C_{\alpha}\hat{\sigma}\gamma_{p}(\boldsymbol{x})
    \right)
  \end{equation}
  # ただし \(C_{\alpha}\) は以下を満たす定数
  \begin{equation}
    P(|Z| < {C_{\alpha}} | Z\sim\mathcal{T}(n{-}p{-}1))
    =\alpha
  \end{equation}
  #+end_quote
  #   - 確率 \(\alpha\) で観測値 \(y\) が入ることが期待される区間
  - 観測値 \(y\) が入ることが期待される区間
  - \(\gamma_{p}>\gamma_{c}\) なので信頼区間より広くなる



* COMMENT 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** R : 予測値と区間推定
:PROPERTIES:
:ID:       7C42A122-D414-4962-873C-05B63214FAB6
:END:
- 関数 ~stats::predict()~ を用いた予測
  #+begin_src R :eval no :tangle no :tangle no
    #' モデルの作成
    toy_train <- tibble(x1 = ..., x2 = ..., y = ...)
    toy_lm  <- lm(y ~ x1 + x2, data = toy_train) 
    toy_train_fitted  <- predict(toy_lm) # あてはめ値の計算
    #' 新しいデータの予測
    toy_test <- tibble(x1 = ..., x2 = ...) # 予測したいデータの説明変数
    toy_test_fitted <- predict(toy_lm, # 予測値の計算
                               newdata = toy_test) 
    toy_test_conf <- predict(toy_lm, newdata = toy_test, # 信頼区間
                             interval = "confidence", level = 0.95) 
    toy_test_pred <- predict(toy_lm, newdata = toy_test, # 予測区間
                             interval = "prediction", level = 0.95) 
    #' 信頼区間，予測区間の水準の既定値は0.95
  #+end_src

#+reveal: split
- 関数 ~broom::augment()~ を用いた予測
  #+begin_src R :eval no :tangle no :tangle no
    #' モデルの作成
    toy_train <- tibble(x1 = ..., x2 = ..., y = ...)
    toy_lm  <- lm(y ~ x1 + x2, data = toy_train) 
    toy_train_fitted  <- augment(toy_lm) # あてはめ値の計算
    #' 新しいデータの予測
    toy_test <- tibble(x1 = ..., x2 = ...) # 予測したいデータの説明変数
    toy_test_fitted <- augment(toy_lm, # 予測値の計算
                               newdata = toy_test) 
    toy_test_conf <- augment(toy_lm, newdata = toy_test, # 信頼区間
                             interval = "confidence", conf.level = 0.95) 
    toy_test_pred <- augment(toy_lm, newdata = toy_test, # 予測区間
                             interval = "prediction", conf.level = 0.95) 
    #' 信頼区間，予測区間の水準の既定値は0.95
  #+end_src

** R : モデルからの予測
:PROPERTIES:
:ID:       3A08A8A7-69AF-478C-81B2-2FF8A294EA8D
:END:
- 東京の気候データによる例
  #+begin_src R :eval no 
    #' 9,10月のデータでモデルを構築し，8,11月のデータを予測
    #' データの整理
    tw_data <- read_csv("data/tokyo_weather.csv")
    tw_train <- tw_data |> # モデル推定用データ
      filter(month %in% c(9,10)) # %in% は集合に含むかどうかを判定
    tw_test  <- tw_data |> # 予測用データ
      filter(month %in% c(8,11))
    #' モデルの構築
    tw_model <- temp ~ solar + press # モデルの定義 
    tw_lm <- lm(tw_model, data = tw_train) # モデルの推定
    tidy(tw_lm)   # 回帰係数の評価
    glance(tw_lm) # モデルの評価
    #' あてはめ値と予測値の計算
    tw_train_fitted <- augment(tw_lm, newdata = tw_train) # あてはめ値
    tw_test_fitted  <- augment(tw_lm, newdata = tw_test)  # 予測値
  #+end_src

#+reveal: split
- グラフ表示の例
  #+begin_src R :eval no
    #' 予測結果を図示
    bind_rows(tw_train_fitted, tw_test_fitted) |> # 2つのデータフレームを結合
      mutate(month = as_factor(month)) |> # 月を因子化して表示に利用
      ggplot(aes(x = .fitted, y = temp)) +
      geom_point(aes(colour = month, shape = month)) + # 月ごとに色と形を変える
      geom_abline(slope = 1, intercept = 0, # 予測が完全に正しい場合のガイド線
                  colour = "gray") +
      labs(x = "fitted", y = "observed")
  #+end_src
  #+begin_src R :eval no :exports none
    #' @notes
    #' 関数 lubridate::month() を用いると月を文字列のラベルとすることもできる
    bind_rows(tw_train_fitted, tw_test_fitted) |>
      mutate(month = month(month, label = TRUE)) |> # 文字にする場合
      ggplot(aes(x = .fitted, y = temp)) +
      geom_point(aes(colour = month)) + # 月ごとに色を変える
      geom_abline(slope = 1, intercept = 0, # 予測が完全に正しい場合のガイド線
                  colour = "gray") +
      labs(x = "fitted", y = "observed")
    #' この場合は順序付きの因子になるので，'shape' を利用すると警告が出る
  #+end_src

** R : 区間表示のための関数
- 関数 ~ggplot2::geom_errorbar()~ : 区間の表示
  #+begin_src R :eval no :tangle no
    geom_errorbar(
      mapping = NULL,
      data = NULL,
      stat = "identity",
      position = "identity",
      ...,
      na.rm = FALSE,
      orientation = NA,
      show.legend = NA,
      inherit.aes = TRUE
    )
    #' mapping: 区間を表すために xmin,xmax または ymin,ymax を与える
    #' data: データフレーム
    #' ...: その他の描画オプション
    #' orientation: 特別な場合に指定 (一般に向きは mapping で自動的決定)
    #' 詳細は '?ggplot2::geom_errorbar' を参照
  #+end_src
  - 関数 ~broom::augment()~ の場合は '.lower/.upper' を用いる
  - 関数 ~stats::predict()~ の場合は 'lwr/upr' を用いる
    
** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:ID:       BE0FBF85-8245-4AB5-9343-65F286DA1877
:END:
- 東京の気候データを用いて以下の実験を試みなさい
  - 8月のデータで回帰式を推定する
  - 上記のモデルで9月のデータを予測する
  #+begin_src R :eval no :tangle no
    #' 特定の月のデータを取り出すには，例えば以下のようにすればよい
    tw_data <- read_csv("data/tokyo_weather.csv")
    tw_train <- tw_data |> filter(month == 8) # 単一の数字と比較
    tw_test  <- tw_data |> filter(month %in% c(9,10)) # 集合と比較
  #+end_src
** COMMENT 解答例  
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
  #' @practice 回帰式を用いた予測
#+end_src
#+begin_src R :eval no :exports none
  #' 東京の気候データによる分析

  #' 信頼区間と予測区間の計算
  tw_data <- read_csv("data/tokyo_weather.csv")
  tw_train <- tw_data |> filter(month %in% 8) # 推定用データ
  tw_test  <- tw_data |> filter(month %in% 9) # 予測用データ
  tw_model <- temp ~ solar + press + cloud # モデルの定義 
  tw_lm <- lm(tw_model, data = tw_train) # モデルの推定

  #' 信頼区間
  tw_train_conf <- # あてはめ値と信頼区間を付加
    bind_cols(tw_train,
              predict(tw_lm, interval = "confidence"))
  tw_test_conf <- # 新規データへのあてはめ値と信頼区間を付加
    bind_cols(tw_test, 
              predict(tw_lm, newdata = tw_test, interval = "confidence"))

  #' 予測区間
  tw_train_pred <- # あてはめ値と予測区間を付加
    bind_cols(tw_train,
              predict(tw_lm, interval = "prediction"))
  tw_test_pred <- # 新規データへのあてはめ値と予測区間を付加
    bind_cols(tw_test, 
              predict(tw_lm, newdata = tw_test, interval = "prediction"))

  #' 8月のデータで推定したモデルで8月をあてはめた信頼区間
  tw_train_conf |>
    ggplot(aes(x = day, y = temp)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = fit), colour = "blue") +
    geom_errorbar(aes(ymin = lwr, ymax = upr), colour = "royalblue") +
    ylim(c(20,34)) + # 以降4つのグラフの値域を揃える
    labs(x = "August", y = "Temperature", title = "Confidence Interval")

  #' 8月のデータで推定したモデルで8月をあてはめた予測区間
  tw_train_pred |>
    ggplot(aes(x = day, y = temp)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = fit), colour = "blue") +
    geom_errorbar(aes(ymin = lwr, ymax = upr), colour = "steelblue") +
    ylim(c(20,34)) + 
    labs(x = "August", y = "Temperature", title = "Prediction Interval")

  #' 8月のモデルで9月をあてはめた信頼区間
  tw_test_conf |>
    ggplot(aes(x = day, y = temp)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = fit), colour = "blue") +
    geom_errorbar(aes(ymin = lwr, ymax = upr), colour = "royalblue") +
    ylim(c(20,34)) + 
    labs(x = "September", y = "Temperature", title = "Confidence Interval")

  #' 8月のモデルで9月をあてはめた予測区間
  tw_test_pred |>
    ggplot(aes(x = day, y = temp)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = fit), colour = "blue") +
    geom_errorbar(aes(ymin = lwr, ymax = upr), colour = "steelblue") +
    ylim(c(20,34)) + 
    labs(x = "September", y = "Temperature", title = "Prediction Interval")
#+end_src
#+begin_src R :eval no :exports none
  #' 人工データによる検討例
  #'   (以下はあくまで例なので自由に数値実験を設計して下さい)

  #' 試行の設定
  #' モデル: y = -1 + 2 * x1
  #' 人工データの生成
  set.seed(1515) # 乱数のシード値(適宜変更せよ)
  n <- 50 # データ数の設定
  x_obs <- tibble(x0 = 1,
                  x1 = runif(n), # 説明変数1
                  x2 = runif(n)) # 説明変数2
  beta <- c(-1, 2, 0) # (切片, x1の係数, x2の係数) 実質x2は使われていない
  sigma <-  1/2 # 誤差の標準偏差
  epsilon <- rnorm(nrow(x_obs), sd = sigma) # 誤差項
  toy_data <- x_obs |> # 目的変数の観測値を追加
    mutate(y = as.vector(as.matrix(x_obs) %*% beta) + epsilon)

  #' モデルの推定と評価
  toy_lm1 <- lm(y ~ x1, data = toy_data) # x1のみの正しいモデル
  summary(toy_lm1)
  toy_lm2 <- lm(y ~ x1 + x2, data = toy_data) # x1とx2の冗長なモデル
  summary(toy_lm2)
  toy_lm3 <- lm(y ~ x2, data = toy_data) # x2のみの誤ったモデル
  summary(toy_lm3)

  #' 新規データに対する予測
  x_new <- tibble(x0 = 1,
                  x1 = runif(n),
                  x2 = runif(n,-10,10)) 
  #' 新規データに対する目的変数の真値 (誤差なし)
  y_tilde <- as.vector(as.matrix(x_new) %*% beta)
  #' 各モデルでの予測
  y_hat1 <- predict(toy_lm1, newdata = x_new) # x_lm1による予測値
  y_hat2 <- predict(toy_lm2, newdata = x_new) # x_lm2による予測値
  y_hat3 <- predict(toy_lm3, newdata = x_new) # x_lm3による予測値

  #' 散布図による可視化
  tibble(obs = y_tilde,
         model1 = y_hat1, model2 = y_hat2, model3 = y_hat3) |>
    pivot_longer(!obs) |>
    ggplot(aes(x = value, y = obs)) +
    geom_point(aes(colour = name)) +
    geom_abline(slope = 1, intercept = 0, colour = "gray") +
    labs(x = "fitted value", y = "observed value") +
    theme(legend.title = element_blank())

  #' 相関係数による数値的な評価 (R-squared と等価)
  cor(y_tilde, y_hat1)^2 
  cor(y_tilde, y_hat2)^2
  cor(y_tilde, y_hat3)^2
#+end_src
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
#+end_src
     
** COMMENT 講義資料: 信頼区間と予測区間
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/06-interval.r][06-interval.r]] を確認してみよう
** COMMENT 講義資料: モデルの更新
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/06-model.r][06-model.r]] を確認してみよう


* 解析の事例
# 早稲田大学
** 信頼区間と予測区間
:PROPERTIES:
:ID:       1ABCFCA4-8818-4982-AF83-43D3B1067250
:END:
- 東京の気候データを用いて以下を試みる
  - 8月のデータで回帰式を推定する
    #+begin_quote
    気温 = F(気圧, 日射, 湿度)
    #+end_quote
  - 上記のモデルで9月のデータを予測する
#+begin_src R :exports none
  #' 東京の気候データによる分析

  #' 信頼区間と予測区間の計算
  tw_train <- tw_data |> filter(month(日付) %in% 8) # 推定用データ
  tw_test  <- tw_data |> filter(month(日付) %in% 9) # 予測用データ
  tw_model <- 気温 ~ 日射 + 気圧 + 雲量 # モデルの定義 
  tw_lm <- lm(tw_model, data = tw_train) # モデルの推定
#+end_src
- 推定されたモデル
  #+begin_src R :exports none
    #' 関数 gtsummary::tbl_regression() を利用して結果をまとめる
    tw_gt <- 
      tbl_regression(tw_lm, intercept = TRUE) |>
      modify_column_unhide(columns = statistic) |>
      add_significance_stars(
        hide_p = FALSE,
        pattern = "{p.value}{stars}"
      ) 
  #+end_src
  #+begin_src R :eval no :exports none
    tw_gt # Viewer ペインに表示
  #+end_src
  #+begin_src R :exports results :results output html :tangle no
    #' 表示(reveal用)
    tw_gt |> as_gt() |>
      tab_options(table.font.size = 20) |>
      as_raw_html()
  #+end_src
  #+begin_src R :exports results :results value scalar latex :tangle no
    #' 表示(latex用)
    tw_gt |> as_gt() |>
      tab_options(table.font.size = 12) |>
      as_latex() |> as.character()
  #+end_src

#+reveal: split
#+begin_src R :exports none
  #' 信頼区間
  tw_train_conf <- # あてはめ値と信頼区間を付加
    augment(tw_lm,
            newdata = tw_train,
            interval = "confidence")
  tw_test_conf <- # 新規データへのあてはめ値と信頼区間を付加
    augment(tw_lm,
            newdata = tw_test,
            interval = "confidence")

  #' 予測区間
  tw_train_pred <- # あてはめ値と予測区間を付加
    augment(tw_lm,
            newdata = tw_train,
            interval = "prediction")
  tw_test_pred <- # 新規データへのあてはめ値と予測区間を付加
    augment(tw_lm,
            newdata = tw_test,
            interval = "prediction")
#+end_src
     
#+begin_src R :file figs/05_aug_cint.png :exports results :results graphics
  #' 8月のデータで推定したモデルで8月をあてはめた信頼区間
  tw_train_conf |>
    ggplot(aes(x = 日付, y = 気温)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = .fitted), colour = "blue") +
    geom_errorbar(aes(ymin = .lower, ymax = .upper), colour = "royalblue") +
    ylim(c(20,34)) + # 4つのグラフで気温の範囲を揃える
    labs(title = "信頼区間")
#+end_src

#+caption: 8月のあてはめ値の信頼区間
#+name: fig:05_aug_cint
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_aug_cint.png]]

#+reveal: split
#+begin_src R :file figs/05_aug_pred.png :exports results :results graphics
  #' 8月のデータで推定したモデルで8月をあてはめた予測区間
  tw_train_pred |>
    ggplot(aes(x = 日付, y = 気温)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = .fitted), colour = "blue") +
    geom_errorbar(aes(ymin = .lower, ymax = .upper), colour = "steelblue") +
    ylim(c(20,34)) + # 4つのグラフで気温の範囲を揃える
    labs(title = "予測区間")
#+end_src

#+caption: 8月のあてはめ値の予測区間
#+name: fig:05_aug_pred
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_aug_pred.png]]

#+reveal: split
#+begin_src R :file figs/05_sep_cint.png :exports results :results graphics
  #' 8月のモデルで9月をあてはめた信頼区間
  tw_test_conf |>
    ggplot(aes(x = 日付, y = 気温)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = .fitted), colour = "blue") +
    geom_errorbar(aes(ymin = .lower, ymax = .upper), colour = "royalblue") +
    ylim(c(20,34)) + # 4つのグラフで気温の範囲を揃える
    labs(title = "信頼区間")
#+end_src

#+caption: 8月モデルによる9月の予測値の信頼区間
#+name: fig:05_sep_cint
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_sep_cint.png]]

#+reveal: split
#+begin_src R :file figs/05_sep_pint.png :exports results :results graphics
  #' 8月のモデルで9月をあてはめた予測区間
  tw_test_pred |>
    ggplot(aes(x = 日付, y = 気温)) +
    geom_point(colour = "red", shape = 16) +
    geom_point(aes(y = .fitted), colour = "blue") +
    geom_errorbar(aes(ymin = .lower, ymax = .upper), colour = "steelblue") +
    ylim(c(20,34)) + # 4つのグラフで気温の範囲を揃える
    labs(title = "予測区間")
#+end_src

#+caption: 8月モデルによる9月の予測値の予測区間
#+name: fig:05_sep_pint
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_sep_pint.png]]


* 発展的なモデル
** 非線形性を含むモデル
- 目的変数 \(y\)
- 説明変数 \(x_1,\dotsc,x_p\)
- 説明変数の追加で対応可能
  - 交互作用 (交差項) : \(x_ix_j\) のような説明変数の積
  - 非線形変換 : \(\log(x_k)\) のような関数による変換

** カテゴリカル変数を含むモデル
- 数値ではないデータ
  - [[color:green][悪性良性]]
  - [[color:green][血液型]]
- 適切な方法で数値に変換して対応:
  - 2値の場合は 1,0 (真，偽) を割り当てる
    - 悪性 : 1
    - 良性 : 0
  - 3値以上の場合は *ダミー変数* を利用する (カテゴリ数-1個)
    - A型 : (1,0,0)
    - B型 : (0,1,0)
    - O型 : (0,0,1)
    - AB型 : (0,0,0)


* 解析の事例
# 早稲田大学
** 非線形変換による線形化
:PROPERTIES:
:ID:       74AD1041-5716-450D-8520-16ADF64B934A
:END:
#+begin_leftcol
#+begin_src R :exports none
  #' 表の作成
  bb_data <-
    MASS::Animals |> rownames_to_column() |> as_tibble()
#+end_src
#+begin_src R :exports results :results output html :tangle no
  #' データの表示(reveal用)
  bb_data |> slice(1:14) |> gt() |> as_raw_html()
#+end_src
#+begin_src R :exports results :results value scalar latex :tangle no
  #' データの表示(latex用)
  bb_data |> gt() |> as_latex() |> as.character()
#+end_src
#+end_leftcol
#+begin_rightcol
- 様々な動物の体重と脳の重さの関係を調べる
  - 体重は5桁程度のばらつき
  - 脳の重さは4桁程度のばらつき
- 以下の変換を検討する  
  - 変換なし
  - 体重を対数変換
  - 体重および脳の重さを対数変換
#+end_rightcol
  
#+reveal: split
- 散布図 (変換なし)
  #+begin_src R :file figs/05_animals1.png :exports results :results graphics
    #' 散布図 (normal plot)
    MASS::Animals |>
      ggplot(aes(body, brain)) +
      # ggrepel::geom_text_repel(aes(label = rownames(MASS::Animals)), size = 4) +
      geom_text(aes(label = rownames(MASS::Animals)), size = 4, vjust = 1) +
      geom_point(colour = "royalblue") + 
      labs(title = "体重と脳の重さ (normal plot)",
           x = "体重 [kg]", y = "脳の重さ [g]") 
  #+end_src

#+caption: 散布図 (データの変換なし)
#+name: fig:05_animals1
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_animals1.png]]

#+reveal: split
- 散布図 (x軸を対数変換)
  #+begin_src R :file figs/05_animals2.png :exports results :results graphics
    #' 散布図 (normal plot)
    MASS::Animals |>
      ggplot(aes(body, brain)) +
      ggrepel::geom_text_repel(aes(label = rownames(MASS::Animals)), size = 4, vjust = 1) +
      # geom_text(aes(label = rownames(MASS::Animals)), size = 4, vjust = 1) +
      geom_point(colour = "royalblue") + 
      scale_x_log10() +
      labs(title = "体重と脳の重さ (log-normal plot)",
           x = "体重 [kg]", y = "脳の重さ [g]") 
  #+end_src

#+caption: 散布図 (体重を対数変換)
#+name: fig:05_animals2
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_animals2.png]]

#+reveal: split
- 散布図 (xy軸を対数変換)
  #+begin_src R :file figs/05_animals3.png :exports results :results graphics
    #' 散布図 (log-log plot)
    MASS::Animals |>
      ggplot(aes(body, brain)) +
      ggrepel::geom_text_repel(aes(label = rownames(MASS::Animals)), size = 4) +
      # geom_text(aes(label = rownames(MASS::Animals)), size = 4, vjust = 1) +
      geom_point(colour = "royalblue") + 
      scale_x_log10() + scale_y_log10() +
      labs(title = "体重と脳の重さ (log-log plot)",
           x = "体重 [kg]", y = "脳の重さ [g]") 
  #+end_src

#+caption: 散布図 (体重と脳の重さを対数変換)
#+name: fig:05_animals3
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_animals3.png]]

#+reveal: split
- 単回帰 (全データ)
  #+begin_src R :file figs/05_animals4.png :exports results :results graphics
    #' 回帰式の表示
    MASS::Animals |>
      ggplot(aes(body, brain)) +
      geom_smooth(method = lm, colour = "blue") + 
      ggrepel::geom_text_repel(aes(label = rownames(MASS::Animals)), size = 4) +
      geom_point(colour = "royalblue") + 
      scale_x_log10() + scale_y_log10() +
      labs(title = "体重と脳の重さ",
           x = "体重 [kg]", y = "脳の重さ [g]") 
  #+end_src

#+caption: 単回帰
#+name: fig:05_animals4
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_animals4.png]]

#+reveal: split
- 単回帰 (外れ値を除去)
  #+begin_src R :file figs/05_animals5.png :exports results :results graphics
    #' 回帰式の表示
    MASS::Animals |>
      ggplot(aes(body, brain)) +
      geom_smooth(data = slice(MASS::Animals,-c(6,16,26)), # 外れ値を除去
                  method = lm, colour = "blue") + 
      ggrepel::geom_text_repel(aes(label = rownames(MASS::Animals)), size = 4) +
      geom_point(colour = "royalblue") + 
      scale_x_log10() + scale_y_log10() +
      labs(title = "体重と脳の重さ",
           x = "体重 [kg]", y = "脳の重さ [g]") 
  #+end_src

#+caption: 外れ値を除いた単回帰
#+name: fig:05_animals5
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_animals5.png]]

** COMMENT 非線形な関係の分析
:PROPERTIES:
:ID:       5FAE7843-5071-4936-BE9B-822E534EE4BB
:END:
- 東京の気候データを用いて
  気温に影響する変数の関係を検討する
  - 日射量と気圧の線形回帰モデル \\
    (日射量と気圧が気温にどのように影響するか検討する)
  - これらの交互作用を加えた線形回帰モデル \\
    (日射量と気圧の相互の関係の影響を検討する)

#+reveal: split
- 日射量，気圧の線形回帰モデル
  #+begin_src R :exports results :tangle yes
    ## 日射量，気圧の線形回帰モデル
    tw_est <- lm(temp ~ solar + press, data=tw_subset)
    tw_sum <- summary(tw_est)
    tw_r2 <- tw_sum$r.squared
    tw_ar2 <- tw_sum$adj.r.squared
    tw_fstat <- tw_sum$fstat
    signif(tw_sum$coef,digits=3)
    cat("\n")
    print(
        paste("R2:",
              signif(tw_r2,digits=3),
              "; adj. R2:",
              signif(tw_ar2,digits=3),
              "; F-stat:",
              signif(tw_fstat[1],digits=3),
              "; p-val:",
              signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
              ))
  #+end_src
  - 係数の正負から
    - 日射が高くなるほど
    - 気圧が低くなるほど
    気温が高くなることが示唆される
    
#+reveal: split
- 交互作用を加えた線形回帰モデル
  #+begin_src R :exports results :tangle yes
    ## 湿度と雲量の交互作用を加えた線形回帰モデル
    tw_est <- lm(temp ~ solar * press, data = tw_subset)
    tw_sum <- summary(tw_est)
    tw_r2 <- tw_sum$r.squared
    tw_ar2 <- tw_sum$adj.r.squared
    tw_fstat <- tw_sum$fstat
    signif(tw_sum$coef,digits=3)
    cat("\n")
    print(
        paste("R2:",
              signif(tw_r2,digits=3),
              "; adj. R2:",
              signif(tw_ar2,digits=3),
              "; F-stat:",
              signif(tw_fstat[1],digits=3),
              "; p-val:",
              signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
              ))
  #+end_src
  - 2次式を整理すると
    - ある気圧より低い場合には日射量が高くなるほど
    - ある日射量より低い場合には気圧が高くなるほど
    気温が高くなることが示唆される
  - [[color:gray][係数の有意性は低いのでより多くのデータでの分析が必要]]

** 非線形な関係の分析
:PROPERTIES:
:ID:       5FAE7843-5071-4936-BE9B-822E534EE4BB
:END:
- 東京の気候データ(10月)を用いて，
  この時期気温に影響する変数の関係を検討する
  - 日射と気圧の線形回帰モデル \\
    (日射と気圧が気温にどのように影響するか検討する)
  - これらの交互作用を加えた線形回帰モデル \\
    (日射と気圧の相互の関係の影響を検討する)

#+reveal: split
- 関連データの散布図
  #+begin_src R :file figs/05_interaction.png :exports results :results graphics
    #' 関連データの散布図
    tw_subset <- tw_data |>
      filter(month(日付) == 10)
    tw_subset |>
      select(気温, 日射, 気圧) |>
      GGally::ggpairs()
  #+end_src

#+caption: 散布図 (気温・日射・気圧)
#+name: fig:05_interaction
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_interaction.png]]
    
** 交互作用の効果
:PROPERTIES:
:ID:       2CC1EB4C-139F-4CD5-9C6E-7647E3AAE53E
:END:
#+begin_leftcol
#+begin_src R :exports none
  #' 日射と気圧の線形回帰モデル
  tw_lm1 <- lm(気温 ~ 日射 + 気圧, data = tw_subset)
  #' 日射と気圧の交互作用を加えた線形回帰モデル
  tw_lm2 <- lm(気温 ~ 日射 * 気圧, data = tw_subset)
#+end_src
#+begin_src R :exports none
  #' 関数 gtsummary::tbl_regression() を利用して結果をまとめる
  my_gts <- function(x){
    tbl_regression(x) |>
      add_significance_stars(
        hide_se = TRUE,
        pattern = "{estimate}{stars} ({std.error})"
      ) |>
      modify_header(estimate = "**Beta (SE)**") |>
      modify_footnote(estimate = "SE = Standard Error", abbreviation = TRUE) |>
      add_glance_table(include = c(r.squared,
                                   adj.r.squared,
                                   statistic,
                                   p.value)) }
  tw_gt <- 
    tbl_merge(
      tbls = list(
        my_gts(tw_lm1),
        my_gts(tw_lm2)),
      tab_spanner = c("交互作用なし","交互作用あり")) |>
    modify_table_body( ~ .x |>
                         arrange(factor(variable,
                                        levels = c("日射",
                                                   "気圧",
                                                   "日射:気圧"))))
#+end_src
#+begin_src R :eval no :exports none
  tw_gt # Viewer ペインに表示
#+end_src
#+begin_src R :exports results :results output html :tangle no
  #' 表示(reveal用)
  tw_gt |> as_gt() |>
    tab_options(table.font.size = 20) |>
    as_raw_html()
#+end_src
#+begin_src R :exports results :results value scalar latex :tangle no
  #' 表示(latex用)
  tw_gt |> as_gt() |>
    tab_options(table.font.size = 12) |>
    as_latex() |> as.character()
#+end_src
#+end_leftcol
#+begin_rightcol
- 気温への寄与
  - 線形モデル
    - 日射の係数は正
    - 気圧の係数は負
  - 交互作用を加えたモデル
    - 日射の係数は気圧がある値より高い場合に負
    - 気圧の係数は日射がある値より高い場合に負
    - 係数の有意性は低いのでより多くのデータでの分析が必要
#+end_rightcol

** COMMENT カテゴリカル変数の利用
:PROPERTIES:
:ID:       F16D48A8-4BCA-445C-A788-C18C6FE7B568
:END:
- 東京の気候データを用いて
  気温を回帰するモデルを検討する
  - 降水の有無を表すカテゴリカル変数を用いたモデル \\
    (雨が降ると気温が変化することを検証する)
  - 月をカテゴリカル変数として加えたモデル \\
    (月毎の気温の差を考慮する)

#+reveal: split
- 降水の有無を表すカテゴリカル変数を用いたモデル
  #+begin_src R :exports results :tangle yes
    ## 雨と気温の関係を分析
    tw_data_rain <- tw_data |>
      mutate(雨の有無 = 降雨 > 0)
    tw_sum <- summary(lm(気温 ~ 雨の有無, data=tw_data_rain))
    tw_r2 <- tw_sum$r.squared
    tw_ar2 <- tw_sum$adj.r.squared
    tw_fstat <- tw_sum$fstat
    signif(tw_sum$coef,digits=3)
    cat("\n")
    print(
        paste("R2:",
              signif(tw_r2,digits=3),
              "; adj. R2:",
              signif(tw_ar2,digits=3),
              "; F-stat:",
              signif(tw_fstat[1],digits=3),
              "; p-val:",
              signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
              ))
    ## 通年では雨と気温の関係は積極的に支持されない
  #+end_src
  - 降水の有無は気温の予測に無関係ではないと考えられる
  - 決定係数から回帰式としての説明力は極めて低い
    
#+reveal: split
- 月をカテゴリカル変数として加えたモデル
  #+begin_src R :exports results :tangle yes
    ## 月毎の気温の差を考慮して月を表す変数をダミー化する
    tw_data <- tw_data |>
      mutate(month = factor(month))
    tw_sum <- summary(lm(temp ~ rain + month, data=tw_data))
    tw_r2 <- tw_sum$r.squared
    tw_ar2 <- tw_sum$adj.r.squared
    tw_fstat <- tw_sum$fstat
    signif(tw_sum$coef,digits=3)
    cat("\n")
    print(
        paste("R2:",
              signif(tw_r2,digits=3),
              "; adj. R2:",
              signif(tw_ar2,digits=3),
              "; F-stat:",
              signif(tw_fstat[1],digits=3),
              "; p-val:",
              signif(1-pf(tw_fstat[1],tw_fstat[2],tw_fstat[3]),digits=3)
              ))
  #+end_src
  - 月毎に比較すると雨の日の方が気温が低いことが支持される

** カテゴリカル変数の利用
:PROPERTIES:
:ID:       F16D48A8-4BCA-445C-A788-C18C6FE7B568
:END:
- 東京の気候データを用いて
  気温を回帰するモデルを検討する
  - 降水の有無を表すカテゴリカル変数を用いたモデル \\
    (雨が降ると気温が変化することを検証する)
  - 月をカテゴリカル変数として加えたモデル \\
    (月毎の気温の差を考慮する)

#+reveal: split
- 関連データの散布図
  #+begin_src R :file figs/05_categorical.png :exports results :results graphics
    #' 関連データの散布図
    tw_data_cat <- tw_data |>
      mutate(雨の有無 = 降雨 > 0,
             月 = as_factor(month(日付)))
    tw_data_cat |>
      select(気温, 雨の有無, 月) |>
      GGally::ggpairs(aes(colour = 雨の有無))
  #+end_src

#+caption: 散布図 (気温・雨の有無・月)
#+name: fig:05_categorical
#+attr_html: height 100%
#+attr_latex: :width 0.6\linewidth
[[file:figs/05_categorical.png]]
    
** カテゴリカル変数の効果
:PROPERTIES:
:ID:       0BFAD130-FA6A-4F50-947C-AFDD7297EBB5
:END:
#+begin_leftcol
#+begin_src R :exports none
  #' 雨と気温の関係を分析
  tw_lm3 <- lm(気温 ~ 雨の有無, data = tw_data_cat)
  #' 月毎の気温の差を考慮して月を表す変数をダミー化する
  tw_lm4 <- lm(気温 ~ 雨の有無 + 月, data = tw_data_cat)
#+end_src
#+begin_src R :exports none
  #' 関数 gtsummary::tbl_regression() を利用して結果をまとめる
  my_gts <- function(x){
    tbl_regression(x, intercept = TRUE) |>                      # 標準の表
      add_significance_stars(
        hide_se = TRUE,
        pattern = "{estimate}{stars} ({std.error})"
      ) |>
      modify_header(estimate = "**Beta (SE)**") |>
      modify_footnote(estimate = "SE = Standard Error", abbreviation = TRUE) |>
      add_glance_table(include = c(r.squared,
                                   adj.r.squared,
                                   statistic,
                                   p.value)) }
  tw_gt <- 
    tbl_merge(
      tbls = list(
        my_gts(tw_lm3),
        my_gts(tw_lm4)),
      tab_spanner = c("雨の有無","雨の有無+月")) |>
    modify_table_body( ~ .x |>
                         arrange(factor(variable,
                                        levels = c("雨の有無",
                                                   "月",
                                                   "(Intercept)"))))
#+end_src
#+begin_src R :eval no :exports none
  tw_gt # Viewer ペインに表示
#+end_src
#+begin_src R :exports results :results output html :tangle no
  #' 表示(reveal用)
  tw_gt |> as_gt() |>
    tab_options(table.font.size = 20) |>
    as_raw_html()
#+end_src
#+begin_src R :exports results :results value scalar latex :tangle no
  #' 表示(latex用)
  tw_gt |> as_gt() |>
    tab_options(table.font.size = 12) |>
    as_latex() |> as.character()
#+end_src
#+end_leftcol
#+begin_rightcol
- 気温への寄与
  - 雨の 有無モデル
    - 経験的に雨の有無は気温と無関係ではないと考えられる
    - 決定係数から回帰式としての説明力は極めて低い
    - 通年では雨と気温の関係は積極的に支持されない
  - 雨の有無+月モデル
    - 月毎の気温の偏りが月の係数として推定される
    - 雨の日の方が気温が低いことが支持される
#+end_rightcol


* COMMENT 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** R : 線形でないモデル式の書き方
:PROPERTIES:
:ID:       69676012-A43A-4666-8B50-6FEC3D4F4AE9
:END:
- 交互作用を記述するためには特殊な記法がある
- 非線形変換はそのまま関数を記述すればよい
- 1つの変数の多項式は関数 ~I()~ を用いる
  #+begin_src R :eval no :tangle no
    #' 目的変数 Y, 説明変数 X1,X2,X3
    #' 交互作用を含む式 (formula) の書き方
    Y ~ X1 + X1:X2       # X1 + X1*X2
    Y ~ X1 * X2          # X1 + X2 + X1*X2
    Y ~ (X1 + X2 + X3)^2 # X1 + X2 + X3 + X1*X2 + X2*X3 + X3*X1
    #' 非線形変換を含む式 (formula) の書き方
    Y ~ f(X1)            # f(X1) (fは任意の関数)
    Y ~ X1 + I(X2^2)     # X1 + X2^2
  #+end_src
** R : カテゴリカル変数の取り扱い
:PROPERTIES:
:ID:       05C02EB7-D06D-4001-BB12-CFAAAC9CDD32
:END:
- 何も宣言しなくても通常は適切に対応してくれる
- 陽に扱う場合は関数 ~factor()~ を利用する
  #+begin_src R :eval no
    #' factor属性の与え方
    X <- c("A", "S", "A", "B", "D")
    Y <- c(85, 100, 80, 70, 30)
    toy_data1 <- tibble(X, Y)
    toy_data2 <- toy_data1 |> # 因子化
      mutate(X2 = factor(X))  # 関数as_factor()を用いてもよい
    glimpse(toy_data2) # 作成したデータフレームの素性を見る(pillar::glimpse())
    toy_data3 <- toy_data2 |> # 順序付き(levels)の因子化
      mutate(X3 = factor(X, levels=c("S","A","B","C","D")))
    glimpse(toy_data3) # toy_data2とはfactorの順序が異なる
    toy_data4 <- toy_data2 |>
      mutate(Y2 = factor(Y > 60)) # 条件による因子化
    glimpse(toy_data4) # 条件の真偽で2値に類別される
  #+end_src

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:ID:       44353AD4-5224-4C24-86AF-0068F859E84D
:END:
- 東京の気候データ(9-11月)を用いて
  気温を回帰する以下のモデルを検討しなさい
  - 日射量，気圧，湿度の線形回帰モデル
  - 湿度の対数を考えた線形回帰モデル
  - 最初のモデルにそれぞれの交互作用を加えたモデル
- 東京の気候データ(1年分)を用いて
  気温を回帰する以下のモデルを検討しなさい
  - 降水の有無を表すカテゴリカル変数を用いたモデル \\
    (雨が降ると気温が変化することを検証する)
  - 上記に月をカテゴリカル変数として加えたモデル \\
    (月毎の気温の差を考慮する)
** COMMENT 解答例
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
  #' @practice 交互作用と非線形を含むモデルとカテゴリカル変数の扱い
#+end_src
#+begin_src R :eval no :exports none
  #' 9月から11月のデータによる分析 (交互作用と非線形性)

  #' データの整形
  tw_subset <- tw_data |> filter(month %in% 9:11)

  #' 日射量，気圧，湿度の線形回帰モデル
  summary(lm(temp ~ solar + press + humid, data = tw_subset))
  #' 湿度の対数を考えた線形回帰モデル
  summary(lm(temp ~ solar + press + log(humid), data = tw_subset))
  #' 最初のモデルにそれぞれの交互作用を加えたモデル (書き方はいろいろある)
  summary(lm(temp ~ (solar + press + humid)^2, data = tw_subset))
  #' 更に3つの変数の積を加えたモデル
  summary(lm(temp ~ solar * press * humid, data = tw_subset))

  #' 用いた変数の散布図
  tw_subset |>
    select(temp, solar, press, humid) |>
    GGally::ggpairs(columnLabels = c("気温","日射量","気圧","湿度"))

  #' 最後のモデルの視覚的な評価 (診断プロット)
  autoplot(lm(temp ~ solar * press * humid, data = tw_subset))
#+end_src
#+begin_src R :eval no :exports none
  #' 雨と気温の関係の分析 (カテゴリカル変数)
  #' 雨の有無および月(整数値)をダミー化(因子化)する
  tw_data_fact <- tw_data |>
    mutate(rain = factor(rain > 0),
           month = factor(month)) 
  summary(lm(temp ~ rain, data = tw_data_fact))
  #' 通年では雨と気温の関係は積極的に支持されない

  summary(lm(temp ~ rain + month, data = tw_data_fact))
  #' 月毎の気温の差を考慮した回帰式が推定される
  #' 月毎に比較した結果，雨の日の方が気温が低いことが支持される
#+end_src
#+begin_src R :exports none
  #' ---------------------------------------------------------------------------
#+end_src

** COMMENT 講義資料: 交互作用
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/06-cross.r][06-cross.r]] を確認してみよう

** COMMENT 講義資料: ダミー変数
   :PROPERTIES:
   :reveal_background: #EEEEFF
   :END:
   - [[./code/06-dummy.r][06-dummy.r]] を確認してみよう


* COMMENT 補足
# 東京大学
** R : モデルの探索
:PROPERTIES:
:ID:       3A4FFB4A-0F71-4B7A-B1FA-6CEB232B8976
:END:
- 変数が増えるとモデルの比較が困難
- 関数 ~stats::step()~ で自動化することができる
  #+begin_src R :eval no
    #' モデルの探索
    adv_data <- read_csv('https://www.statlearning.com/s/Advertising.csv')
    summary(lm(sales ~ radio, data = adv_data))
    summary(lm(sales ~ TV + radio, data = adv_data))
    summary(lm(sales ~ TV + radio + newspaper, data = adv_data))
    summary(adv_init <- lm(sales ~ TV * radio * newspaper, data = adv_data))
    adv_opt <- step(adv_init) # 最大のモデルから削減増加による探索
    summary(adv_opt) # 探索された(準)最適なモデルの確認
  #+end_src
  - 全探索ではないので最適とは限らないことに注意は必要

** COMMENT R : package::broom
:PROPERTIES:
:ID:       BF6291AA-8F48-4CA2-909E-249BF70CB440
:END:
- 関数 base::summary() の tidyverse 版
- 関数 stats::lm() などの結果を tibble 形式で表示
  - 関数 broom::tidy : 推定結果のまとめ
  - 関数 broom::glance : 評価指標(統計量)のまとめ
  - 関数 broom::augment : 入出力データのまとめ    
  #+begin_src R :eval no
    #' 推定結果の tibble 形式での表示
    broom::tidy(adv_opt) # coef(summary(adv_opt)) と同じ内容
    broom::glance(adv_opt) # 決定係数やF値などを整理
    broom::augment(adv_opt) # あてはめ値・残差などを整理
  #+end_src

** R : package::car 
- 回帰モデルの評価
  - 与えられたデータの再現
  - 新しいデータの予測
- モデルの再構築のための視覚化
  - *residual plots*: 
    説明変数・予測値と残差の関係
  - *marginal-model plots*:
    説明変数と目的変数・モデルの関係
  - *added-variable plots*:
    説明変数・目的変数をその他の変数で回帰したときの残差の関係
  - *component+residual plots*:
    説明変数とそれ以外の説明変数による残差の関係
  # - QQ plots
  # - spread-level plot 
  # - influence plots
  などが用意されている

** 例題
- これまでに用いたデータでモデルを更新して評価してみよう
  - 変数間の線形回帰の関係について仮説を立てる 
  - モデルのあてはめを行い評価する
    - 説明力があるのか? (\(F\)統計量，\(t\)統計量，決定係数)
    - 残差に偏りはないか? (様々な診断プロット)
    - 変数間の線形関係は妥当か? (様々な診断プロット)
  - 検討結果を踏まえてモデルを更新する (評価の繰り返し)

** COMMENT 講義資料: car package の使用例
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/06-car.r][06-car.r]] を確認してみよう


* 次回の予定
- *第1回: 主成分分析の考え方*
- 第2回: 分析の評価と視覚化
  

* Footnotes
* COMMENT ローカル変数
# Local Variables:
# org-latex-listings: minted
# End:
