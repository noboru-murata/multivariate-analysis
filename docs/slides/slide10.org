#+TITLE: クラスタ分析
#+SUBTITLE: 基本的な考え方と階層的方法
#+AUTHOR: 村田 昇
#+EMAIL: noboru.murata@eb.waseda.ac.jp
#+DATE: 
# Time-stamp: <2022-12-16 12:32:31 mura>
#+STARTUP: hidestars content indent
:REVEAL:
#+INCLUDE: "./reveal.js/org/mycourse.org"
#+PROPERTY: header-args:R :cache yes :session *R*
#+PROPERTY: header-args:R+ :exports both :results output
#+PROPERTY: header-args:R+ :width 800 :height 800 :res 100
#+PROPERTY: header-args:R+ :tangle no
#+PROPERTY: header-args:latex :exports results :results raw
# C-c C-x C-v でinlineを切り替え
# <m C-i でlatex block (math env用)
# C-c '
:END:

* COMMENT メモ
- 第3講以降は同じファイルを使うように整理する
- 同じタイトルの項目にはメモを入れる
- 演習の内容が異なるので演習は2つ作る形で対応

* 講義の内容
# 早稲田大学
- *第1日 : 基本的な考え方と階層的方法*
- 第2日 : 非階層的方法と分析の評価

#+begin_src R :eval no :exports none :tangle yes
  ### 第10講 資料
#+end_src
#+begin_src R :exports none
  setwd("~/Desktop/lectures/mva/course")
#+end_src

* COMMENT 講義概要
# 東京大学
- *第1日 : 基本的な考え方と階層的方法*
- 第2日 : 非階層的方法と分析の評価

#+begin_src R :eval no :exports none :tangle yes
  ### 
  ### 第10講 サンプルコード
  ###
#+end_src
#+begin_src R :exports none
  setwd("~/Desktop/lectures/u-tokyo/autumn/course")
#+end_src

* COMMENT 演習 (早稲田大学雛型)
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- について以下を示しなさい．
  - である．
    #+begin_quote
    #+begin_src latex
    #+end_src
    #+end_quote

** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- いずれも定義にもとづいて計算すればよい
  #+begin_quote
  #+begin_src latex
  #+end_src
  #+end_quote

* COMMENT 演習 (東京大学雛型)
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** R : 概要
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- ほげほげな方法:
  #+begin_src R :eval no
  #+end_src
  
** データセット
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下のデータセットを使用します
  - ~xxx~
    #+begin_quote
    データの素性
    #+end_quote
    [[https://www.foo.com/]]

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 構成しなさい
  - データ
    #+begin_quote
    formulaなどを与える
    #+end_quote

#+begin_src R :eval no :exports none :tangle yes
  ###
  ### 練習問題 
  ###

  ## 
  ## 分析
  ##
#+end_src

** COMMENT 講義資料: 概略
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/bar.r][bar.r]] を確認してみよう

  
* クラスタ分析の考え方
** クラスタ分析
- クラスタ分析 (*cluster analysis*) の目的
  #+begin_quote
  個体の間に隠れている
  *集まり=クラスタ*
  を個体間の"距離"にもとづいて発見する方法
  #+end_quote
- 個体間の類似度・距離(非類似度)を定義
  - 同じクラスタに属する個体どうしは似通った性質
  - 異なるクラスタに属する個体どうしは異なる性質
- さらなるデータ解析やデータの可視化に利用
- 教師なし学習の代表的な手法の一つ

** クラスタ分析の考え方
- 階層的方法
  - データ点およびクラスタの間に *距離* を定義
  - 距離に基づいてグループ化
    - 近いものから順にクラスタを *凝集*
    - 近いものが同じクラスタに残るように *分割*
- 非階層的方法
  - クラスタの数を事前に指定
  - クラスタの *集まりの良さ* を評価する損失関数を定義
  - 損失関数を最小化するようにクラスタを形成

** 事例
- 総務省統計局より取得した都道府県別の社会生活統計指標の一部
  - 総務省 [[https://www.e-stat.go.jp/SG1/estat/List.do?bid=000001083999&cycode=0]]
  - データ https://noboru-murata.github.io/multivariate-analysis/data/japan_social.csv
    #+begin_example
    Pref : 都道府県名
    Forest : 森林面積割合 (%) 2014年
    Agri : 就業者１人当たり農業産出額(販売農家）(万円) 2014年
    Ratio : 全国総人口に占める人口割合 (%) 2015年
    Land : 土地生産性（耕地面積１ヘクタール当たり）(万円) 2014年
    Goods : 商業年間商品販売額［卸売業＋小売業］（事業所当たり）(百万円) 2013年
    #+end_example

#+reveal: split
- データの内容
  #+begin_src R :exports results :results value
    ## データの読み込み
    js_data <- read.csv(file="data/japan_social.csv", row.names=1)
    foo <- head(js_data, 10) # print(js_data)
    rbind(c("Name",names(foo)),data.frame(rownames(foo),foo))
  #+end_src

#+reveal: split
#+begin_src R :file figs/10_pairs.png :exports results :results graphics
  ## データの視覚化
  plot(js_data, col="blue") # いくつかの変数は相関強い
#+end_src

#+CAPTION: データの散布図
#+NAME: fig:10_pairs
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_pairs.png]]

#+reveal: split
#+begin_src R :file figs/10_pcaplot.png :exports results :results graphics
  ## 主成分分析
  library(cluster)
  clusplot(x=js_data,
	   clus=pam(daisy(js_data,stand=TRUE),k=7)$clustering,
	   diss=FALSE,
	   stand=TRUE, lines=0, labels=3, 
	   main=NULL, sub=NULL, cex=1,
	   col.p="blue", col.clus="white", shade=FALSE)
#+end_src
   
#+CAPTION: 主成分得点の散布図
#+NAME: fig:10_pcaplot
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_pcaplot.png]]

#+reveal: split
#+begin_src R :file figs/10_clusplot.png :exports results :results graphics
  ## クラスタ分析
  clusplot(x=js_data,
	   clus=pam(daisy(js_data,stand=TRUE),k=7)$clustering,
	   diss=FALSE,
	   stand=TRUE, lines=0, labels=3, 
	   main=NULL, sub=NULL, cex=1,
	   col.p="blue", col.clus="orange", shade=TRUE)
#+end_src
   
#+CAPTION: 散布図上のクラスタ構造 (クラスタ分析の概念図)
#+NAME: fig:10_clusplot
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_clusplot.png]]


* 階層的方法
** 凝集的クラスタリング
1. データ・クラスタ間の距離を定義する
   - データ点とデータ点の距離
   - クラスタとクラスタの距離
2. データ点およびクラスタ間の距離を求める
3. 最も近い2つを統合し新たなクラスタを形成する
   - データ点とデータ点
   - データ点とクラスタ
   - クラスタとクラスタ
4. クラスタ数が1つになるまで2-3の手続きを繰り返す

** 事例
- [[color:green][社会生活統計指標の一部(関東)]]
  #+begin_src R :file figs/10_hclst0.png :exports results :results graphics
    library(cluster)
    js_data <- read.csv(file="data/japan_social.csv", row.names=1)
    pref <- read.csv(file="data/prefecture.csv", row.names=1)
    rownames(js_data) <- pref$jp
    myPlot <- function(k) {
	if(Sys.info()["sysname"]=="Darwin"){par(family="HiraginoSans-W4")}
	tmpa <- js_data[8:14,]
	tmpb <- list(c(1,2,3,4,1,6,7),
		     c(1,2,3,1,1,6,7),
		     c(1,2,2,1,1,6,7),
		     c(1,2,2,1,1,6,1),
		     c(1,1,1,1,1,6,1),
		     c(1,1,1,1,1,1,1))
	clusplot(x=tmpa,
		 clus=c(1,2,3,4,5,6,7),
		 diss=FALSE,
		 stand=TRUE, lines=0, labels=3, 
		 main=NULL, sub=NULL, cex=1,
		 xlim=c(-2.5,1.5), ylim=c(-1.5,2.2),
		 col.p="blue", col.clus="white", shade=FALSE)
	if(k>0) {
	    for(i in 1:k) {
		clusplot(x=tmpa,
			 clus=tmpb[[i]],
			 diss=FALSE,
			 stand=TRUE, add=TRUE, span=FALSE,
			 lines=0, lwd=2, col.p="blue", col.clus="orange")
	    }
	}
    }
    myPlot(0)
  #+end_src

#+CAPTION: 凝集的クラスタリング
#+NAME: fig:10_hclst0
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst0.png]]

#+reveal: split
#+begin_src R :file figs/10_hclst1.png :exports results :results graphics
  myPlot(1)
#+end_src

#+CAPTION: クラスタリングの手続き (その1)
#+NAME: fig:10_hclst1
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst1.png]]

#+reveal: split
#+begin_src R :file figs/10_hclst2.png :exports results :results graphics
  myPlot(2)
#+end_src

#+CAPTION: クラスタリングの手続き (その2)
#+NAME: fig:10_hclst2
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst2.png]]

#+reveal: split
#+begin_src R :file figs/10_hclst3.png :exports results :results graphics
  myPlot(3)
#+end_src

#+CAPTION: クラスタリングの手続き (その3)
#+NAME: fig:10_hclst3
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst3.png]]

#+reveal: split
#+begin_src R :file figs/10_hclst4.png :exports results :results graphics
  myPlot(4)
#+end_src

#+CAPTION: クラスタリングの手続き (その4)
#+NAME: fig:10_hclst4
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst4.png]]

   
#+reveal: split
#+begin_src R :file figs/10_hclst5.png :exports results :results graphics
  myPlot(5)
#+end_src
   
#+CAPTION: クラスタリングの手続き (その5)
#+NAME: fig:10_hclst5
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst5.png]]

   
#+reveal: split
#+begin_src R :file figs/10_hclst6.png :exports results :results graphics
  myPlot(6)
#+end_src
   
#+CAPTION: クラスタリングの手続き (その6)
#+NAME: fig:10_hclst6
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_hclst6.png]]

#+reveal: split
#+begin_src R :file figs/10_dendro.png :exports results :results graphics
  if(Sys.info()["sysname"]=="Darwin"){par(family="HiraginoSans-W4")}
  plot(agnes(scale(js_data[8:14,])), which.plots=2,
       main="",sub="",xlab="")
#+end_src
   
#+CAPTION: デンドログラムによるクラスタ構造の表示
#+NAME: fig:10_dendro
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_dendro.png]]

   
* データ間の距離
** データ間の距離
- データ : 変数の値を成分としてもつベクトル
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \boldsymbol{x}=(x_{1},\dotsc,x_{d})^{\mathsf{T}},
      \boldsymbol{y}=(y_{1},\dotsc,y_{d})^{\mathsf{T}}\in\mathbb{R}^{d}
    \end{equation}
  #+end_src
  #+end_quote
- 距離 : \(d(\boldsymbol{x},\boldsymbol{y})\)
- 代表的なデータ間の距離
  - Euclid 距離 (ユークリッド ; Euclidean distance)
  - Manhattan 距離 (マンハッタン ; Manhattan distance)
  - Minkowski 距離 (ミンコフスキー ; Minkowski distance)

** Euclide 距離
- 最も一般的な距離
- 各成分の差の2乗和の平方根 (2ノルム)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      d(\boldsymbol{x},\boldsymbol{y})
      =\sqrt{(x_{1}-y_{1})^{2}+\dotsb+(x_{d}-y_{d})^{2}}
    \end{equation}
  #+end_src
  #+end_quote

** Manhattan 距離
- 後述する Minkowski 距離の \(p=1\) の場合
- 格子状に引かれた路に沿って移動するときの距離
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      d(\boldsymbol{x},\boldsymbol{y})
      =|x_{1}-y_{1}|+\dotsb+|x_{d}-y_{d}|
    \end{equation}
  #+end_src
  #+end_quote

** Minkowski 距離
- Euclid 距離を \(p\) 乗に一般化した距離
- 各成分の差の \(p\) 乗和の \(p\) 乗根(\(p\)-ノルム)
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      d(\boldsymbol{x},\boldsymbol{y})
      =\bigl\{|x_{1}-y_{1}|^{p}+\dotsb+|x_{d}-y_{d}|^{p}\bigr\}^{1/p}
    \end{equation}
  #+end_src
  #+end_quote

** その他の距離
- 類似度や乖離度などデータ間に自然に定義されるものを用いることは可能
  - 語句の共起 (同一文書に現れる頻度・確率)
  - 会社間の取引量 (売上高などで正規化が必要)
- 擬似的な距離でもアルゴリズムは動く


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下の問に答えなさい
  - 距離の定義を述べなさい
  - Minkowski 距離において
    \(p\to\infty\)
    とするとどのような距離となるか答えなさい
    #+begin_quote
    #+begin_src latex
      \begin{equation}
	d(\boldsymbol{x},\boldsymbol{y})
	=\bigl\{|x_{1}-y_{1}|^{p}+\dotsb+|x_{d}-y_{d}|^{p}\bigr\}^{1/p}
      \end{equation}
    #+end_src
    #+end_quote

** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 2変数の実数値関数で以下の3つの条件を満たす
  #+begin_quote
  - 非退化性
    #+begin_src latex
      \begin{equation}
	x=y \Leftrightarrow d(x,y)=0
      \end{equation}
    #+end_src
  - 対称性
    #+begin_src latex
      \begin{equation}
	d(x,y)=d(y,x)
      \end{equation}
    #+end_src
  - 劣加法性 (三角不等式の成立)
    #+begin_src latex
      \begin{equation}
	d(x,y)+d(y,z)\ge d(x,z)
      \end{equation}
    #+end_src
  #+end_quote

#+reveal: split
- 非負性 \(d(x,y)\ge 0\) は3つの条件から自然に導かれる
  #+begin_quote
  #+begin_src latex
    \begin{align}
      &d(x,y)+d(y,x)\ge d(x,x)&&\text{(劣加法性)}\\
      &d(x,y)+d(x,y)\ge d(x,x)&&\text{(対称性)}\\
      &2d(x,y)\ge 0&&\text{(非退化性)}\\
      &d(x,y)\ge 0
    \end{align}
  #+end_src
  #+end_quote

#+reveal: split
- 最大の要素に着目して計算すればよい
  #+begin_quote
  #+begin_src latex
    \begin{align}
      \lim_{p\to\infty} d(\boldsymbol{x},\boldsymbol{y})
      &=
	\lim_{p\to\infty} 
	\bigl\{|x_{1}-y_{1}|^{p}+\dotsb+|x_{d}-y_{d}|^{p}\bigr\}^{1/p}\\
      &=
	\lim_{p\to\infty} \max_{k}|x_{k}-y_{k}|
	\left\{
	\left(\frac{|x_{1}-y_{1}|}{\max_{k}|x_{k}-y_{k}|}
	\right)^{p}
	\right.\\
      &\qquad
	+\dotsb
	\left.
	\left(\frac{|x_{d}-y_{d}|}{\max_{k}|x_{k}-y_{k}|}
	\right)^{p}
	\right\}^{1/p}\\
      &=
	\max_{k}|x_{k}-y_{k}|
	\lim_{p\to\infty} 
	\text{(1以上の有限値)}^{1/p}\\
      &=
	\max_{k}|x_{k}-y_{k}|
    \end{align}
  #+end_src
  #+end_quote
  - Chebyshev 距離(最大距離，チェス盤距離)という
    # Čebyšëv

#+reveal: split
- \(p\to-\infty\) の場合は以下となることを確認せよ
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      \lim_{p\to-\infty} d(\boldsymbol{x},\boldsymbol{y})
      =\min_{k}|x_{k}-y_{k}|
    \end{equation}
  #+end_src
  #+end_quote
  

* COMMENT 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** R : 関数 ~dist()~ 
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- データフレームを用いた基本的な計算方法
  #+begin_src R :eval no
    ### 距離の計算，返値は dist class (特殊なベクトル)
    dst <- dist(x, method = "euclidean", diag = FALSE, upper = FALSE)
    ## x: データフレーム
    ## method: 距離 (標準はユークリッド距離，他は"manhattan","minkowski"など)
    ## diag: 対角成分を持たせるか 
    ## upper: 上三角成分を持たせるか (標準は下三角成分のみ)

    ### 距離行列全体の表示
    dst # または print(dst)

    ### 特定の成分の取得
    as.matrix(dst)[i，j]
    ## i,j: 行・列の指定 (数値ベクトル，データフレームの行名)
  #+end_src

** R : 関数 ~cluster::daisy()~ 
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- ~cluster~: クラスタ分析用のパッケージ
- 関数 ~dist()~ とほぼ同様
  #+begin_src R :eval no
    ### パッケージの読み込み (標準で含まれているのでinstallは不要)
    library(cluster) # require(cluster)
    ### 距離の計算，返値は dissimilarity class (distとほぼ互換)
    dsy <- daisy(x, metric = "euclidean", stand = FALSE)
    ## x: データフレーム
    ## metric: 距離 (標準はユークリッド距離，他は"manhattan"など)
    ## stand: 正規化(平均と絶対偏差の平均による)の有無

    ### 距離行列全体の表示
    dsy # または print(dsy)
    ### 特定の成分の取得
    as.matrix(dsy)[i，j]
    ## i,j: 行・列の指定 (数値ベクトル，データフレームの行名)
  #+end_src

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 都道府県別の社会生活統計指標を用いて以下を確認しなさい
  #+begin_src R :eval no
    ### データの読み込み 
    js_data <- read.csv(file="data/japan_social.csv", row.names=1)
  #+end_src
  - 正規化せずにユークリッド距離とマンハッタン距離の計算を行いなさい
  - 正規化して上記と同様の計算を行いなさい 
  - 関東の都県同士の距離を表示しなさい (daisyによる正規化を用いなさい)
  - 大阪と四国の間の距離を表示しなさい
  - ユークリッド距離とマンハッタン距離の散布図を描き比較しなさい

#+begin_src R :eval no :exports none :tangle yes
  ### 
  ### 練習問題 距離の計算
  ### 

  ### パッケージの読み込み 
  library(cluster) # require(cluster)

  ## データの読み込み
  js_data <- read.csv(file="data/japan_social.csv", row.names=1)

  ## ユークリッド距離とマンハッタン距離の計算
  dst.euc <- dist(js_data, method="euclidean")
  dst.man <- dist(js_data, method="manhattan")
  dsy.euc <- daisy(js_data, metric="euclidean")
  dsy.man <- daisy(js_data, metric="manhattan")
  ## 両者が同じことを確認
  as.matrix(dst.euc)[1:5,1:5]
  as.matrix(dsy.euc)[1:5,1:5]

  ## 正規化したユークリッド距離とマンハッタン距離の計算
  dst.euc <- dist(scale(js_data), method="euclidean")
  dst.man <- dist(scale(js_data), method="manhattan")
  dsy.euc <- daisy(js_data, metric="euclidean", stand=TRUE)
  dsy.man <- daisy(js_data, metric="manhattan", stand=TRUE)
  ## 正規化の方法が異なることに注意
  as.matrix(dst.man)[10:15,10:15]
  as.matrix(dsy.man)[10:15,10:15]

  ## 以下 daisy による正規化を用いる
  ## 関東の都県同士の距離を表示しなさい
  str(dsy.euc) # 距離行列のもつ情報を見る
  attr(dsy.euc, "Labels") # 県名を確認 (rownames(js_data)でも良い)
  as.matrix(dsy.euc)[8:14, 8:14]
  as.matrix(dsy.man)[8:14, 8:14]
  ## dist/dissimilarity オブジェクトは距離以外の様々な属性 (attributes) を持つ
  ## str(obj) : オブジェクトの構造(structure)を見る
  ## attributes(obj) : 属性を表示(変更)する
  ## attr(obj,属性名) : 特定の属性を表示(変更)する

  ## 大阪と四国の間の距離
  as.matrix(dsy.euc)[27, 36:39, drop=FALSE] # 行列として表示
  as.matrix(dsy.man)["Osaka", # 1行なので標準ではベクトルとして扱われる
                     c("Tokushima","Kagawa","Ehime","Kochi")]

  ## ユークリッド距離とマンハッタン距離の散布図
  plot(dsy.euc, dsy.man,
       xlab="Euclid dist.", ylab="Manhattan dist.")
  plot(dsy.euc, dsy.man, 
       xlim=c(0,3), ylim=c(0,3), # 原点近傍のみ表示
       xlab="Euclid dist.", ylab="Manhattan dist.")
  ## いくつか順序が入れ替わっていることがわかる
#+end_src


* クラスタ間の距離   
** クラスタ間の距離
- クラスタ : いくつかのデータ点からなる集合
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      C_{a}=\left\{\boldsymbol{x}_{i}|i\in\Lambda_{a}\right\},\;
      C_{b}=\left\{\boldsymbol{x}_{j}|j\in\Lambda_{b}\right\},\quad
      C_{a}\cap C_{b}=\emptyset
    \end{equation}
  #+end_src
  #+end_quote
- 2つのクラスタ間の距離 : \(D(C_{a},C_{b})\)
  - データ点の距離から陽に定義する方法
  - クラスタの統合にもとづき再帰的に定義する方法
- 代表的なクラスタ間の距離
  - 最短距離法 (単連結法 ; single linkage method)
  - 最長距離法 (完全連結法 ; complete linkage method)
  - 群平均法 (average linkage method)

** 最短距離法
- 最も近い対象間の距離を用いる方法
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      D(C_{a},C_{b})
      =\min_{\boldsymbol{x}\in C_{a},\;\boldsymbol{y}\in C_{b}} d(\boldsymbol{x},\boldsymbol{y})
    \end{equation}
  #+end_src
  #+end_quote
- 統合前後のクラスタ間の関係
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      D(C_{a}+ C_{b}, C_{c})
      =\min\bigl\{D(C_{a},C_{c}), D(C_{b},C_{c})\bigr\}
      % =\min\left\{D(C_{a},C_{c}), D(C_{b},C_{c})\right\}
    \end{equation}
  #+end_src
  #+end_quote

** 最長距離法
- 最も遠い対象間の距離を用いる方法
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      D(C_{a},C_{b})
      =\max_{\boldsymbol{x}\in C_{a},\;\boldsymbol{y}\in C_{b}} d(\boldsymbol{x},\boldsymbol{y})
    \end{equation}
  #+end_src
  #+end_quote
- 統合前後のクラスタ間の関係
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      D(C_{a}+ C_{b}, C_{c})
      =\max\bigl\{D(C_{a},C_{c}), D(C_{b},C_{c})\bigr\}
      % =\max\left\{D(C_{a},C_{c}), D(C_{b},C_{c})\right\}
    \end{equation}
  #+end_src
  #+end_quote

** 群平均法
- 全ての対象間の平均距離を用いる方法
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      D(C_{a},C_{b})
      =\frac{1}{|C_{a}||C_{b}|}
      \sum_{\boldsymbol{x}\in C_{a},\;\boldsymbol{y}\in C_{b}} d(\boldsymbol{x},\boldsymbol{y})
    \end{equation}
  #+end_src
  #+end_quote
  - ただし \(|C_{a}|\), \(|C_{b}|\) はクラスタ内の要素の数を表す
- 統合前後のクラスタ間の関係
  #+begin_quote
  #+begin_src latex
    \begin{equation}
      D(C_{a}+ C_{b}, C_{c})
      =\frac{|C_{a}|D(C_{a},C_{c})+|C_{b}|D(C_{b},C_{c})}{|C_{a}|+|C_{b}|}
    \end{equation}
  #+end_src
  #+end_quote

** 距離計算に関する注意
- データの性質に応じて距離は適宜使い分ける
  - データ間の距離の選択
  - クラスタ間の距離の選択
- 変数の正規化は必要に応じて行う
  - 物理的な意味合いを積極的に利用する場合はそのまま
  - 単位の取り方などによる分析の不確定性を避ける場合は平均0，分散1に正規化
- データの性質を鑑みて適切に前処理


* 演習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 早稲田大学
** 問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 以下の問に答えなさい
  - 群平均法におけるクラスタの距離の定義
    #+begin_quote
    #+begin_src latex
      \begin{equation}
	D(C_{a},C_{b})
	=\frac{1}{|C_{a}||C_{b}|}
	\sum_{\boldsymbol{x}\in C_{a},\;\boldsymbol{y}\in C_{b}} d(\boldsymbol{x},\boldsymbol{y})
      \end{equation}
    #+end_src
    #+end_quote
    から統合前後のクラスタの距離の関係
    #+begin_quote
    #+begin_src latex
      \begin{equation}
	D(C_{a}+ C_{b}, C_{c})
	=\frac{|C_{a}|D(C_{a},C_{c})+|C_{b}|D(C_{b},C_{c})}{|C_{a}|+|C_{b}|}
      \end{equation}
    #+end_src
    #+end_quote
    を導け

** 解答例
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 定義に従って計算する
  #+begin_quote
  #+begin_src latex
    \begin{align}
      D(C_{a}+C_{b}, C_{c})
      &=
	\frac{1}{|C_{a}+C_{b}||C_{c}|}
	\sum_{\boldsymbol{x}\in C_{a}+C_{b},\;\boldsymbol{y}\in C_{c}}
	d(\boldsymbol{x},\boldsymbol{y})\\
      &=
	\frac{1}{|C_{a}+C_{b}||C_{c}|}
	\sum_{\boldsymbol{x}\in C_{a},\;\boldsymbol{y}\in C_{c}}
	d(\boldsymbol{x},\boldsymbol{y})\\
      &\qquad+
	\frac{1}{|C_{a}+C_{b}||C_{c}|}
	\sum_{\boldsymbol{x}\in C_{b},\;\boldsymbol{y}\in C_{c}}
	d(\boldsymbol{x},\boldsymbol{y})\\
    \end{align}
  #+end_src
  #+end_quote

#+reveal: split
- (続き)
  #+begin_quote
  #+begin_src latex
    \begin{align}
      &=
	\frac{|C_{a}||C_{c}|}{|C_{a}+C_{b}||C_{c}|}
	\frac{1}{|C_{a}||C_{c}|}
	\sum_{\boldsymbol{x}\in C_{a},\;\boldsymbol{y}\in C_{c}}
	d(\boldsymbol{x},\boldsymbol{y})\\
      &\qquad+
	\frac{|C_{b}||C_{c}|}{|C_{a}+C_{b}||C_{c}|}
	\frac{1}{|C_{b}||C_{c}|}
	\sum_{\boldsymbol{x}\in C_{b},\;\boldsymbol{y}\in C_{c}}
	d(\boldsymbol{x},\boldsymbol{y})\\
      &=
	\frac{|C_{a}||C_{c}|}{|C_{a}+C_{b}||C_{c}|}
	D(C_{a}, C_{c})
	+
	\frac{|C_{b}||C_{c}|}{|C_{a}+C_{b}||C_{c}|}
	D(C_{b}, C_{c})\\
      &=
	\frac{|C_{a}|D(C_{a}, C_{c})+|C_{b}|D(C_{b}, C_{c})}
	{|C_{a}|+|C_{b}|}
    \end{align}
  #+end_src
  #+end_quote


* COMMENT 実習
:PROPERTIES:
:reveal_background: #fef4f4
:END:
# 東京大学
** R : 関数 ~hclust()~ 
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 距離行列を用いた階層的クラスタリング
  #+begin_src R :eval no
    hclst <- hclust(d, method = "complete")
    ## d: 距離行列
    ## method: 分析法 (標準は最長距離法，他は"single","average"など)

    ### 系統樹の表示 (一般的な plot のオプションが利用可能)
    plot(hclst)

    ### クラスタの分割
    cutree(tree = hclst, k = NULL, h = NULL)
    ## tree: hclustの結果を指定
    ## k: クラスタ数を指定して分割
    ## h: クラスタ距離を指定して分割

    ### クラスタの分割表示 (cutree とほぼ同様のオプション)
    rect.hclust(tree = hclst, k = NULL, h = NULL)
  #+end_src

** COMMENT 演習: 階層的クラスタリング
:PROPERTIES:
:reveal_background: #EEEEFF
:END:
- [[./code/11-hclust.r][11-hclust.r]] を確認してみよう

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 都道府県別の社会生活統計指標を用いて以下の分析を行いなさい
  - 平均0，分散1に正規化したデータのユークリッド距離を用いて，
    群平均法による階層的クラスタリングを行いなさい
  - クラスタ数を5つとして分割を行いなさい

#+begin_src R :eval no :exports none :tangle yes
  ### 
  ### 練習問題 階層的クラスタリング
  ### 

  ## クラスタリングの実行
  js_dst <- dist(scale(js_data)) # 正規化してユークリッド距離を測る
  js_est <- hclust(js_dst, method="average") # 群平均法
  plot(js_est,
       cex=0.8, # 文字の大きさを調整
       sub="", xlab="", # 表示の一部を消去
       main="euclidean + average") # デンドログラムの表示

  ## クラスタの分割
  k <- 5 # 分割数を指定
  plot(js_est,
       hang=-1, # ラベルを揃えて表示
       cex=0.8, 
       sub="", xlab="", main="")
  rect.hclust(js_est, k=k, border="orange") 
  ## 結果の確認 (各クラスタ内の県名を表示)
  js_clst <- cutree(js_est, k=k) # デンドログラムを分割
  js_pref <- rownames(js_data) # 県名の取得
  for(i in 1:k){
      cat("=== cluster",i,"===\n")
      print(js_pref[js_clst==i])
  }

  ## 主成分分析を併用して表示 (参考)
  js_pca <- prcomp(js_data, scale.=TRUE) # データを正規化      
  plot(predict(js_pca),
       pch=js_clst, # クラスタ毎に形を変える
       col="gray") 
  text(predict(js_pca), 
       labels=paste0("  ",rownames(js_data)), # 空白を加えて県名を表示
       adj=c(0,0.5), # ラベルの位置をxは右寄せ(0)，yは真中(0.5)に指定
       col=js_clst, # クラスタ毎に色を変える
       cex=0.8) # 文字の大きさを調整
  ## 最大クラスタを再評価
  table(js_clst) # 最大を確認
  m <- which.max(table(js_clst)) # 最大クラスタの番号を取り出す
  js_pca <- prcomp(js_data[js_clst==m,], scale.=TRUE) # 最大クラスタのみ処理
  plot(predict(js_pca),
       pch=m, # クラスタの形を指定
       col="gray") 
  text(predict(js_pca),
       labels=paste0("  ",rownames(js_data[js_clst==m,])),
       adj=c(0,0.5), 
       col=m, # クラスタの色を指定
       cex=0.8) 
#+end_src

** R : 関数 ~cluster::agnes()~ 
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- ~cluster~ パッケージによる階層的クラスタリング
  #+begin_src R :eval no
    agns <- agnes(x, metric = "euclidean", stand = FALSE,
                  method = "average")
    ## x: データフレーム，または距離行列
    ## metric: 距離 (標準はユークリッド距離，他は"manhattan"など)
    ## stand: 正規化(平均と絶対偏差の平均による)の有無
    ## method: 分析法 (標準は群平均法，他は"single","complete"など)

    ### 系統樹の表示 (一般的な plot のオプションが利用可能)
    plot(agns, which.plots=2)
    ## which.plots=1 は評価の際に利用
  #+end_src
- 関数 ~cutree()~, ~rect.hclust()~ も利用可能

** R : 関数 ~cluster::clusplot()~ 
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 2次元でのクラスタ表示
  #+begin_src R :eval no
    clusplot(x, clus, stand =FALSE, 
	     lines = 2, shade = FALSE, labels= 0, 
	     col.p = "dark green", col.txt = col.p, col.clus = 5)
    ## x: データフレーム
    ## clus: クラスタ分割
    ## stand: 正規化の有無
    ## lines: クラスタ間の繋がりの表示 (0:無，1:外，2:中心)
    ## shade: 網掛けの有無
    ## labels: ラベルの表示 (0:無，2:データとクラスタ, 3:データ, 4:クラスタ, など)
    ## col.p/txt/clue: データ点・文字・クラスタの色指定
  #+end_src

** データセットの準備
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- Webアンケート (都道府県別好きなおむすびの具)
  - 「ごはんを食べよう国民運動推進協議会」(平成30年解散) \\
    (閉鎖) http://www.gohan.gr.jp/result/09/anketo09.html
  - データ https://noboru-murata.github.io/multivariate-analysis/data/omusubi.csv

#+reveal: split
   - アンケート概要 (Q2の結果を利用)
     : 【応募期間】 2009年1月4日～2009年2月28日
     : 【応募方法】 インターネット、携帯ウェブ
     : 
     : 【内　　容】
     : Q1. おむすびを最近１週間に、何個食べましたか？
     :     そのうち市販のおむすびは何個でしたか？
     : Q2. おむすびの具では何が一番好きですか？
     :     A.梅 B.鮭 C.昆布 D.かつお E.明太子 F.たらこ Ｇ.ツナ H.その他
     : Q3. おむすびのことをあなたはなんと呼んでいますか？
     :     A.おにぎり B.おむすび C.その他
     : Q4. おむすびといえば、どういう形ですか？
     :     A.三角形 B.丸形 C.俵形 D.その他
     : 
     : 【回答者数】
     : 男性     9,702人     32.0%
     : 女性    20,616人     68.0%
     : 総数    30,318人    100.0%

** 練習問題
:PROPERTIES:
:reveal_background: #fef4f4
:END:
- 上記のデータを用いて以下の分析を行いなさい
  #+begin_src R :eval no
    ### データの読み込み 
    om_data <- read.csv(file="data/omusubi.csv", row.names=1)
  #+end_src
  - Hellinger距離を用いて距離行列を作成しなさい
    #+begin_quote
    \(\boldsymbol{p},\boldsymbol{q}\)
    を確率ベクトルとして
    定義される確率分布の間の距離
    #+begin_src latex
      \begin{equation}
	d_{hel}(\boldsymbol{p},\boldsymbol{q})
	=
	\frac{1}{\sqrt{2}}d_{euc}(\sqrt{\boldsymbol{p}},\sqrt{\boldsymbol{q}})
      \end{equation}
    #+end_src
    #+end_quote
  - 群平均法による階層的クラスタリングを行いなさい
  - クラスタ数を定めて2次元でのクラスタ表示を作成しなさい

#+begin_src R :eval no :exports none :tangle yes
  ### 
  ### 練習問題 階層的クラスタリング
  ### 

  ## パッケージの読み込み
  library(cluster) # 既に読み込んでいれば不要

  ## データの読み込み("omusubi.csv"を用いる)
  om_data <- read.csv(file="data/omusubi.csv", row.names=1)
  
  ## データの視覚化
  ## pairs plot
  pairs(om_data,
        col="blue",
        panel=panel.smooth, # 各散布図の傾向を見る回帰曲線を付加
        main="Favorite Filling in Omusubi (2009)")
  ## bar plot
  barplot(t(as.matrix(om_data)), # barplot用にデータフレームを変換
          col=rainbow(8), # 具材ごとに色を変える
          legend.text=colnames(om_data), # 色の凡例を付加
          args.legend=list(cex=0.6), # 凡例の大きさを調整
          horiz=TRUE, # 横向きで作成
          las=1, # ラベルを水平に表示
          cex.names=0.6, # ラベルの文字の大きさを調整
          xlim=c(0,120), # 凡例のためにx軸に余白を付加
          axes=FALSE, # 座標軸を描かない
          main="Favorite Filling in Omusubi (2009)")

  ## Hellinger距離の計算
  om_dsy <- 1/sqrt(2)*daisy(sqrt(om_data/100))
  ## 定数倍を気にしないのであれば daisy(sqrt(om_data)) でよい
  
  ## 階層的クラスタリング
  om_agns <- agnes(om_dsy) 
  plot(om_agns, which.plot=2, cex=0.8,
       main="Dendrogram of Omusubi Data")

  ## クラスタ数7として2次元のクラスタ表示
  k <- 7
  clusplot(x=om_data,
           clus=cutree(om_agns, k=k),
           labels=2,
           col.p="green", col.txt="blue", col.clus="orange", cex=0.8,
           main="Cluster of Omusubi Data")
#+end_src


* 解析事例
# 早稲田大学
** 都道府県別の社会生活統計指標
- 各データを正規化
  #+begin_example
  Forest : 森林面積割合 (%) 2014年
  Agri : 就業者１人当たり農業産出額(販売農家）(万円) 2014年
  Ratio : 全国総人口に占める人口割合 (%) 2015年
  Land : 土地生産性（耕地面積１ヘクタール当たり）(万円) 2014年
  Goods : 商業年間商品販売額［卸売業＋小売業］（事業所当たり）(百万円) 2013年
  #+end_example
- Euclid 距離 + 群平均法

#+reveal: split
#+begin_src R :file figs/10_jsclst.png :exports results :results graphics :tangle yes
  ## 階層的クラスタリングの実行:
  js_dst <- dist(scale(js_data)) # 正規化してユークリッド距離を測る
  js_est <- hclust(js_dst, method="average") # 群平均法
  if(Sys.info()["sysname"]=="Darwin"){par(family="HiraginoSans-W4")}
  plot(js_est,
       sub="", xlab="", cex=0.8,
       main="Euclid 距離 + 群平均法") # デンドログラムの表示
#+end_src

#+CAPTION: 社会生活統計指標のクラスタ分析 (デンドログラム)
#+NAME: fig:10_jsclst
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_jsclst.png]]


#+reveal: split
#+begin_src R :file figs/10_jscut.png :exports results :results graphics :tangle yes
  k <- 5 # 分割数を指定
  if(Sys.info()["sysname"]=="Darwin"){par(family="HiraginoSans-W4")}
  plot(js_est,
       hang=-1, cex=0.8,
       sub="", xlab="", main="")
  rect.hclust(js_est, k=k, border="orange") 
#+end_src

#+CAPTION: クラスタの分割
#+NAME: fig:10_jscut
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_jscut.png]]

** COMMENT 5クラスタに分割する例
#+reveal: split
- 5クラスタに分割
  #+begin_src R :exports results :tangle yes
    ## 結果の確認 (各クラスタ内の県名を表示)
    js_clst <- cutree(js_est, k=k) # デンドログラムを分割
    js_pref <- rownames(js_data) # 県名の取得
    for(i in 1:k) {
      cat("=== cluster ",i,"===\n")
      print(js_pref[js_clst==i])
    }
  #+end_src

** 都道府県別好きなおむすびの具
- Webアンケート
  - 「ごはんを食べよう国民運動推進協議会」(平成30年解散) \\
    http://www.gohan.gr.jp/result/09/anketo09.html (閉鎖) 
  - データ https://noboru-murata.github.io/multivariate-analysis/data/omusubi.csv

#+reveal: split
- アンケート概要 (Q2の結果を利用)
  #+begin_example
  【応募期間】 2009年1月4日～2009年2月28日
  【応募方法】 インターネット、携帯ウェブ
  
  【内　　容】
   Q1. おむすびを最近１週間に、何個食べましたか？
       そのうち市販のおむすびは何個でしたか？
   Q2. おむすびの具では何が一番好きですか？
       A.梅 B.鮭 C.昆布 D.かつお E.明太子 F.たらこ Ｇ.ツナ H.その他
   Q3. おむすびのことをあなたはなんと呼んでいますか？
       A.おにぎり B.おむすび C.その他
   Q4. おむすびといえば、どういう形ですか？
       A.三角形 B.丸形 C.俵形 D.その他
  
  【回答者数】
   男性     9,702人     32.0%
   女性    20,616人     68.0%
   総数    30,318人    100.0%
  #+end_example
- Hellinger 距離 + 群平均法

#+reveal: split
- データの内容
  #+begin_src R :exports results :tangle yes
    ## パッケージの読み込み
    library(cluster)
    library(tidyverse) 
    library(ggfortify)
    library(GGally)
    library(ggdendro)
    ## データの読み込み("omusubi.csv"を用いる)
    om_data <- read.csv(file="data/omusubi.csv", row.names=1)
    pref <- read.csv(file="data/prefecture.csv", row.names=1)
    ## 表示
    ## foo <- head(om_data,10) # print(om_data)
    ## rbind(c("Name",names(foo)),data.frame(rownames(foo),foo))
    ## 1つだと処理が難しいので北海道は東北に含める
    areaname <- c("tohoku","kanto","chubu", 
                  "kinki","chugoku","chikoku","kyushu")
    area <- rep(areaname,c(7,7,9,7,5,4,8))
    rownames(om_data) <- pref$jp
  #+end_src

#+begin_src R :file figs/10_ombar.png :exports results :results graphics :tangle yes
  ## 県別の人気比率:
  om_long <- om_data %>%
      tibble::rownames_to_column(var = "prefecture") %>%
      pivot_longer(-prefecture)
  ggplot(om_long,aes(x=prefecture,y=value,fill=name)) +
      geom_bar(stat="identity",position="fill") +
      coord_flip() +
      scale_x_discrete(limits=rev(rownames(om_data))) +
      labs(title="おむすびの具 県別人気アンケート (2009)",
           x="県名",y="人気比率") +
      theme(legend.position="top",
            text=element_text(family="HiraMaruProN-W4"))
#+end_src

#+CAPTION: 県別の人気比率
#+NAME: fig:10_ombar
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_ombar.png]]

#+reveal: split
#+begin_src R :file figs/10_ompairs.png :exports results :results graphics :tangle yes
  ## データの散布図: 
  ggpairs(data.frame(om_data,area),
          columns=1:ncol(om_data), mapping=aes(colour=area)) +
      labs(title="おむすびの具 県別人気アンケート (2009)") +
      theme(text=element_text(family="HiraMaruProN-W4"))
#+end_src

#+CAPTION: データの散布図
#+NAME: fig:10_ompairs
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_ompairs.png]]



#+reveal: split
#+begin_src R :file figs/10_omclst.png :exports results :results graphics :tangle yes
  ## 距離計算
  dst <- daisy(sqrt(om_data)) # Hellinger距離
  ## 階層的クラスタリング:
  hclst <- agnes(dst) # dianaという関数もある
  ggdendrogram(as.dendrogram(hclst),
               rotate=TRUE, theme_dendro=FALSE) +
      labs(title="おむすびの具人気アンケートによるクラスタ分析",
           x="県名",y="距離") +
      theme(text=element_text(family="HiraMaruProN-W4"))
#+end_src

#+CAPTION: 県別の人気比率
#+NAME: fig:10_omclst
#+ATTR_HTML: height 100%
#+ATTR_LATEX: :width 0.6\linewidth
[[file:figs/10_omclst.png]]
   

* 次回の予定
  - 第1日 : 基本的な考え方と階層的方法
  - *第2日 : 非階層的方法と分析の評価*

* Footnotes
* COMMENT ローカル変数
# Local Variables:
# org-latex-listings: minted
# End:
